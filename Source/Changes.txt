====================================================================================================
Changes in 1.0.7:
====================================================================================================
- Bugfix: Events IDiagramPresenter.DiagramChanging and IDiagramPresenter.DiagramChanged were not 
  raised when assigning Display.Diagram directly
- Bugfix: Project will be closed now when an exceptions occures while loading
- Bugfix: LayerPresenter calls Clear() when project closes
- Bugfix: Internal Exceptions when executing tool actions on a display without diagram
- Bugfix: Displayed section of the diagram and scrollbar positions were wrong when changing the 
  diagram of the display component
- Bugfix: Item "More.." of the style selection comboBox no longer opens the design editor window in 
  background
- Bugfix: Some values are invisible after changing their values in design editor's property editor
- Bugfix: When renaming a line-, cap or character style, the selected style changes when committing 
  the property change
- Bugfix: A shape is not selectable by clicking if an other shape, that is hidden by layer settings, 
  covers it
- Bugfix: Diagram.CreateImage no longer raises a NullReferenceException when diagram has no 
  DisplayService
- Bugfix: NShape Designer's layout dialog now closes when closing the main window
- Bugfix: NShape Designer's layout dialog now closes when closing the project.
- Bugfix: NShape Designer's main menu items "Send to Back" / "Bring to Front" are functional now
- Improvement: All Dialogs of WinFormsUI will now close when Esc key is pressed
- Improvement: StyleListBox control calculates text size of the label and fills the rest of the item 
  with the style's graphical representation
- Bugfix: ToolCache.NotifyStyleChanged will no longer be called when selecting a style for a shape 
  instance in property editor
- Bugfix: Diagram's background grid 'wanders' when zooming 
- Bugfix: LineStyles with LineWidth values > 9 will be rendered a little thinner each time the line 
  style selection combobox is opened in property editor
- Bugfix: Diagram.Export() does no longer throw a NullReferenceException in case the diagram has no 
  DisplayService
- Bugfix: Saving a diagram as TIFF image will no longer throw an InvalidArgumentException
- Bugfix: AutoUpgradeEnabled of Save-/LoadFileDialog's will only be set under VISTA (and newer OSes)
- New defines for debug info: DEBUG_DIAGNOSTICS and DEBUG_UI
- Improvement: An exception with proper error message is thrown when trying to save changes in a ChachedRepository 
  without store
- Category of the following properties:
	  CaptionedShapeBase.Text is now "Data" instead of "Text"
	  CaptionedShapeBase.CharacterStyle is now "Appearance" instead of "Text"
	  CaptionedShapeBase.ParagraphStyle is now "Appearance" instead of "Text"
	  Diagram.Name is now "General" instead of "Identification"
	  Diagram.Title is now "General" instead of "Identification"
	  Diagram.Id is now "General" instead of "Identification"
- Property CaptionedShapeBase.CaptionCount is not visible in PropertyGrid any longer
- BugFix: Orientation of Captions's text is corrected only for shape angle >90° and <270° instead 
  of >90° and <=270°
- Changed value of LayerIds.All from int.MinValue to int.MaxValue.
- Bugfix: Display.CreateImage() no longer throws a NullReferenceException if no DisplayService is assigned
  (means: If Diagram is not displayed in a Display
- New Behavior on Display.ZoomWithMouseWheel = False:
  You can scroll up/down via mouse wheel. When Shift is pressed, you can scroll horizontally and with 
  pressed Ctrl key, you can zoom in/out.
- NShape Designer: Title of the diagram will be displayed properly on the tab when renameing a diagram
- Display: Scrolling with arrow keys enabled
- Display: Improved scroll bar showing/hiding
- New behavior of the PointerTool: When hovering a shape's caption, you can drag the shape away. When 
  clicking without moving the mouse, you can edit the caption.
  To reflect this change, a move cursor is shown instead of the 'Edit Text' cursor.
- New Property "PropertyDisplayMode" of PropertyController: Specifies the behavior of shape properties
  the user may not edit due to NShape security restrictions. 
  Default behavior: Non-editable properties are read only. 
  Alternative behavior: Non-editable properties are invisible.
- Changed ReqiredPermissions attributes of the following properties:
	  Shape.ShapeType:  				None 		-> ModifyData
	  Style.Name						ModifyData	-> Design
	  Style.Title						ModifyData	-> Design
	  CapStyle.CapShape					Present		-> Design
	  CapStyle.CapSize					Present		-> Design
	  CapStyle.ColorStyle				Present		-> Design
	  CharacterStyle.ColorStyle			Present		-> Design
	  CharacterStyle.FontFamily			Present		-> Design
	  CharacterStyle.FontName			Present		-> Design
	  CharacterStyle.Size				Present		-> Design  
	  CharacterStyle.SizeInPoints		Present		-> Design
	  CharacterStyle.Style				Present		-> Design
	  CharacterStyle.					Present		-> Design
	  ColorStyle.Color					Present		-> Design
	  ColorStyle.ConvertToGray			Present		-> Design
	  ColorStyle.Transparency			Present		-> Design
	  FillStyle.AdditionalColorStyle	Present		-> Design
	  FillStyle.BaseColorStyle			Present		-> Design
	  FillStyle.ConvertToGrayScale		Present		-> Design
	  FillStyle.FillMode				Present		-> Design
	  FillStyle.FillPattern				Present		-> Design
	  FillStyle.Image					Present		-> Design
	  FillStyle.ImageCompressionQuality	Present		-> Design
	  FillStyle.ImageGammaCorrection	Present		-> Design
	  FillStyle.ImageLayout				Present		-> Design
	  FillStyle.ImageTransparency		Present		-> Design
	  LineStyle.ColorStyle				Present		-> Design
	  LineStyle.DashCap					Present		-> Design
	  LineStyle.DashType				Present		-> Design
	  LineStyle.LineJoin				Present		-> Design
	  LineStyle.LineWidth				Present		-> Design
	  ParagraphStyle.Alignment			Present		-> Design
	  ParagraphStyle.Trimming			Present		-> Design
	  ParagraphStyle.Padding			Present		-> Design
	  ParagraphStyle.WordWrap			Present		-> Design
- Bugfix: Diagram now draws correctly if the Display component's Left property is > 0.
- Bugfix: Displays created dynamically via code did not invalidate the grips correctly.
- Bugfix: Lines with thick line styles were not inserted correctly in the diagram's spatial index and
  therefore not clickable sometimes
- Switched position of the CustomizableMetaFile's connection- and resize control point.
- Content of Shape.Tag is no longer overwritten when layouting shapes.
- Changed icons for "Visible/Invisible" and "Active/Inactive" in layer list view
- Display.CurrentTool can be set even if no diagram is displayed.
- Bugfix: Design editor control did not redraw correctly when resizing the design editor dialog.
- Preview images for tool icons of text- and label shapes draw their text bigger
- Bugfix: When switching diagrams in NShape designer, selected shapes of the diagram switched to 
  are preselected in the property presenter.
- Shapes can not be dragged outside the display bounds any longer.
- Splitted source code file "LinearShape.cs" into "LinearShape.cs", "PolyLineBase.cs" and "CircularArcBase.cs"
- New Behavior: Shapes with editable captions show a "edit text area" hint.
  This is because the methods CaptionedShapeBase.GetCaptionBounds and CaptionedShapeBase.GetCaptionTextBounds 
  always return placeholder bounds in case there is no text in the caption
- Bugfix: When dragging a connection point to the center point of a shape, the connection points were not 
  highlighted correctly.
- Bugfix: Shapes derived from "TextBase" now return false when moving a control point with AutoSize 
  enabled.
- EntityPropertyDefinitions are sorted by type (EntityFieldDefinitions first InnerObjectDefinitions last)
  in the constructor of the ShapeType. When adding new properties to the persistance interface,
  you do not have to sort the propertyDefinitions manually any longer
- When adding a style to the design, the style's referenced styles are validated (style must exist and 
  style must not be empty).
- NShape designer: Property presenter's model object tab is hidden if there are no model objects in the 
  project
- Display: New context menu item "Copy as Image" that exports the currently selected shapes (or the 
  diagram if no shapes are selected) to the clipboard as PNG and EMF+ file
- NShape designer: New menu items in "Edit" menu: "Copy as Image", "Select All", "Select all Shapes of Type",
  "Select all Shapes of Template" and "Unselect All"
- Bugfix: Corrected/Improved the calculation of the X axis aligned bounding rectangle of the following 
  shapes:
	  ElectricalShapes Transformer
	  ElectricalShapes AutoSwitch
	  ElectricalShapes Rectifier
	  ElectricalShapes Earther
	  FlowChartShapes Terminator
	  FlowChartShapes Input / Output
	  FlowChartShapes Document
	  FlowChartShapes Offpage Connector
	  FlowChartShapes Online Storage
	  FlowChartShapes Drum Storage
	  FlowChartShapes Disk Storage
	  FlowChartShapes Tape Storage
	  FlowChartShapes Preparation
	  FlowChartShapes Manual Input
	  FlowChartShapes Display
	  FlowChartShapes Tape
	  FlowChartShapes Manual Operation
	  FlowChartShapes Card
- Improved ElectricalShapes.Transformer's visual appearance and resize behavior
- Improved ElectricalShapes.Transformer's hit testing
- New Behavior of Display: When zooming out/in, the grid scales with the zoom factor  
- Layouter creates undo commands so the layouting is completly undoable
- Aggregated shapes keep their original ZOrder when aggregating. 
- When creating an aggregated shape with the display's context menu, the aggregation's base shape is 
  no longer the clicked shape but the bottommost shape.
- New demo program: The WPF Demo demonstrates how to integrate NShape in WPF applications with the 
  WindowsFormsHost component. 
- Replaced several string comparisons using the == operator by a string.Compare() using the comparison 
  parameter "InvariantCultureIgnoreCase"
- Marked "CalculateConnectionFoot(int x1, int y1, int x2, int y2)" as [Obsolete] because in the next 
  version it will be replaced
- Bugfix: Diagram's spatial index did store a cell for a shape if a cell with the same cell key already 
  existed
- NShapeExceptions are serializable now
- If the permission for executing a command is not granted, a NShapeSecurityException is thrown instead 
  of an InvalidOperationException.
- The ImageEditor dialog (that appears then selecting an Image for a diagram, shape or style) now sets
  the name of the image file.
- New Behavior of Display: If a shape is moded outside the diagram bounds, the display it will not 
  scroll it into view.
- Bugfix: Solved several issues concerning scrolling and scroll bars of the display component.
- Interface IDisplayPresenter: New Method Update() forces the display to update immediately. 
  This results in a subjectivly faster preview when dragging many shapes, comlpex shapes or picture 
  shapes with large pictures.
- NShape Designer: New projects or projects saved unter a different file name now appear in the 
  "Recent Projects" list right after saving.
- When cancelling or closing the file save dialog while saving, the whole save operation is cancelled 
  and the project will not be closed.
- Bugfix: Padding of TextShape's Paragraph style was calculated twice. Therefore the spacing between 
  shape's outline and text was too large.
- Changed behavior of RepulsionLayouter: The user/the application HAS to select the shapes to be 
  layouted. Labels (which change their relative position to the connected partner shape when moved) 
  are no longer automatically excluded from the layout process. Labels connected to lines via 
  PointToShape connection no longer cause a crash.
- Changes in Tutorial:
  * Shapes are now created in the middle of the diagram as they are not visible without scrolling 
    otherwise
  * Added necessary call to Layouter.Prepare() before executing the layouter
  * Changed references to NShape assemblies to "Version Specific" = False
- Demo program "Shuffle Demo" renamed to "VB Demo"
- Bugfix: SQLStore now stores inner objects "ColumnNames" of SoftwareArchitectureShapes.Entity shapes.
- Bugfix: When redoing an undone create layers command, the re-created layers do not show in layer editor
- Bugfix: AggregatedShape threw Exception when setting Width or Height to 0
- Bugfix: FlowLayouter no longer crashes when layouting in "Bottom Up" mode.
- Bugfix: NShape Designer calls SaveAs when trying to save a new project but database repositories do 
  not support "SaveAs".
- Changed behavior: When creating a new template from a shape (via context menu), the shape of the new 
  template is not dependent from any other template.
- When saving a project, ...
  * ... the project is saved in a temporary file ("~ProjectName.xml") that is renamed after saving 
    completed successfully
  * ... when overwriting or saving an existing project, a backup file is created ("ProjectName.bak")
- Bugfix: Changing a template's shape only worked once.

Known issues:
- x64/AnyCPU on x64 OS: Customizable metafiles are filled with solid white.
- x64/AnyCPU on x64 OS: Bitmap images with less than 32 bit color depth are not rendered correctly
  if transparency > 0 is specified.
  
====================================================================================================
Changes in 1.0.6:
====================================================================================================
- Replaced all EventHandler types with generic EventHandler<TEventArgs>:
	TemplateEditorSelectedEventHandler 	=>  	EventHandler<TemplateEditorEventArgs>
	ToolEventHandler			=>	EventHandler<ToolEventArgs>
	StyleSelectedEventHandler		=> 	EventHandler
- EventArgs ShowTemplateEditorEventArgs renamed to TemplateEditorEventArgs
- Event IDiagramPresenter.ShapeInsert renamed to IDiagramPresenter.ShapesInserted
- Event IDiagramPresenter.ShapeRemove renamed to IDiagramPresenter.ShapesRemoved
- DiagramPresenterShapeEventArgs renamed to DiagramPresenterShapesEventArgs

- Event IDiagramPresenter.ShapesInserted will now be raised for the display that executed the tool inserting the shape
- Event IDiagramPresenter.ShapesRemoved will now be raised for the display that executed the tool inserting the shape
- Bugfix: ModelObjects in custom library namespaces were not found when saving to XML
- XML Summaries added for all public and protected Interfaces, Classes, Methods and Properties (No more Warnings)
- Errors in ScrollBar position calculation when displaying a new diagram fixed
- ScrollBars update now when changing diagram's Width/Height properties in PropertyPresenter
- LayerListView entering rename mode on every click fixed
- Icons of LayerListview improved (more contrast for better visibility on high resolutions
- DiagramPresenter/DiagramController: Methods added for adding/assigning/removing shapes to/from layers
- Shape's "Layer" property shows as readonly property in PropertyPresenter
- New Event IDiagramPresenter.UserMessage used for notifying the user that a non-visual component cannot execute a command/action or encountered a problem/exceptional situation
- "Label"-Shape: Improved "Pin" icon when not connected (bigger and looks more like pin)
- "Label"-Shape: Line between shape and gluepoint is drawn when not connected
- New "ModelDemo" demonstarting the usage of IModelObject and visual property binding between shapes and model objects.
- Added a descriptive text for most example diagrams
- Display: Fixed issue that hit test on top border will always fail
- Click on diagram shows diagram properties in PropertyPresenter
- TestSuite: Added new ModelMapping test
- New Property IModelObject.ShapeCount
- StyleListBox / UITypeEditor for Styles: New Item "More..." that opens the desgign editor on a click
- Added Constructor overloads for Style UITypeEditor: New property Project (needed for item "More...")
- StyleListBox / UITypeEditor for Styles: Styles are sorted by their titles now
- EntityShape: Fixed endless loop / infinite memory allocation when editing the "ColumnNames" property in PropertyPresenter
- EntityShape: Lines connected to GluePoints of additional labels will be disconnected when deleting the labels
- Visual mapping implementations added for some shape properties that were missing
- InPlace-Texteditor for Shapes: Fixed invalidation issues
- InPlace-Texteditor for Shapes: Grows/shrinks correctly when editing, especially for shapes with AutoSize-Property depending on the shape's text (Text and aLabel shapes)
- PictureShape: New base class PictureBase in NShape core assembly
- PictureShape: Text will be displayed below the image, image will be displayed in the remaining area
- Tool: Added minimum drag distance: the mouse has to move the Minimum drag distance defined by the OS before a mouse move with pressed button is considered as drag action
- Tool: Improved internal event handling
- Line Tools: New feature "Extending lines" added
- NShape Designer: Added EventMonitor tool
- NShape designer: Improved handling of "New Project..." and "Save project" / "Save Project as..."
- NShape designer: Added new "Debug Toolbar", only available in debug mode for visualizing invalidated areas and occupation of the diagram's spatial index
- NShape designer: Added new setting "Grid Color" to display settings dialog.
- NShape designer: Diagram tabs's text will change accordingly when modifying the diagram's title
- NShape Designer: Snap-To-Grid can emporarily deactivated by holding Ctrl key
- Fixed issue that linearShapes cannot connect to ConnectionPoints of shapes
- When deleting a selected (point-to-shape connected) linear shape, the highlighted connected shapes will be invalidated correctly now
- Missing "CommandExecuted" event (before "CommandAdded" event) is now raised when calling Project.ExecuteCommand()
- "Export Diagram" dialog: Fixed "OutOfMemory" Exception when selecting high DPI values for large diagrams (resulting in bitmaps larger than 16000 x 16000)
- "Export Diagram" dialog: Added file format to the description (file format selection radio buttons)
- Changed default background color of diagrams to white (in fact a "White to very light gray" gradient)
- Changed parameter order in some of the Geometry functions so that all methods follow the same parameter ordering scheme and match the method name: E.g. RectangleContainsPoint(p, rectangle) -> RectangleContainsPoint(rectangle, p)
- Added descriptions for styles and a "what to edit where" overview table to documentation
- Dialogs of the WinFormsUI assembly now display the icon of their host application instead of the NShape icon
- Reordered Tab-sequence of controls in WinformsUI's dialogs
- Removing a shape from LayerIds.All / LayerIds.None will work now as expected (shape will be removed from all/no layers)
- DesignEditor: Fixed bug when changing a style's name, undoing and redoing that change
- Unified version info for all assemblies
- New Events: IRepository.ShapeConnectionInserted and IRepository.ShapeConnectionDeleted
- New Methods: IDiagramPresenter.InsertShapes
- New Methods: IDiagramPresenter.InsertShape(Shape shape), IDiagramPresenter.InsertShapes(IEnumerable<Shape> shapes), IDiagramPresenter.DeleteShape(Shape shape, bool withModelObjects), IDiagramPresenter.DeleteShapes(IEnumerable<Shape> shapes, bool withModelObjects), IDiagramPresenter.Cut(), IDiagramPresenter.Copy(), IDiagramPresenter.Paste()
- Display: Property "ShowScrollbars" works correct now
- RepulsionLayouter: Fixed undesired behaviour with unconnected lines and connected Label shapes
- Fixed some issues when splitting aggregated shapes created from a template
- "Find model" in ModelTreeViewPresenter automatically scrolls to found shapes in die current diagram
- Images of XML repositories are stored using the image's name and its id instead of using its id only: "[ImageName] [Id].png" instead of "[Id].png"
