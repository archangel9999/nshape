<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Dataweb.NShape</name>
    </assembly>
    <members>
        <member name="T:Dataweb.NShape.Advanced.IModelMapping">
            <summary>
            Defines the mapping of shape properties to model properties.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IEntity">
            <summary>
            Defines a type that can be read from and written into a repository.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IEntity.AssignId(System.Object)">
            <summary>
            Assigns a new unique Id. May only be called if there is no Id yet.
            Otherwise, an exception is thrown.
            </summary>
            <param name="id">Valid id for current repository.</param>		
        </member>
        <member name="M:Dataweb.NShape.Advanced.IEntity.LoadFields(Dataweb.NShape.Advanced.IRepositoryReader,System.Int32)">
            <summary>
            Loads the fields of the entity.
            </summary>
            <param name="reader">Repository reader to read from</param>
            <param name="version">Version of repository data</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IEntity.LoadInnerObjects(System.String,Dataweb.NShape.Advanced.IRepositoryReader,System.Int32)">
            <summary>
            Loads the inner objects of the given property.
            </summary>
            <param name="propertyName">Property of inner objects</param>
            <param name="reader">Repository reader to read from</param>
            <param name="version">Version of repository data</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IEntity.SaveFields(Dataweb.NShape.Advanced.IRepositoryWriter,System.Int32)">
            <summary>
            Saves the fields of the entity.
            </summary>
            <param name="writer">Repository writer to write to</param>
            <param name="version">Version of repository data to be written</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IEntity.SaveInnerObjects(System.String,Dataweb.NShape.Advanced.IRepositoryWriter,System.Int32)">
            <summary>
            Saves the inner objects of the given property.
            </summary>
            <param name="propertyName">Property of the inner objects</param>
            <param name="writer">Repository writer to write to</param>
            <param name="version">Version of repository data to be written</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IEntity.Delete(Dataweb.NShape.Advanced.IRepositoryWriter,System.Int32)">
            <summary>
            Deletes the entity from the repository.
            </summary>
            <param name="writer">Repository writer to use for the deletion</param>
            <param name="version">Version of repository data</param>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IEntity.Id">
            <summary>
            Indicates the id of the entity.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ModelMappingBase.#ctor">
            <summary>
            Constructor for IEntity CreateInstanceDelegate: Creates an empty instance for loading from Repository
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.NumericModelMapping.#ctor(System.Int32,System.Int32,Dataweb.NShape.Advanced.NumericModelMappingType)">
            <summary>
            Constructs a new NumericModelMapping instance.
            </summary>
            <param name="shapePropertyId">PropertyId of the shape's property.</param>
            <param name="modelPropertyId">PropertyId of the model's property.</param>
            <param name="mappingType">
            Type of the mapping:
            IntegerFloat e.g. means model's integer property to shapes float property.
            </param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.NumericModelMapping.#ctor(System.Int32,System.Int32,Dataweb.NShape.Advanced.NumericModelMappingType,System.Single,System.Single)">
            <summary>
            Constructs a new NumericModelMapping instance.
            </summary>
            <param name="shapePropertyId">PropertyId of the shape's property.</param>
            <param name="modelPropertyId">PropertyId of the model's property.</param>
            <param name="mappingType">
            Type of the mapping:
            IntegerFloat e.g. means model's integer property to shapes float property.
            </param>
            <param name="intercept">Defines an offset for the mapped value.</param>
            <param name="slope">Defines a factor for the mapped value.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.NumericModelMapping.#ctor">
            <summary>
            Constructor for IEntity CreateInstanceDelegate: Creates an empty instance for loading from Repository
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.NumericModelMapping.Slope">
            <summary>
            Defines a factor for the mapping.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.NumericModelMapping.Intercept">
            <summary>
            Defines an offset for the mapping.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.FormatModelMapping.#ctor(System.Int32,System.Int32,Dataweb.NShape.Advanced.FormatModelMappingType)">
            <summary>
            Constructs a new FormatModelMapping instance.
            </summary>
            <param name="shapePropertyId">PropertyId of the shape's property.</param>
            <param name="modelPropertyId">PropertyId of the model's property.</param>
            <param name="mappingType">
            Type of the mapping:
            IntegerString e.g. means model's integer property to shapes string property.
            </param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.FormatModelMapping.#ctor(System.Int32,System.Int32,Dataweb.NShape.Advanced.FormatModelMappingType,System.String)">
            <summary>
            Constructs a new FormatModelMapping instance.
            </summary>
            <param name="shapePropertyId">PropertyId of the shape's property.</param>
            <param name="modelPropertyId">PropertyId of the model's property.</param>
            <param name="mappingType">
            Type of the mapping:
            IntegerString e.g. means model's integer property to shapes string property.
            </param>
            <param name="format">The format for the mapped value.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.FormatModelMapping.#ctor">
            <summary>
            Constructor for IEntity CreateInstanceDelegate: Creates an empty instance for loading from Repository
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.StyleModelMapping.#ctor(System.Int32,System.Int32,Dataweb.NShape.Advanced.StyleModelMappingType)">
            <summary>
            Constructs a new StyleModelMapping instance.
            </summary>
            <param name="shapePropertyId">PropertyId of the shape's property.</param>
            <param name="modelPropertyId">PropertyId of the model's property.</param>
            <param name="mappingType">
            Type of the mapping:
            IntegerStyle e.g. means model's integer property to shapes style property.
            </param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.StyleModelMapping.#ctor(System.Int32,System.Int32,Dataweb.NShape.Advanced.StyleModelMappingType,Dataweb.NShape.IStyle)">
            <summary>
            Constructs a new StyleModelMapping instance.
            </summary>
            <param name="shapePropertyId">PropertyId of the shape's property.</param>
            <param name="modelPropertyId">PropertyId of the model's property.</param>
            <param name="mappingType">
            Type of the mapping:
            IntegerStyle e.g. means model's integer property to shapes style property.
            </param>
            <param name="style">Specifies the style that is used for all values outside the user defined ranges.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.StyleModelMapping.#ctor">
            <summary>
            Constructor for IEntity CreateInstanceDelegate: Creates an empty instance for loading from Repository
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.Template">
            <summary>
            Combines a shape and a model object to form a sample for shape creation.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Template.CreateShape">
            <summary>
            Creates a new shape from this template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Template.CreateThumbnail(System.Int32,System.Int32)">
            <summary>
            Creates a thumbnail of the template shape.
            </summary>
            <param name="size">Size of tumbnail in pixels</param>
            <param name="margin">Size of margin around shape in pixels</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Template.UnmapAllTerminals">
            <summary>
            Clears all mappings between the shape's connection points and the model's terminals.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Template.CopyTerminalMappings(Dataweb.NShape.Advanced.IModelObject,Dataweb.NShape.Advanced.IModelObject)">
            <summary>
            Checks if the mappings between ConnectionPoints and Terminals can be reused
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Template.Shape">
            <summary>
            Defines the shape for this template. If the template contains a ModelObject, it will also become the shape's ModelObject.
            </summary>
            <remarks>Replacing the shape of a template with templated shapes results in 
            errors, if the templated shapes are not updated accordingly.</remarks>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ZOrderDestination">
            <summary>
            Defines the directions in which a shape is lifted.
            </summary>
            <status>Reviewed</status>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ZOrderDestination.ToBottom">
            <summary>Send to the back.</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ZOrderDestination.Downwards">
            <summary>Send one backwards.</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ZOrderDestination.Upwards">
            <summary>Bring upwards by one.</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ZOrderDestination.ToTop">
            <summary>Bring to the top.</summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IReadOnlyShapeCollection">
            <summary>
            A read-only collection of shapes sorted by z-order.
            </summary>
            <remarks>Also providing methods to find shapes and process the collection 
            items in every direction.</remarks>
            <status>Reviewed</status>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IReadOnlyCollection`1">
            <summary>
            A generic readonly collection of items providing an enumerator and the total number of items in the collection
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IReadOnlyShapeCollection.FindShape(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Finds a shape within the given rectangle.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IReadOnlyShapeCollection.FindShape(System.Int32,System.Int32,Dataweb.NShape.Advanced.ControlPointCapabilities,System.Int32,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Finds a shape, which has control points near a given position.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IReadOnlyShapeCollection.MaxZOrder">
            <summary>
            Retrieves the greatest z-order within the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IReadOnlyShapeCollection.MinZOrder">
            <summary>
            Retrieves the least z-order within the collection.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IReadOnlyShapeCollection.TopMost">
            <summary>
            Retrieves the top most shape.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IReadOnlyShapeCollection.Bottom">
            <summary>
            Retrieves the bottom shape.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IReadOnlyShapeCollection.TopDown">
            <summary>
            Enumerates shapes from the highest z-orders to the lowest.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IReadOnlyShapeCollection.BottomUp">
            <summary>
            Enumerates shapes from the lowest z-orders to the highest.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IShapeCollection">
            <summary>
            A modifyable collection of shapes.
            </summary>
            <status>Reviewed</status>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IShapeCollection.SetZOrder(Dataweb.NShape.Advanced.Shape,System.Int32)">
            <summary>
            Assigns a z-order to a shape.
            </summary>
            <param name="shape"></param>
            <param name="zOrder"></param>
            <remarks>This method modifies the shape. The caller must make sure that the
            repository is informed about the modification.</remarks>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ShapeCollection">
            <summary>
            Manages a list of shapes.
            </summary>
            <status>Interface reviewed</status>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.AddRange(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <summary>
            Adds multiple shapes to the collection.
            </summary>
            <param name="shapes"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.Replace(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Replaces a shape by another.
            </summary>
            <param name="oldShape"></param>
            <param name="newShape"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.ReplaceRange(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <summary>
            Replaces multiple shapes by others.
            </summary>
            <param name="oldShapes"></param>
            <param name="newShapes"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.RemoveRange(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <summary>
            Removes multiple shapes.
            </summary>
            <param name="shapes"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.NotifyChildMoving(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Notifies the owner that the child shape is going to move.
            </summary>
            <param name="shape">The shape trying to move</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.NotifyChildResizing(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Notifies the owner that the child shape is going to resize.
            </summary>
            <param name="shape">The shape trying to move</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.NotifyChildRotating(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Notifies the owner that the child shape is going to rotate.
            </summary>
            <param name="shape">The shape trying to move</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.NotifyChildMoved(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Notifies the parent that its child shape has moved.
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.NotifyChildResized(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Notifies the parent that its child shape has resized.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.NotifyChildRotated(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Notifies the parent that its child shape has rotated.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.FindShapes(System.Int32,System.Int32,Dataweb.NShape.Advanced.ControlPointCapabilities,System.Int32)">
            <summary>
            Finds shapes that contain (x, y) or own a control point within the range from (x, y).
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="distance"></param>
            <param name="controlPointCapabilities"></param>
            <returns>Shapes founds. Shapes may occur more than once.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.FindShapes(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Finds shapes that intersect with or are contained within the given rectangle.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="completelyInside"></param>
            <returns>Shapes found. Shapes may occur more than once.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.SetZOrder(Dataweb.NShape.Advanced.Shape,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.Clone">
            <summary>
            Clones all shapes (including model objects) in the shapeCollection. Connections between shapes in the shape collection will be maintained.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.InsertCore(System.Int32,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Adds the given shape to the collection. The shape is inserted into the 
            collection at the correct position, depending on the z-order.
            </summary>
            <returns>Index where the shape has been inserted. The shape indexes can vary.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeCollection.AddRangeCore(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <summary>
            Inserts the elements of the collection into the ShapeCollection. This method 
            inserts each element into the correct position, sorted by ZOrder.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeCollection.TopMost">
            <summary>
            
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ShapeCollection.Enumerator">
            <summary>
            Enumerates the elements of a shape collection.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ShapeConnectionInfo">
            <summary>
            Describes a connection between an active and a passive shape.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ControlPointCapabilities">
            <summary>
            Describes the capabilities of a control point.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ControlPointCapabilities.None">
            <summary>Nothing</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ControlPointCapabilities.Reference">
            <summary>Reference point</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ControlPointCapabilities.Resize">
            <summary>Can be used to resize the shape.</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ControlPointCapabilities.Rotate">
            <summary>Center for rotations.</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ControlPointCapabilities.Connect">
            <summary>Glue points can connect to this point.</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ControlPointCapabilities.Glue">
            <summary>Can connect to connection points.</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ControlPointCapabilities.All">
            <summary>All capabilities</summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ControlPointId">
            <summary>
            Identifies a control point within a shape.
            </summary>
            <remarks>Regular control points have integer ids greater than 0.</remarks>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ControlPointId.None">
            <summary>
            Generic control point id used to indicate no or an invalid control point.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ControlPointId.Any">
            <summary>
            Generic control point id used to designate any control point.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ControlPointId.Reference">
            <summary>
            Generic control point id used to identify the reference point.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ControlPointId.FirstVertex">
            <summary>
            Generic control point id used to identify the start point of a linear shape.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ControlPointId.LastVertex">
            <summary>
            Generic control point id used to identify the end point of a linear shape.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ResizeModifiers">
            <summary>
            ResizeModifiers for resizing selected shapes.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ResizeModifiers.None">
            <summary>Standard resizing</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ResizeModifiers.MaintainAspect">
            <summary>Maintain aspect ratio while resizing</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ResizeModifiers.MirroredResize">
            <summary>Resizing is also applied to the opposite side</summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.RelativePosition">
            <summary>
            Stores the relative Position of a Shape. The way how an absolute position is 
            calculated from this relative position depends on the shape.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="T:Dataweb.NShape.Advanced.Shape">
            <summary>
            Interface for all graphical objects.
            </summary>
            <remarks>RequiredPermissions set</remarks>
            <status>reviewed</status>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.ToString">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.Clone">
            <summary>
            Creates a clone, which owns clones of all composite objects in the shape.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.CopyFrom(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Copies as many properties as possible from the source shape.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.Connect(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Called upon the active shape of the connection, e.g. by a tool or a command.
            If ownPointId is equal to ControlPointId.Reference, the global connection is meant.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.Disconnect(Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Disconnects a shape's glue point from its connected shape.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.GetConnectionInfos(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Retrieve information of the connection status of this shape.
            </summary>
            <param name="otherShape">Target shape of the connections to return. 
            If null/Nothing, connections to all connected shapes are returned.</param>
            <param name="ownPointId">If a valid point id is given, all connections of this connection point are returned. 
            If the constant ControlPointId. Any is given, connections of all connection points are returned.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.GetConnectionInfo(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Returns the connection info for given glue point or ShapeConnectionInfo.Empty if the given glue point is not connected.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.IsConnected(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Tests, whether the shape is connected to a given other shape.
            </summary>
            <param name="otherShape">Other shape. Null if any other shape is taken into account.</param>
            <param name="ownPointId">Id of shape's own connection point, which is to be tested. 
            ControlPointId.All, if any connection point is taken into account.</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.IntersectsWith(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines whether the given rectangular region intersects with the shape.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.IntersectOutlineWithLineSegment(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates all intersection points of the shape's outline with the given line segment. Does not return any point if there is no intersection.
            </summary>
            <param name="x1">X coordinate of the line segment's start point.</param>
            <param name="y1">Y coordinate of the line segment's start point.</param>
            <param name="x2">X coordinate of the line segment's end point.</param>
            <param name="y2">Y coordinate of the line segment's end point.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.ContainsPoint(System.Int32,System.Int32)">
            <summary>
            Determines whether the given point is inside the shape.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.HitTest(System.Int32,System.Int32,Dataweb.NShape.Advanced.ControlPointCapabilities,System.Int32)">
            <summary>
            Determines if the given point is inside the shape or near a control point 
            having one of the given control point capabilities.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.GetBoundingRectangle(System.Boolean)">
            <summary>
            Calculates the axis-aligned bounding rectangle of the shape.
            </summary>
            <param name="tight">
            If true, the the minimum bounding rectangle of the shape will be calculated.
            If false, the bounding rectangle of the shape including all its control points will be calculated.
            </param>
            <returns>The axis-aligned bounding rectangle.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.CalculateCells(System.Int32)">
            <summary>
            Calculate the diagram cells occupied by this shape.
            </summary>
            <param name="cellSize">Size of cell in vertical and horizontal direction.</param>
            <returns>Cell indices starting with (0, 0) for the upper left cell.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.Fit(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Fits the shape in the given rectangle.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.MoveTo(System.Int32,System.Int32)">
            <summary>
            Moves the shape to the given coordinates, if possible.
            </summary>
            <param name="toX"></param>
            <param name="toY"></param>
            <returns>True, if move was possible, else false.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.MoveBy(System.Int32,System.Int32)">
            <summary>
            Moves the shape by the given distances, if possible.
            </summary>
            <returns>True, if move was possible, else false.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.MoveControlPointTo(Dataweb.NShape.Advanced.ControlPointId,System.Int32,System.Int32,Dataweb.NShape.Advanced.ResizeModifiers)">
            <summary>
            Moves the given control point to the indicated coordinates if possible.
            </summary>
            <param name="controlPointId"></param>
            <param name="toX"></param>
            <param name="toY"></param>
            <param name="modifiers"></param>
            <returns>True, if the control point could be moved, else false.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.MoveControlPointBy(Dataweb.NShape.Advanced.ControlPointId,System.Int32,System.Int32,Dataweb.NShape.Advanced.ResizeModifiers)">
            <summary>
            Moves the given control point by the indicated distances if possible.
            </summary>
            <param name="controlPointId">Id of the point to move</param>
            <param name="deltaX">Distance on X axis</param>
            <param name="deltaY">Distance on Y axis</param>
            <param name="modifiers">Modifiers for the move action.</param>
            <returns>True, if the control point could be moved, else false.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.Rotate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Rotates the shape.
            </summary>
            <param name="angle">Clockwise rotation angle in tenths of a degree.</param>
            <param name="x">X coordinate of rotation center.</param>
            <param name="y">Y coordinate of rotation center.</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.GetControlPointPosition(Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Retrieves the current control point position.
            </summary>
            <param name="controlPointId"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.GetControlPointIds(Dataweb.NShape.Advanced.ControlPointCapabilities)">
            <summary>
            Lists the control points of the shape.
            </summary>
            <param name="controlPointCapabilities">Filters for the indicated control point 
            capabilities. ControlPointId.None for all controll points.</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.FindNearestControlPoint(System.Int32,System.Int32,System.Int32,Dataweb.NShape.Advanced.ControlPointCapabilities)">
            <summary>
            Finds the control point, with the least distance to the given coordinates.
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="distance"></param>
            <param name="controlPointCapabilities"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.HasControlPointCapability(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.ControlPointCapabilities)">
            <summary>
            Tests, whether a control point has at least one of a set of given capabilities.
            </summary>
            <param name="controlPointId"></param>
            <param name="controlPointCapabilities"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.CalculateRelativePosition(System.Int32,System.Int32)">
            <summary>
            Returns a ReplativePosition structure that representing the position of 
            the given point relative to the shape.
            </summary>
            <remarks> The RelativePosition structure can only be used for shapes of the 
            same type as the calculation method for the relative/absolute varies from 
            shape to shape.</remarks>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.CalculateAbsolutePosition(Dataweb.NShape.Advanced.RelativePosition)">
            <summary>
            Calculates the absolute position of a RelativePosition.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.CalculateNormalVector(System.Int32,System.Int32)">
            <summary>
            Calculates the normal vector for the given coordinates. The coordinates have to be on the outline of the shape, otherwise the returned vector is not defined.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.CalculateConnectionFoot(System.Int32,System.Int32)">
            <summary>
            Calculates the intersection point of the shape's outline with the line between the given coordinates and the shape's balance point.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.MakePreview(Dataweb.NShape.IStyleSet)">
            <summary>
            Sets private preview styles for all used styles.
            </summary>
            <param name="styleSet"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.NotifyStyleChanged(Dataweb.NShape.IStyle)">
            <summary>
            Notifies the shape that a style has changed. The shape decides what to do.
            </summary>
            <param name="style">The changed style</param>
            <returns>True if the given style was used by the shape</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.GetMenuItemDefs(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the actions provided by this shape.
            </summary>
            <param name="x">The X coordinate of the point clicked by the user.</param>
            <param name="y">The Y coordinate of the point clicked by the user.</param>
            <param name="range">The radius of the grips representing the shape's control points.</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.Draw(System.Drawing.Graphics)">
            <summary>
            Draws the shape into the given graphics.
            </summary>
            <param name="graphics"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.DrawOutline(System.Drawing.Graphics,System.Drawing.Pen)">
            <summary>
            Draws the outline of the shape into the given graphics.
            </summary>
            <param name="graphics"></param>
            <param name="pen"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.DrawThumbnail(System.Drawing.Image,System.Int32,System.Drawing.Color)">
            <summary>
            Draws a small preview of the shape into the image.
            </summary>
            <param name="image">The image the shape is drawn into</param>
            <param name="margin"></param>
            <param name="transparentColor"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.Invalidate">
            <summary>
            Invalidates the region occupied by the shape in the display.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.InitializeToDefault(Dataweb.NShape.IStyleSet)">
            <summary>
            Sets the state of a freshly created shape to the default values.
            </summary>
            <param name="styleSet"></param>
            <remarks>Only used by the Type class.</remarks>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.NotifyModelChanged(System.Int32)">
            <summary>
            Informs the shape about a changed property in its model object.
            </summary>
            <param name="propertyId"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.FollowConnectionPointWithGluePoint(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Called upon the active shape of the connection, e.g. by a CurrentTool or a command.
            The active shape calculates the new position of it's GluePoint and moves it to the new position
            </summary>
            <param name="ownPointId">Id of the GluePoint connected to the moved ControlPoint</param>
            <param name="connectedShape">The passive shape of the connection</param>
            <param name="connectedPointId">Id of the ControlPoint that has moved</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.AttachGluePointToConnectionPoint(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Called upon the passive shape of the connection by the active shape. 
            If ownPointId is equal to ControlPointId.Reference, the global connection is meant.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shape.DetachGluePointFromConnectionPoint(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Called upon the passive shape of the connection by the active shape. 
            If ownPointId is equal to ControlPointId.Reference, the global connection is meant.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Shape.Type">
            <summary>
            Indicates the type of the shape. Is always defined.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Shape.ModelObject">
            <summary>
            Indicates the model object displayed by this shape. May be null.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Shape.Template">
            <summary>
            Indicates the template for this shape. Is null, if the shape has no template.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Shape.Tag">
            <summary>
            Specifies a user-defined transient general purpose property.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Shape.Diagram">
            <summary>
            Indicates the diagram this shape is part of.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Shape.Parent">
            <summary>
            Indicates the parent shape if this shape is part of an aggregation.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Shape.Children">
            <summary>
            Provides access to the child shapes.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Shape.X">
            <summary>
            Gets or sets the x-coordinate of the shape's location.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Shape.Y">
            <summary>
            Gets or sets the y-coordinate of the shape's location.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Shape.SecurityDomainName">
            <summary>
            Indicates the projectName of the security domain this shape belongs to.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Shape.DisplayService">
            <summary>
            Defines the display service, which every displayed shape must have.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Shape.LineStyle">
            <summary>
            Style used to draw the shape's outline.
            </summary>
            <remarks>Can be null, if no outline has to be drawn.</remarks>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IPlanarShape">
            <summary>
            Represents a two-dimensional shape.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IPlanarShape.Angle">
            <summary>
            Angle by which the shape is rotated around its rotation control point in tenths 
            of a degree.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IPlanarShape.FillStyle">
            <summary>
            Style used to paint the shape's area.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Properties.Resources.GridLayouter_Description">
            <summary>
              Looks up a localized string similar to Arranges shapes along the nodes of a rectangular grid..
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.UniteRectangles(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Rectangle)">
            <summary>
            Merges two rectangles to a new rectangle that contains all the points of the two.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.UniteRectangles(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Merges two rectangles to a new rectangle that contains all the points of the two.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.UniteRectangles(System.Drawing.RectangleF,System.Drawing.Rectangle)">
            <summary>
            Merges two rectangles to a new rectangle that contains all the points of the two.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TransformMouseMovement(System.Int32,System.Int32,System.Int32,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32,System.Int32,System.Single@,System.Single@,System.Single@,System.Single@)">
            <summary>
            Transforms the mouse movement into the coordinate system of the (rotated) shape.
            </summary>
            <param name="deltaX">Mouse movement on X axis</param>
            <param name="deltaY">Mouse movement on Y axis</param>
            <param name="angleTenthsOfDeg">Angle of the rotated shape in tenths of degrees</param>
            <param name="modifiers">Movement/Resizing modifiers</param>
            <param name="divFactorX">Ensures that transformedDeltaX is dividable by this factor without remainder</param>
            <param name="divFactorY">Ensures that transformedDeltaY is dividable by this factor without remainder</param>
            <param name="transformedDeltaX">Transformed mouse movement on X axis</param>
            <param name="transformedDeltaY">Transformed mouse movement on Y axis</param>
            <param name="sin">Sinus value of the given shapeAngle</param>
            <param name="cos">Cosinus value of the given shapeAngle</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MaintainAspectRatio(System.Single,System.Single,System.Single,System.Single,System.Single@,System.Single@)">
            <summary>
            Corrects deltaX and deltaY in order to preserve the aspect ratio of the 
            sources bounds when inflating by deltaX and deltaY.
            </summary>
            <param name="deltaX"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleTopLeft(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
            <param name="deltaX">Movement on X axis</param>
            <param name="deltaY">Movement on Y axis</param>
            <param name="cosAngle">Cosinus value of the rectangle's rotation shapeAngle</param>
            <param name="sinAngle">Sinus value of the rectangle's rotation shapeAngle</param>
            <param name="modifiers">Movement modifiers</param>
            <param name="moveByX">Specifies the movement the rectangle's center has 
            to perform for resizing</param>
            <param name="moveByY">Specifies the movement the rectangle's center has 
            to perform for resizing</param>
            <param name="newWidth">New width of the rectangle</param>
            <param name="newHeight">New height of the rectangle</param>
            <returns>Returns true if the movement could be performed as desired. 
            Returns false if the movement could not be performed completely because 
            of movement restrictions</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleTopLeft(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the TopTeft corner of a (rotated) rectangle in order to resize it
            </summary>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
            <param name="centerPosFactorX">Specifies where the center is located. Default value is 50% = 0.5</param>
            <param name="centerPosFactorY">Specifies where the center is located. Default value is 50% = 0.5</param>
            <param name="deltaX">Movement on X axis</param>
            <param name="deltaY">Movement on Y axis</param>
            <param name="cosAngle">Cosinus value of the rectangle's rotation shapeAngle</param>
            <param name="sinAngle">Sinus value of the rectangle's rotation shapeAngle</param>
            <param name="modifiers">Movement modifiers</param>
            <param name="moveByX">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="moveByY">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="newWidth">New width of the rectangle</param>
            <param name="newHeight">Nwe height of the rectangle</param>
            <returns>Returns true if the movement could be performed as desired. 
            Returns false if the movement could not be perforormed completely because of movement restrictions</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleTop(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the top side of a (rotated) rectangle in order to resize it
            </summary>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
            <param name="deltaX">Movement on X axis</param>
            <param name="deltaY">Movement on Y axis</param>
            <param name="cosAngle">Cosinus value of the rectangle's rotation shapeAngle</param>
            <param name="sinAngle">Sinus value of the rectangle's rotation shapeAngle</param>
            <param name="modifiers">Movement modifiers</param>
            <param name="moveByX">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="moveByY">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="newWidth">New width of the rectangle</param>
            <param name="newHeight">Nwe height of the rectangle</param>
            <returns>Returns true if the movement could be performed as desired. 
            Returns false if the movement could not be perforormed completely because of movement restrictions</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleTop(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Double,System.Double,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the top side of a (rotated) rectangle in order to resize it
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleTopRight(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the TopRight corner of a (rotated) rectangle in order to resize it
            </summary>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
            <param name="deltaX">Movement on X axis</param>
            <param name="deltaY">Movement on Y axis</param>
            <param name="cosAngle">Cosinus value of the rectangle's rotation shapeAngle</param>
            <param name="sinAngle">Sinus value of the rectangle's rotation shapeAngle</param>
            <param name="modifiers">Movement modifiers</param>
            <param name="moveByX">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="moveByY">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="newWidth">New width of the rectangle</param>
            <param name="newHeight">Nwe height of the rectangle</param>
            <returns>Returns true if the movement could be performed as desired. 
            Returns false if the movement could not be perforormed completely because of movement restrictions</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleTopRight(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the TopRight corner of a (rotated) rectangle in order to resize it
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleLeft(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the left side of a (rotated) rectangle in order to resize it
            </summary>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
            <param name="deltaX">Movement on X axis</param>
            <param name="deltaY">Movement on Y axis</param>
            <param name="cosAngle">Cosinus value of the rectangle's rotation shapeAngle</param>
            <param name="sinAngle">Sinus value of the rectangle's rotation shapeAngle</param>
            <param name="modifiers">Movement modifiers</param>
            <param name="moveByX">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="moveByY">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="newWidth">New width of the rectangle</param>
            <param name="newHeight">Nwe height of the rectangle</param>
            <returns>Returns true if the movement could be performed as desired. Returns 
            false if the movement could not be performed completely because of movement 
            restrictions</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleLeft(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the left side of a (rotated) rectangle in order to resize it
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleRight(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the right side of a (rotated) rectangle in order to resize it
            </summary>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
            <param name="deltaX">Movement on X axis</param>
            <param name="deltaY">Movement on Y axis</param>
            <param name="cosAngle">Cosinus value of the rectangle's rotation shapeAngle</param>
            <param name="sinAngle">Sinus value of the rectangle's rotation shapeAngle</param>
            <param name="modifiers">Movement modifiers</param>
            <param name="moveByX">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="moveByY">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="newWidth">New width of the rectangle</param>
            <param name="newHeight">Nwe height of the rectangle</param>
            <returns>Returns true if the movement could be performed as desired. 
            Returns false if the movement could not be perforormed completely because of movement restrictions</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleRight(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the right side of a (rotated) rectangle in order to resize it
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleBottomLeft(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the BottomLeft corner of a (rotated) rectangle in order to resize it
            </summary>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
            <param name="deltaX">Movement on X axis</param>
            <param name="deltaY">Movement on Y axis</param>
            <param name="cosAngle">Cosinus value of the rectangle's rotation shapeAngle</param>
            <param name="sinAngle">Sinus value of the rectangle's rotation shapeAngle</param>
            <param name="modifiers">Movement modifiers</param>
            <param name="moveByX">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="moveByY">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="newWidth">New width of the rectangle</param>
            <param name="newHeight">Nwe height of the rectangle</param>
            <returns>Returns true if the movement could be performed as desired. 
            Returns false if the movement could not be perforormed completely because of movement restrictions</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleBottomLeft(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the BottomLeft corner of a (rotated) rectangle in order to resize it
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleBottom(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the bottom side of a (rotated) rectangle in order to resize it
            </summary>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
            <param name="deltaX">Movement on X axis</param>
            <param name="deltaY">Movement on Y axis</param>
            <param name="cosAngle">Cosinus value of the rectangle's rotation shapeAngle</param>
            <param name="sinAngle">Sinus value of the rectangle's rotation shapeAngle</param>
            <param name="modifiers">Movement modifiers</param>
            <param name="moveByX">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="moveByY">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="newWidth">New width of the rectangle</param>
            <param name="newHeight">Nwe height of the rectangle</param>
            <returns>Returns true if the movement could be performed as desired. 
            Returns false if the movement could not be perforormed completely because of movement restrictions</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleBottom(System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Double,System.Double,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the bottom side of a (rotated) rectangle in order to resize it
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleBottomRight(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the BottomRight corner of a (rotated) rectangle in order to resize it
            </summary>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
            <param name="deltaX">Movement on X axis</param>
            <param name="deltaY">Movement on Y axis</param>
            <param name="cosAngle">Cosinus value of the rectangle's rotation shapeAngle</param>
            <param name="sinAngle">Sinus value of the rectangle's rotation shapeAngle</param>
            <param name="modifiers">Movement modifiers</param>
            <param name="moveByX">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="moveByY">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="newWidth">New width of the rectangle</param>
            <param name="newHeight">Nwe height of the rectangle</param>
            <returns>Returns true if the movement could be performed as desired. 
            Returns false if the movement could not be perforormed completely because of movement restrictions</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveRectangleBottomRight(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Double,System.Double,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the BottomRight corner of a (rotated) rectangle in order to resize it
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveArrowPoint(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the arrow tip of a rectangle based arrow
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveSquareTopLeft(System.Int32,System.Single,System.Single,System.Single,System.Single,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@)">
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
            <param name="deltaX">Movement on X axis</param>
            <param name="deltaY">Movement on Y axis</param>
            <param name="cosAngle">Cosinus value of the rectangle's rotation shapeAngle</param>
            <param name="sinAngle">Sinus value of the rectangle's rotation shapeAngle</param>
            <param name="modifiers">Movement modifiers</param>
            <param name="moveByX">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="moveByY">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="newWidth">New width of the rectangle</param>
            <param name="newHeight">Nwe height of the rectangle</param>
            <returns>Returns true if the movement could be performed as desired. 
            Returns false if the movement could not be perforormed completely because of movement restrictions</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.MoveSquareTopLeft(System.Int32,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Dataweb.NShape.Advanced.ResizeModifiers,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Moves the TopTeft corner of a (rotated) rectangle in order to resize it
            </summary>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
            <param name="centerPosFactorX">Specifies where the center is located. Default value is 50% = 0.5</param>
            <param name="centerPosFactorY">Specifies where the center is located. Default value is 50% = 0.5</param>
            <param name="deltaX">Movement on X axis</param>
            <param name="deltaY">Movement on Y axis</param>
            <param name="cosAngle">Cosinus value of the rectangle's rotation shapeAngle</param>
            <param name="sinAngle">Sinus value of the rectangle's rotation shapeAngle</param>
            <param name="modifiers">Movement modifiers</param>
            <param name="moveByX">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="moveByY">Specifies the movement the rectangle's center has to perform for resizing</param>
            <param name="newWidth">New width of the rectangle</param>
            <param name="newHeight">Nwe height of the rectangle</param>
            <returns>Returns true if the movement could be performed as desired. 
            Returns false if the movement could not be perforormed completely because of movement restrictions</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.VectorDotProduct(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the dot product a * b
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.VectorDotProduct(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates the dot product a * b
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.VectorDotProduct(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Calculates the dot product a * b
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.VectorDotProduct(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calculates the dot product a * b
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.VectorDotProduct(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calculates the dot product ab * bc
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.VectorDotProduct(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates the dot product ab * bc
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.VectorDotProduct(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Calculates the dot product ab * bc
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.VectorDotProduct(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the dot product ab * bc
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.VectorCrossProduct(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Calculates the cross product ab x ac
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.VectorCrossProduct(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the cross product ab x ac
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.VectorCrossProduct(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calculates the cross product ab x ac
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.VectorCrossProduct(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates the cross product ab x ac
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dataweb.NShape.Advanced.Geometry.VectorLinearInterpolation(System.Drawing.Point,System.Drawing.Point,System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:Dataweb.NShape.Advanced.Geometry.VectorLinearInterpolation(System.Int32,System.Int32,System.Int32,System.Int32,System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:Dataweb.NShape.Advanced.Geometry.VectorLinearInterpolation(System.Drawing.PointF,System.Drawing.PointF,System.Double)" -->
        <!-- Badly formed XML comment ignored for member "M:Dataweb.NShape.Advanced.Geometry.VectorLinearInterpolation(System.Single,System.Single,System.Single,System.Single,System.Double)" -->
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcNormalVectorOfRectangle(System.Drawing.Rectangle,System.Drawing.Point,System.Int32)">
            <summary>
            Calculates the normal vector of a rectangle. 
            If the point p is not on the outline of the rectangle, the resulting notmal vector will be translated to the outline.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcNormalVectorOfRectangle(System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the normal vector of a rectangle. 
            If the point p is not on the outline of the rectangle, the resulting notmal vector will be translated to the outline.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcNormalVectorOfRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the normal vector of a rectangle. 
            If the point ptX/ptY is not on the outline of the rectangle, the resulting notmal vector will be translated to the outline.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcNormalVectorOfCircle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the normal vector of a circle. 
            If the point ptX/ptY is not on the outline of the circle, the resulting notmal vector will be translated to the outline.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TriangleContainsPoint(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Returns true if point p is inside or on the bounds of the triangle a/b/c
            </summary>
            <param name="p">The testee</param>
            <param name="a">First point of the triangle</param>
            <param name="b">Second point of the triangle</param>
            <param name="c">Third point of the triangle</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TriangleContainsPoint(System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Returns true if point x/y is inside or on the bounds of the triangle a/b/c
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TriangleContainsPoint(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns true if point x/y is inside or on the bounds of the triangle a/b/c
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TriangleContainsPoint(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Returns true if point p is inside or on the bounds of the triangle a/b/c
            </summary>
            <param name="p">The testee</param>
            <param name="a">First point of the triangle</param>
            <param name="b">Second point of the triangle</param>
            <param name="c">Third point of the triangle</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TriangleContainsPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns true if point x/y is inside or on the bounds of the triangle a/b/c
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.QuadrangleContainsPoint(System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Returns true if point p is inside or on the bounds of the quadrangle a/b/c/d
            </summary>
            <param name="p">The testee</param>
            <param name="a">First point of the quadrangle</param>
            <param name="b">Second point of the quadrangle</param>
            <param name="c">Third point of the quadrangle</param>
            <param name="c">Fourth point of the quadrangle</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.QuadrangleContainsPoint(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns true if point x/y is inside or on the bounds of the quadrangle a/b/c/d
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.QuadrangleContainsPoint(System.Single,System.Single,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Returns true if point p is inside or on the bounds of the quadrangle a/b/c/d
            </summary>
            <param name="p">The testee</param>
            <param name="a">First point of the quadrangle</param>
            <param name="b">Second point of the quadrangle</param>
            <param name="c">Third point of the quadrangle</param>
            <param name="c">Fourth point of the quadrangle</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.QuadrangleContainsPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns true if point x/y is inside or on the bounds of the quadrangle a/b/c/d
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleContainsPoint(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Tests if point p is inside or on the bounds of the given rectangle.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleContainsPoint(System.Drawing.Rectangle,System.Drawing.Point)">
            <summary>
            Tests if point x/y is inside or on the bounds of the given rectangle.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleContainsPoint(System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Tests if point x/y is inside or on the bounds of the given rectangle.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleContainsPoint(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Tests if point p is inside the given rectangle. The bounds of the rectangle can be excluded.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleContainsPoint(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Tests if point p is inside the given rectangle. The bounds of the rectangle can be excluded.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleContainsPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Tests if point p is inside the given rectangle
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleContainsPoint(System.Drawing.RectangleF,System.Single,System.Single)">
            <summary>
            Tests if point p is inside the given rectangle
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleContainsPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Tests if point p is inside the given rectangle. The bounds of the rectangle can be excluded.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.PolygonIsConvex(System.Drawing.PointF[],System.Single,System.Single)">
            <summary>
            Tests if the given points define a convex polygon or not
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.ConvexPolygonContainsPoint(System.Drawing.Point[],System.Int32,System.Int32)">
            <summary>
            Tests if point x/y is inside or on the bounds of the given (convex) polygon
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.ConvexPolygonContainsPoint(System.Drawing.PointF[],System.Int32,System.Int32)">
            <summary>
            Tests if point x/y is inside or on the bounds of the given (convex) polygon.
            PointF's of the polygon will be rounded to Point.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.ConvexPolygonContainsPoint(System.Drawing.PointF[],System.Single,System.Single)">
            <summary>
            Tests if point x/y is inside or on the bounds of the given (convex) polygon
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineContainsPoint(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Determines if the point is on the line (segment).
            </summary>
            <param name="x">The x-coordinate of the point to test</param>
            <param name="y">The y-coordinate of the point to test</param>
            <param name="p1x">The x-coordinate of the first point that defines the line</param>
            <param name="p1y">The y-coordinate of the first point that defines the line</param>
            <param name="p2x">The x-coordinate of the second point that defines the line</param>
            <param name="p2y">The y-coordinate of the second point that defines the line</param>
            <param name="isSegment">Specifies if the line is a line or a line segment.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineContainsPoint(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Boolean)">
            <summary>
            Determines if the point is on the line (segment).
            </summary>
            <param name="x">The x-coordinate of the point to test</param>
            <param name="y">The y-coordinate of the point to test</param>
            <param name="p1x">The x-coordinate of the first point that defines the line</param>
            <param name="p1y">The y-coordinate of the first point that defines the line</param>
            <param name="p2x">The x-coordinate of the second point that defines the line</param>
            <param name="p2y">The y-coordinate of the second point that defines the line</param>
            <param name="delta">Specifies the tolerance of the calculation</param>
            <param name="isSegment">Specifies if the line is a line or a line segment</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineContainsPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Determines if the point is on the line (segment).
            </summary>
            <param name="x">The x-coordinate of the point to test</param>
            <param name="y">The y-coordinate of the point to test</param>
            <param name="p1x">The x-coordinate of the first point that defines the line</param>
            <param name="p1y">The y-coordinate of the first point that defines the line</param>
            <param name="p2x">The x-coordinate of the second point that defines the line</param>
            <param name="p2y">The y-coordinate of the second point that defines the line</param>
            <param name="isSegment">Specifies if the line is a line or a line segment.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineContainsPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Determines if the point is on the line (segment).
            </summary>
            <param name="x">The x-coordinate of the point to test</param>
            <param name="y">The y-coordinate of the point to test</param>
            <param name="p1x">The x-coordinate of the first point that defines the line</param>
            <param name="p1y">The y-coordinate of the first point that defines the line</param>
            <param name="p2x">The x-coordinate of the second point that defines the line</param>
            <param name="p2y">The y-coordinate of the second point that defines the line</param>
            <param name="delta">Specifies the tolerance of the calculation</param>
            <param name="isSegment">Specifies if the line is a line or a line segment</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleContainsRectangle(System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Returns true if rectangle rect1 contains rectangle rect2.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.EllipseContainsPoint(System.Drawing.PointF,System.Single,System.Single,System.Single,System.Drawing.PointF)">
            <summary>
            Determines if a rotated ellipse contains a point
            /// </summary>
            <param name="ellipseCenter">The center point of the ellipse and the rotation center</param>
            <param name="ellipseWidth">The width of the ellipse, equal to the doubled length of the major half axis</param>
            <param name="ellipseHeight">The height of the ellipse, equal to the doubled length of the minor half axis</param>
            <param name="ellipseAngleDeg">The rotation angle of the ellipse in degrees</param>
            <param name="p">The point to test</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.EllipseContainsPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Determines if a rotated ellipse contains a point
            /// </summary>
            <param name="ellipseCenterX">The center point of the ellipse and the rotation center</param>
            <param name="ellipseCenterY">The center point of the ellipse and the rotation center</param>
            <param name="ellipseWidth">The width of the ellipse, equal to the doubled length of the major half axis</param>
            <param name="ellipseHeight">The height of the ellipse, equal to the doubled length of the minor half axis</param>
            <param name="ellipseAngleDeg">The rotation angle of the ellipse in degrees</param>
            <param name="x">The x-coordinate of the point to test</param>
            <param name="y">The y-coordinate of the point to test</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.EllipseContainsPoint(System.Drawing.Point,System.Int32,System.Int32,System.Single,System.Drawing.Point)">
            <summary>
            Determines if a rotated ellipse contains a point
            /// </summary>
            <param name="ellipseCenter">The center point of the ellipse and the rotation center</param>
            <param name="ellipseWidth">The width of the ellipse, equal to the doubled length of the major half axis</param>
            <param name="ellipseHeight">The height of the ellipse, equal to the doubled length of the minor half axis</param>
            <param name="ellipseAngleDeg">The rotation angle of the ellipse in degrees</param>
            <param name="p">The point to test</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.EllipseContainsPoint(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32)">
            <summary>
            Determines if a rotated ellipse contains a point
            /// </summary>
            <param name="ellipseCenterX">The center point of the ellipse and the rotation center</param>
            <param name="ellipseCenterY">The center point of the ellipse and the rotation center</param>
            <param name="ellipseWidth">The width of the ellipse, equal to the doubled length of the major half axis</param>
            <param name="ellipseHeight">The height of the ellipse, equal to the doubled length of the minor half axis</param>
            <param name="ellipseAngleDeg">The rotation angle of the ellipse in degrees</param>
            <param name="x">The x-coordinate of the point to test</param>
            <param name="y">The y-coordinate of the point to test</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CircleContainsPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Determines if a circle represented by a center point and a radius contains a point
            </summary>
            <param name="centerX">The x-coordinate of the circle's center</param>
            <param name="centerY">The y-coordinate of the circle's center</param>
            <param name="radius">The radius of the circle</param>
            <param name="delta">The tolerance of the calculation</param>
            <param name="pointX">The x-coordinate of the point to test</param>
            <param name="pointY">The y-coordinate of the point to test</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CircleContainsPoint(System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Determines if a circle represented by a center point and a radius contains a point
            </summary>
            <param name="centerX">The x-coordinate of the circle's center</param>
            <param name="centerY">The y-coordinate of the circle's center</param>
            <param name="radius">The radius of the circle</param>
            <param name="delta">The tolerance of the calculation</param>
            <param name="pointX">The x-coordinate of the point to test</param>
            <param name="pointY">The y-coordinate of the point to test</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CircleOutlineContainsPoint(System.Int32,System.Int32,System.Single,System.Single,System.Int32,System.Int32)">
            <summary>
            Determines if a circle outline represented by a center point, a radius and the width of the outline contains a point
            </summary>
            <param name="centerX">The x-coordinate of the circle's center</param>
            <param name="centerY">The y-coordinate of the circle's center</param>
            <param name="radius">The radius of the circle</param>
            <param name="delta">The tolerance of the calculation</param>
            <param name="pointX">The x-coordinate of the point to test</param>
            <param name="pointY">The y-coordinate of the point to test</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dataweb.NShape.Advanced.Geometry.ArcContainsPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" -->
        <!-- Badly formed XML comment ignored for member "M:Dataweb.NShape.Advanced.Geometry.ArcContainsPoint(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Dataweb.NShape.Advanced.Geometry.ArcContainsPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" -->
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineIntersectsWithLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Bestimmt, ob die beiden Geraden sich schneiden.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineIntersectsWithLine(System.Drawing.Point,System.Drawing.Point,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Bestimmt, ob die beiden Geraden sich schneiden.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineIntersectsWithLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Bestimmt, ob die beiden Geraden sich schneiden.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineIntersectsWithLine(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Bestimmt, ob die beiden Geraden sich schneiden.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineIntersectsWithLine(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Bestimmt, ob die beiden Geraden sich schneiden.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineIntersectsWithLineSegment(System.Drawing.PointF,System.Drawing.PointF,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Bestimmt, ob die Gerade sich mit der Strecke schneidet.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineIntersectsWithLineSegment(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Bestimmt, ob die Gerade sich mit der Strecke schneidet.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineIntersectsWithLineSegment(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Bestimmt, ob die Gerade sich mit der Strecke schneidet.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineIntersectsWithLineSegment(System.Drawing.Point,System.Drawing.Point,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Bestimmt, ob die Gerade sich mit der Strecke schneidet.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineIntersectsWithLineSegment(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Bestimmt, ob die Gerade sich mit der Strecke schneidet.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineSegmentIntersectsWithLineSegment(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Bestimmt, ob die beiden Strecken sich schneiden.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.LineSegmentIntersectsWithLineSegment(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Bestimmt, ob die beiden Strecken sich schneiden.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleIntersectsWithLine(System.Drawing.Rectangle,System.Drawing.Point,System.Drawing.Point,System.Boolean)">
            <summary>
            Checks if the rectangle intersectas with the line. 
            If isSegmnt is true, the line is treated as line segment.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleIntersectsWithLine(System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Checks if the rectangle intersectas with the line. 
            If isSegmnt is true, the line is treated as line segment.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleIntersectsWithLine(System.Drawing.RectangleF,System.Drawing.PointF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Checks if the rectangle intersectas with the line. 
            If isSegmnt is true, the line is treated as line segment.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleIntersectsWithLine(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Checks if the rectangle intersectas with the line. 
            If isSegmnt is true, the line is treated as line segment.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleIntersectsWithLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Checks if the rectangle intersectas with the line. 
            If isSegmnt is true, the line is treated as line segment.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleIntersectsWithLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Checks if there is an intersection between the given rectangle (rotated around its center point) and the given line.
            </summary>
            <param name="rectangleCenterX">X coordinate of the rectangle's center</param>
            <param name="rectangleCenterY">Y coordinate of the rectangle's center</param>
            <param name="rectangleWidth">Width of the rectangle</param>
            <param name="rectangleHeight">Height of the rectangle</param>
            <param name="rectangleAngleDeg">Rotation of the rectangle</param>
            <param name="x1">X coordinate of the line's first point</param>
            <param name="y1">Y coordinate of the line's first point</param>
            <param name="x2">X coordinate of the line's second point</param>
            <param name="y2">Y coordinate of the line's second point</param>
            <param name="isSegment">Specifies wether the line is a line segment</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RectangleIntersectsWithLine(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Checks if there is an intersection between the given rectangle (rotated around its center point) and the given line.
            </summary>
            <param name="rectangleCenterX">X coordinate of the rectangle's center</param>
            <param name="rectangleCenterY">Y coordinate of the rectangle's center</param>
            <param name="rectangleWidth">Width of the rectangle</param>
            <param name="rectangleHeight">Height of the rectangle</param>
            <param name="rectangleAngleDeg">Rotation of the rectangle</param>
            <param name="x1">X coordinate of the line's first point</param>
            <param name="y1">Y coordinate of the line's first point</param>
            <param name="x2">X coordinate of the line's second point</param>
            <param name="y2">Y coordinate of the line's second point</param>
            <param name="isSegment">Specifies wether the line is a line segment</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.ArcIntersectsWithRectangle(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.Rectangle)">
            <summary>
            Checks if an arc defined, by three points, intersects with a rectangle.
            </summary>
            <param name="startPt">The Arc's frist point</param>
            <param name="radiusPt">The arc's second point</param>
            <param name="endPt">The Arc's third point</param>
            <param name="rect">Rectangle to be checked for intersection</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.ArcIntersectsWithRectangle(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Drawing.Rectangle,System.Single)">
            <summary>
            Checks if an arc defined, by three points, intersects with a (rotated) rectangle.
            </summary>
            <param name="startPtX">X Coordinate of the arc's first point</param>
            <param name="startPtY">Y Coordinate of the arc's first point</param>
            <param name="radiusPtX">X Coordinate of the arc's second point</param>
            <param name="radiusPtY">Y Coordinate of the arc's second point</param>
            <param name="endPtX">X Coordinate of the arc's third point</param>
            <param name="endPtY">Y Coordinate of the arc's third point</param>
            <param name="rect">Rectangle to be checked for intersection</param>
            <param name="angleDeg">Rotation shapeAngle of the rectangle in degrees</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.ArcIntersectsWithRectangle(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Drawing.Rectangle)">
            <summary>
            Checks if an arc defined, by three points, intersects with a rectangle.
            </summary>
            <param name="startPtX">X Coordinate of the arc's first point</param>
            <param name="startPtY">Y Coordinate of the arc's first point</param>
            <param name="radiusPtX">X Coordinate of the arc's second point</param>
            <param name="radiusPtY">Y Coordinate of the arc's second point</param>
            <param name="endPtX">X Coordinate of the arc's third point</param>
            <param name="endPtY">Y Coordinate of the arc's third point</param>
            <param name="rect">Rectangle to be checked for intersection</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CircleIntersectsWithRectangle(System.Drawing.Rectangle,System.Single,System.Drawing.Point,System.Single)">
            <summary>
            Check if the (rotated) rectangle intersects with the given circle
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.IntersectLineWithRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the intersection point of the line with the rectangle that is nearer to point 1 of the line.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.IntersectCircleWithLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Calculates and returns the intersection point of the given circle with the given line (segment) that is nearest to point x1/y1.
            </summary>
            <param name="centerX">X Coordinate of the circle's center</param>
            <param name="centerY">Y Coordinate of the circle's center</param>
            <param name="radius">Radius of the circle</param>
            <param name="x1">X coordinate of the first point of the line (segment)</param>
            <param name="y1">Y coordinate of the first point of the line (segment)</param>
            <param name="x2">X coordinate of the second point of the line (segment)</param>
            <param name="y2">Y coordinate of the second point of the line (segment)</param>
            <param name="isSegment">Specifies if the given line should be treated as a (endable) line segment instead of a (endless) line</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.IntersectCircleWithLine(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Calculates and returns the intersection point of the given circle with the given line (segment) that is nearest to point x1/y1.
            </summary>
            <param name="centerX">X Coordinate of the circle's center</param>
            <param name="centerY">Y Coordinate of the circle's center</param>
            <param name="radius">Radius of the circle</param>
            <param name="x1">X coordinate of the first point of the line (segment)</param>
            <param name="y1">Y coordinate of the first point of the line (segment)</param>
            <param name="x2">X coordinate of the second point of the line (segment)</param>
            <param name="y2">Y coordinate of the second point of the line (segment)</param>
            <param name="isSegment">Specifies if the given line should be treated as a (endable) line segment instead of a (endless) line</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.IntersectEllipseLine(System.Drawing.Point,System.Int32,System.Int32,System.Single,System.Drawing.Point,System.Drawing.Point,System.Boolean)">
            <summary>
            Calculates the intersection points of the line segment from p1 to p2 with the ellipse.
            </summary>
            <param name="center">Center point of the ellipse.</param>
            <param name="ellipseWidth">Width of the ellipse.</param>
            <param name="ellipseHeight">Height of the ellipse.</param>
            <param name="ellipseAngleDeg">Rotation shapeAngle of the ellipse in degrees.</param>
            <param name="p1">First point of the line segment.</param>
            <param name="p2">Second point of the line segment.</param>
            <returns>Intersection points of the line with the ellipse.</returns>		
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.IntersectEllipseLine(System.Drawing.Point,System.Int32,System.Int32,System.Drawing.Point,System.Drawing.Point,System.Boolean)">
            <summary>
            Calculates the intersection points of the line segment from p1 to p2 with the ellipse.
            </summary>
            <param name="center">Center point of the ellipse.</param>
            <param name="ellipseWidth">Width of the ellipse.</param>
            <param name="ellipseHeight">Height of the ellipse.</param>
            <param name="p1">First point of the line segment.</param>
            <param name="p2">Second point of the line segment.</param>
            <returns>Intersection points of the line with the ellipse.</returns>		
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.IntersectEllipseLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Calculates the intersection points of the line segment from p1 to p2 with the ellipse.
            </summary>
            <param name="centerX">X coordinate of the ellipse center point.</param>
            <param name="centerY">Y coordinate of the ellipse center point.</param>
            <param name="ellipseWidth">Width of the ellipse.</param>
            <param name="ellipseHeight">Height of the ellipse.</param>
            <param name="ellipseAngleDeg">Rotation shapeAngle of the ellipse in degrees.</param>
            <param name="x1">X coordinate of the line segments first point.</param>
            <param name="Y1">Y coordinate of the line segments first point.</param>
            <param name="x2">X coordinate of the line segments second point.</param>
            <param name="Y2">Y coordinate of the line segments second point.</param>
            <param name="isSegment">Specifies if the line is a line or a line segment.</param>
            <returns>Intersection points of the line with the ellipse.</returns>		
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.IntersectEllipseLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Calculates the intersection points of the line segment from p1 to p2 with the ellipse.
            </summary>
            <param name="centerX">X coordinate of the ellipse center point.</param>
            <param name="centerY">Y coordinate of the ellipse center point.</param>
            <param name="ellipseWidth">Width of the ellipse.</param>
            <param name="ellipseHeight">Height of the ellipse.</param>
            <param name="x1">X coordinate of the line segments first point.</param>
            <param name="Y1">Y coordinate of the line segments first point.</param>
            <param name="x2">X coordinate of the line segments second point.</param>
            <param name="Y2">Y coordinate of the line segments second point.</param>
            <returns>Intersection points of the line with the ellipse.</returns>		
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.IntersectEllipseLine(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Calculates the intersection points of the line segment from p1 to p2 with the ellipse.
            </summary>
            <param name="centerX">X coordinate of the ellipse center point.</param>
            <param name="centerY">Y coordinate of the ellipse center point.</param>
            <param name="ellipseWidth">Width of the ellipse.</param>
            <param name="ellipseHeight">Height of the ellipse.</param>
            <param name="ellipseAngleDeg">Rotation shapeAngle of the ellipse.</param>
            <param name="x1">X coordinate of the line segments first point.</param>
            <param name="Y1">Y coordinate of the line segments first point.</param>
            <param name="x2">X coordinate of the line segments second point.</param>
            <param name="Y2">Y coordinate of the line segments second point.</param>
            <returns>Intersection points of the line with the ellipse.</returns>		
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointPoint(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculate the distance between the two points {x1 | y1} and {x2 | y2}
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointPoint(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Calculate the distance between the two points a and b
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointPoint(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculate the distance between the two points a and b
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointPoint(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Calculate the distance between the two points a and b
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointPointFast(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the approximate distance between the two points {x1 | y1} and {x2 | y2}
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointPointFast(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Calculates the approximate distance betwenn the two points.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointLine2(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Calculates the distance of point p from the line through a and b. The result can be positive or negative.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointLine2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the distance of point p from the line through a and b. The result can be positive or negative.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointLine2(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Berechnet den Abstand des Punktes p von der Geraden linePt1 - linePt2
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointLineSegment2(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Calculates the distance of point p from the line segment a to b. The result is always >= 0.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointLine(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Boolean)">
            <summary>
            Calculate the distance from p to ab. If isSegment is true, ab is not not a line but a line segment.
            The distance from a sine segment is always >= 0.
            If isSegment is true, ab is not a line but a line segment. This also means that the calculated value is always >= 0.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Calculate the distance from p to ab. 
            If isSegment is true, ab is not a line but a line segment. This also means that the calculated value is always >= 0.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointLine(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Boolean)">
            <summary>
            Calculate the distance from p to ab. If isSegment is true, ab is not not a line but a line segment.
            If isSegment is true, ab is not a line but a line segment. This also means that the calculated value is always >= 0.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DistancePointLine(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            Calculate the distance from p to ab. If isSegment is true, ab is not not a line but a line segment.
            If isSegment is true, ab is not not a line but a line segment. This also means that the calculated value is always >= 0.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.Angle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Berechnet den Winkel zwischen x1,y1 und x2,y2 mit Scheitel x0,y0 in Radians
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.Angle(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Berechnet den Winkel zwischen x1,y1 und x2,y2 mit Scheitel x0,y0 in Radians
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.Angle(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Berechnet den Winkel zwischen x1,y1 und x2,y2 mit Scheitel x0,y0 in Radians
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.Angle(System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Berechnet den Winkel (in Radians) von linePt1 zum Scheitelpunkt center.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.Angle(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Berechnet den Winkel zwischen x1,y1 und x2,y2 mit Scheitel x0,y0 in Radians
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.Angle(System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Berechnet den Winkel (in Radians) von linePt1 zum Scheitelpunkt center.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RotatePoint(System.Drawing.PointF,System.Single,System.Drawing.PointF)">
            <summary>
            Performas a rotation of a point around a center point.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RotatePoint(System.Single,System.Single,System.Single,System.Drawing.PointF)">
            <summary>
            Performas a rotation of a point around a center point.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RotatePoint(System.Drawing.Point,System.Single,System.Drawing.Point)">
            <summary>
            Rotate the given Point around the given center
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RotatePoint(System.Int32,System.Int32,System.Single,System.Drawing.Point)">
            <summary>
            Rotate the given Point around the given center
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RotatePoint(System.Single,System.Single,System.Single,System.Single@,System.Single@)">
            <summary>
            Rotate the given Point around the given center
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RotatePoint(System.Int32,System.Int32,System.Single,System.Int32@,System.Int32@)">
            <summary>
            Rotate the given Point around the given center
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RotateLine(System.Drawing.Point,System.Single,System.Drawing.Point@,System.Drawing.Point@)">
            <summary>
            Rotates the given line around the given center
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RotateLine(System.Int32,System.Int32,System.Single,System.Drawing.Point@,System.Drawing.Point@)">
            <summary>
            Rotates the given line around the given center
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RotateRectangle(System.Drawing.Rectangle,System.Drawing.Point,System.Single,System.Drawing.Point@,System.Drawing.Point@,System.Drawing.Point@,System.Drawing.Point@)">
            <summary>
            Rotates the given rectangle around the given center
            </summary>
            <param name="rectangle">Rectangle to rotate</param>
            <param name="center">Center of rotation</param>
            <param name="angleDeg">Rotation shapeAngle</param>
            <param name="topLeft">Rotated top left corner of the rectangle</param>
            <param name="topRight">Rotated top right corner of the rectangle</param>
            <param name="bottomRight">Rotated bottom right corner of the rectangle</param>
            <param name="bottomLeft">Rotated bottom left corner of the rectangle</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RotateRectangle(System.Drawing.Rectangle,System.Int32,System.Int32,System.Single,System.Drawing.Point@,System.Drawing.Point@,System.Drawing.Point@,System.Drawing.Point@)">
            <summary>
            Rotates the given rectangle around the given center
            </summary>
            <param name="rectangle">Rectangle to rotate</param>
            <param name="centerX">X coordinate of the rotation center</param>
            <param name="centerY">Y coordinate of the rotation center</param>
            <param name="angleDeg">Rotation shapeAngle</param>
            <param name="topLeft">Rotated top left corner of the rectangle</param>
            <param name="topRight">Rotated top right corner of the rectangle</param>
            <param name="bottomRight">Rotated bottom right corner of the rectangle</param>
            <param name="bottomLeft">Rotated bottom left corner of the rectangle</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RotateRectangle(System.Drawing.RectangleF,System.Drawing.PointF,System.Single,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Rotates the given rectangle around the given center
            </summary>
            <param name="rectangle">Rectangle to rotate</param>
            <param name="center">Center of rotation</param>
            <param name="angleDeg">Rotation shapeAngle</param>
            <param name="topLeft">Rotated top left corner of the rectangle</param>
            <param name="topRight">Rotated top right corner of the rectangle</param>
            <param name="bottomRight">Rotated bottom right corner of the rectangle</param>
            <param name="bottomLeft">Rotated bottom left corner of the rectangle</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RotateRectangle(System.Drawing.RectangleF,System.Single,System.Single,System.Single,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Rotates the given rectangle around the given center
            </summary>
            <param name="rectangle">Rectangle to rotate</param>
            <param name="centerX">X coordinate of the rotation center</param>
            <param name="centerY">Y coordinate of the rotation center</param>
            <param name="angleDeg">Rotation shapeAngle</param>
            <param name="topLeft">Rotated top left corner of the rectangle</param>
            <param name="topRight">Rotated top right corner of the rectangle</param>
            <param name="bottomRight">Rotated bottom right corner of the rectangle</param>
            <param name="bottomLeft">Rotated bottom left corner of the rectangle</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TransformRectangle(System.Drawing.Point,System.Int32,System.Drawing.Rectangle,System.Drawing.Point@,System.Drawing.Point@,System.Drawing.Point@,System.Drawing.Point@)">
            <summary>
            Translates and rotates the given caption bounds.
            </summary>
            <param name="captionCenter">Coordinates of the caption's center.</param>
            <param name="angle">Rotation angle in tenths of degree.</param>
            <param name="captionBounds">Untransformed caption bounds (relative to origin of coordinates).</param>
            <param name="topLeft">Transformed top left corner of the given caption bounds.</param>
            <param name="topRight">Transformed top right corner of the given caption bounds.</param>
            <param name="bottomRight">Transformed bottom right corner of the given caption bounds.</param>
            <param name="bottomLeft">Transformed bottom left corner of the given caption bounds.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TransformRectangle(System.Drawing.Point,System.Drawing.Point,System.Int32,System.Drawing.Rectangle,System.Drawing.Point@,System.Drawing.Point@,System.Drawing.Point@,System.Drawing.Point@)">
            <summary>
            Translates and rotates the given caption bounds.
            </summary>
            <param name="captionCenter">Coordinates of the caption's center.</param>
            <param name="rotationCenter">Coordinates of the rotation center.</param>
            <param name="angle">Rotation angle in tenths of degree.</param>
            <param name="captionBounds">Untransformed caption bounds (relative to origin of coordinates).</param>
            <param name="topLeft">Transformed top left corner of the given caption bounds.</param>
            <param name="topRight">Transformed top right corner of the given caption bounds.</param>
            <param name="bottomRight">Transformed bottom right corner of the given caption bounds.</param>
            <param name="bottomLeft">Transformed bottom left corner of the given caption bounds.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TransformRectangle(System.Drawing.Point,System.Int32,System.Drawing.Rectangle,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Translates and rotates the given caption bounds.
            </summary>
            <param name="captionCenter">Coordinates of the caption's center.</param>
            <param name="angle">Rotation angle in tenths of degree.</param>
            <param name="captionBounds">Untransformed caption bounds (relative to origin of coordinates).</param>
            <param name="topLeft">Transformed top left corner of the given caption bounds.</param>
            <param name="topRight">Transformed top right corner of the given caption bounds.</param>
            <param name="bottomRight">Transformed bottom right corner of the given caption bounds.</param>
            <param name="bottomLeft">Transformed bottom left corner of the given caption bounds.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TransformRectangle(System.Drawing.Point,System.Drawing.Point,System.Int32,System.Drawing.Rectangle,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@,System.Drawing.PointF@)">
            <summary>
            Translates and rotates the given caption bounds.
            </summary>
            <param name="captionCenter">Coordinates of the caption's center.</param>
            <param name="rotationCenter">Coordinates of the rotation center.</param>
            <param name="angle">Rotation angle in tenths of degree.</param>
            <param name="captionBounds">Untransformed caption bounds (relative to origin of coordinates).</param>
            <param name="topLeft">Transformed top left corner of the given caption bounds.</param>
            <param name="topRight">Transformed top right corner of the given caption bounds.</param>
            <param name="bottomRight">Transformed bottom right corner of the given caption bounds.</param>
            <param name="bottomLeft">Transformed bottom left corner of the given caption bounds.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TenthsOfDegreeToRadians(System.Int32)">
            <summary>
            Converts and shapeAngle measured in tenths of degrees to an shapeAngle measured in radians.
            </summary>
            <param name="shapeAngle">Angle measured in tenths of degree</param>
            <returns>Angle measured in radians</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TenthsOfDegreeToDegrees(System.Int32)">
            <summary>
            Converts and shapeAngle measured in tenths of degrees to an shapeAngle measured in degrees.
            </summary>
            <param name="shapeAngle">Angle measured in tenths of degree</param>
            <returns>Angle measured in degrees</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DegreesToRadians(System.Single)">
            <summary>
            Converts and shapeAngle measured in degrees to an shapeAngle measured in radians.
            </summary>
            <param name="shapeAngle">Angle measured in degrees</param>
            <returns>Angle measured in radians</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.DegreesToTenthsOfDegree(System.Single)">
            <summary>
            Converts and shapeAngle measured in degrees to an shapeAngle measured in tenths of degree.
            </summary>
            <param name="shapeAngle">Angle measured in degrees</param>
            <returns>Angle measured in tenths of degree</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RadiansToDegrees(System.Single)">
            <summary>
            Converts and shapeAngle measured in radians to an shapeAngle measured in degrees.
            </summary>
            <param name="shapeAngle">Angle measured in radians</param>
            <returns>Angle measured in degrees</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.RadiansToTenthsOfDegree(System.Single)">
            <summary>
            Converts and shapeAngle measured in radians to an shapeAngle measured in tenths of degree.
            </summary>
            <param name="shapeAngle">Angle measured in radians</param>
            <returns>Angle measured in tenths of degree</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcScaleFactor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Calculates the scale factor that has to be applied in order to fit the source rectangle into the destination rectangle
            </summary>
            <param name="srcWidth">Width of the source rectangle</param>
            <param name="srcHeight">Height of the source rectangle</param>
            <param name="destWidth">Width of the destinalion rectangle</param>
            <param name="dstHeight">Height of the destinalion rectangle</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcScaleFactor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates the scale factor that has to be applied in order to fit the source rectangle into the destination rectangle
            </summary>
            <param name="srcWidth">Width of the source rectangle</param>
            <param name="srcHeight">Height of the source rectangle</param>
            <param name="destWidth">Width of the destinalion rectangle</param>
            <param name="dstHeight">Height of the destinalion rectangle</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.BezierPoint(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single)">
            <summary>
            Calculates a point on a cubic bezier curve
            </summary>
            <param name="A">The first interpolation point of the bezier curve</param>
            <param name="B">The second interpolation point of the bezier curve</param>
            <param name="C">The third interpolation point of the bezier curve</param>
            <param name="D">The fourth interpolation point of the bezier curve</param>
            <param name="distance">the distance of the point to calculate</param>
            <param name="p">The calculated point</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcPolygonBalancePoint(System.Collections.Generic.IEnumerable{System.Drawing.PointF})">
            <summary>
            Calculated the balance point of a polygon
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcPolygonBalancePoint(System.Collections.Generic.IEnumerable{System.Drawing.PointF},System.Single@,System.Single@)">
            <summary>
            Calculated the balance point of a polygon
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcPolygonBalancePoint(System.Collections.Generic.IEnumerable{System.Drawing.Point})">
            <summary>
            Calculated the balance point of a polygon
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcPolygonBalancePoint(System.Collections.Generic.IEnumerable{System.Drawing.Point},System.Int32@,System.Int32@)">
            <summary>
            Calculated the balance point of a polygon
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcBoundingRectangle(System.Collections.Generic.IEnumerable{System.Drawing.Point},System.Int32,System.Int32,System.Single,System.Drawing.Rectangle@)">
            <summary>
            Returns the boundingRectangle of a rotated Point collection. 
            The Vertices in the collections are neither copied nor changed.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcBoundingRectangle(System.Collections.Generic.IEnumerable{System.Drawing.Point},System.Drawing.Rectangle@)">
            <summary>
            Returns the bounding rectangle of a point array.
            </summary>
            <param name="points">The point array</param>
            <param name="rectangle">The resulting bounding rectangle</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcBoundingRectangle(System.Collections.Generic.IEnumerable{System.Drawing.PointF},System.Drawing.Rectangle@,System.Boolean)">
            <summary>
            Calculates the axis-aligned bounding rectangle of the given point collection. 
            </summary>
            <param name="points">Collection of points</param>
            <param name="rectangle">The resulting bounding rectangle</param>
            <param name="floor">Specifies if PointF values should be floored or ceiled</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcBoundingRectangle(System.Collections.Generic.IEnumerable{System.Drawing.PointF},System.Drawing.Rectangle@)">
            <summary>
            Calculates the axis-aligned bounding rectangle of the given point collection
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcBoundingRectangle(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Rectangle@)">
            <summary>
            Returns the bounding rectangle of a point array.
            </summary>
            <param name="points">The point array</param>
            <param name="rectangle">The resulting bounding rectangle</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.PointToPixel(System.Single,System.Single)">
            <summary>
            Converts font size in points to font size in pixels
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.PixelToPoint(System.Int32,System.Single)">
            <summary>
            Converts font size in points to font size in pixels
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcPoint(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            Calculates the coordinates of a point from another point with angle and distance;
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcPoint(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates the coordinates of a point from another point with angle and distance;
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcPointOnLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Single)">
            <summary>
            Calculates the position of the point on the line. 
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcPointOnLine(System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Calculates the position of the point on the line.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Calculates the parameters a, b and c of the line formula ax by + c = 0 from two given points
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcLine(System.Single,System.Single,System.Single,System.Single,System.Single@,System.Single@,System.Single@)">
            <summary>
            Calculates the parameters a, b and c of the line formula ax + by + c = 0 from two given points
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Single@,System.Single@)">
            <summary>
            Calculates the parameters m and c of the line formula y = mx + c from two given points
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcLine(System.Single,System.Single,System.Single,System.Single,System.Single@,System.Single@)">
            <summary>
            Calculates the parameters m and c of the line formula y = mx + c from two given points
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcArcCenterAndRadius(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Single@)">
            <summary>
            Calculates the center point and the radius of an arc defined by start point, end point and a third point on the arc ('radius point')
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcArcCenterAndRadius(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single@)">
            <summary>
            Calculates the center point and the radius of an arc defined by start point, end point and a third point on the arc ('radius point')
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcPerpendicularLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Berechnet die Lotrechte durch den Punkt x1/y1 
            Das Ergebnis ist die Normalform der Geraden ax + by + c = 0
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.CalcPerpendicularBisector(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Berechnet die Gerade (2D), welche im Mittelpunkt zwischen linePt1 und linePt2 senkrecht 
            auf der Verbindungsstrecke steht. Das Ergebnis ist die Normalform der Geraden
            ax + by + c = 0
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TranslateLine(System.Int32,System.Int32,System.Int32,System.Drawing.Point,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Translates the given line to point p.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.TranslateLine(System.Single,System.Single,System.Single,System.Drawing.Point,System.Single@,System.Single@,System.Single@)">
            <summary>
            Translates the given line to point p.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.SolveLinear22System(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Löst das lineare Gleichungssystem Ax + b = 0
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.GetNearestPoint(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Returns p1 or p2 dending on which one is nearer to p.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.GetNearestPoint(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns p1 or p2 dending on which one is nearer to p.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.GetNearestPoint(System.Drawing.Point,System.Collections.Generic.IEnumerable{System.Drawing.Point})">
            <summary>
            Returns the nearest point to p (if there is one) or null
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.GetNearestPoint(System.Int32,System.Int32,System.Collections.Generic.IEnumerable{System.Drawing.Point})">
            <summary>
            Returns the nearest point to x/y (if there is one) or null
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.GetNearestPoint(System.Drawing.PointF,System.Collections.Generic.IEnumerable{System.Drawing.PointF})">
            <summary>
            Returns the nearest point to p (if there is one) or null
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.GetNearestPoint(System.Single,System.Single,System.Collections.Generic.IEnumerable{System.Drawing.PointF})">
            <summary>
            Returns the nearest point to x/y (if there is one) or null
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.GetFurthestPoint(System.Drawing.Point,System.Collections.Generic.IEnumerable{System.Drawing.Point})">
            <summary>
            Returns the furthest point from p (if one exists) or null.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.GetFurthestPoint(System.Drawing.PointF,System.Collections.Generic.IEnumerable{System.Drawing.PointF})">
            <summary>
            Returns the furthest point from p (if one exists) or null.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.GetFurthestPoint(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns Point p1 or Point p2 dpending on the distance to p.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.GetFurthestPoint(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)">
            <summary>
            Returns Point p1 or Point p2 dpending on the distance to p.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.GetFurthestPoint(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Returns Point p1 or Point p2 dpending on the distance to p.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.GetFurthestPoint(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Returns Point p1 or Point p2 dpending on the distance to p.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.IsNearer(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Compares the distances of originalPoint to p and comparedPoint to p.
            Returns true if comparedPoint is nearer to p than originalPoint
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Geometry.IsFarther(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
            <summary>
            Compares the distances of originalPoint to p and comparedPoint to p.
            Returns true if comparedPoint is farer away from p than originalPoint
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.Fuzzy">
            <summary>
            Grundoperationen der Fuzzy-Logik
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Fuzzy.MapToFuzzy(System.Double,System.Single,System.Single)">
            <summary>
            Bildet einen Float-Wert auf einen Fuzzy-Wert linear ab.
            </summary>
            <param name="value">Zum Fuzzy-Wert proportionaler Float-Wert</param>
            <param name="falseValue">Untergrenze, ab der der Fuzyy-Wert 0 wird</param>
            <param name="trueValue">Obergrenze, ab der der Fuzzy-Wert 100 wird</param>
            <returns>Fuzzy-Wert</returns>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IShapeGroup">
            <summary>
            Marker interface for groups.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ShapeGroup">
            <summary>
            Groups a set of shapes together.
            </summary>
            <remarks>RequiredPermissions set</remarks>
        </member>
        <member name="T:Dataweb.NShape.StyleCategory">
            <summary>
            Specifies the category of a style.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.StyleTypeDescriptionProvider">
            <summary>
            A type description provider that calls type converters and/or ui type editors registered with the TypeDescriptorRegistrar.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.FindStyleCallback">
            <summary>
            Returns the style of the same type with the same projectName if there is one in the design's style collection.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.ICharacterStyle.FontName">
            <summary>
            Name of the FontFamily
            </summary>
        </member>
        <member name="P:Dataweb.NShape.ICharacterStyle.FontFamily">
            <summary>
            The characterStyle's FontFamily
            </summary>
        </member>
        <member name="P:Dataweb.NShape.ICharacterStyle.SizeInPoints">
            <summary>
            Size in points
            </summary>
        </member>
        <member name="P:Dataweb.NShape.ICharacterStyle.Size">
            <summary>
            Size in world coordinates
            </summary>
        </member>
        <member name="P:Dataweb.NShape.ICharacterStyle.Style">
            <summary>
            The character's style
            </summary>
        </member>
        <member name="P:Dataweb.NShape.ICharacterStyle.ColorStyle">
            <summary>
            The font's color.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.StandardStyleNames">
            <summary>
            Base class for StandardStyleNames. 
            Implements all methods. Derived classes only have to define 
            public readonly string fields named like the standard style name.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.StandardStyleNames.#ctor">
            <summary>
            Base constructor of all derived StandardStyleNames.
            Initializes all public readonly string fields with their field names
            and creates the names string array.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.CharacterStyle.SizeInPoints">
            <summary>
            Font Size in Point (1/72 Inch)
            </summary>
        </member>
        <member name="P:Dataweb.NShape.ColorStyle.Transparency">
            <summary>
            Indicates the transparency in percent (0-100).
            </summary>
        </member>
        <member name="P:Dataweb.NShape.ColorStyle.ConvertToGray">
            <summary>
            Specifies if the color should be converted into a grayscale value.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.FillStyle.#ctor(System.String)">
            <summary>
            Creates a new empty fill style instance.
            </summary>
            <param name="name">Name of the fill style.</param>
        </member>
        <member name="M:Dataweb.NShape.FillStyle.#ctor(System.String,Dataweb.NShape.IColorStyle,Dataweb.NShape.IColorStyle)">
            <summary>
            Creates a new color or pattern based fill style instance.
            </summary>
            <param name="name">Name of the fill style.</param>
            <param name="baseColorStyle">The base color of the fill style.</param>
            <param name="additionalColorStyle">The alternate color of the fill style (gradient color or second color of patterns).</param>
        </member>
        <member name="M:Dataweb.NShape.FillStyle.#ctor(System.String,Dataweb.Utilities.NamedImage)">
            <summary>
            Creates a new texture based fill style instance.
            </summary>
            <param name="isPreviewStyle">Specifies if this fill style is used for drawing previews.</param>
            <param name="name">Name of the fill style.</param>
            <param name="image">The image that defines the texture.</param>
        </member>
        <member name="P:Dataweb.NShape.FillStyle.ConvertToGrayScale">
            <summary>
            If true, the Image is shown as grayscale image
            </summary>
        </member>
        <member name="P:Dataweb.NShape.FillStyle.ImageCompressionQuality">
            <summary>
            Quality setting in percentage when compressing the image with a non-lossless encoder.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.StyleCollection`1.Item(System.Int32)">
            <summary>
            Indexer for direct access on styles.
            </summary>
            <param name="index">Zero-based index.</param>
        </member>
        <member name="P:Dataweb.NShape.StyleCollection`1.Item(System.String)">
            <summary>
            Indexer for direct access on styles.
            </summary>
            <param name="name">The name of the style.</param>
        </member>
        <member name="T:Dataweb.NShape.ImageFileFormat">
            <summary>
            Describes export image formats.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.LayerIds">
            <summary>
            Describes the layers a shape is part of.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Layer">
            <summary>
            Groups shapes.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="T:Dataweb.NShape.ILayerCollection">
            <summary>
            Editable collection of layers
            </summary>
            <status>reviewed</status>
        </member>
        <member name="T:Dataweb.NShape.LayerCollection">
            <summary>
            Holds a list of layers.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.DiagramShapeCollection">
            <summary>
            Read/write shape collection owned by a diagram.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Diagram">
            <summary>
            Displays shapes in layers.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Diagram.CreateImage(Dataweb.NShape.ImageFileFormat)">
            <summary>
            Exports the contents of the diagram to an image of the given format.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Diagram.CreateImage(Dataweb.NShape.ImageFileFormat,System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <summary>
            Exports the part of the diagram that encloses all given shapes to an image of the given format.
            Pass null/Nothing for Parameter shapes in order to export the whole diagram area.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Diagram.CreateImage(Dataweb.NShape.ImageFileFormat,System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},System.Boolean)">
            <summary>
            Exports the part of the diagram that encloses all given shapes to an image of the given format.
            Pass null/Nothing for Parameter shapes in order to expor the whole diagram area.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Diagram.CreateImage(Dataweb.NShape.ImageFileFormat,System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},System.Int32)">
            <summary>
            Exports the part of the diagram that encloses all given shapes to an image of the given format.
            Pass null/Nothing for Parameter shapes in order to expor the whole diagram area.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Diagram.CreateImage(Dataweb.NShape.ImageFileFormat,System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},System.Int32,System.Boolean,System.Drawing.Color)">
            <summary>
            Exports the part of the diagram that encloses all given shapes (plus margin on each side) to an image of the given format.
            Pass null/Nothing for Parameter shapes in order to expor the whole diagram area.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Diagram.CreateImage(Dataweb.NShape.ImageFileFormat,System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},System.Int32,System.Boolean,System.Drawing.Color,System.Int32)">
            <summary>
            Exports the part of the diagram that encloses all given shapes (plus margin on each side) to an image of the given format.
            Pass null/Nothing for Parameter shapes in order to expor the whole diagram area.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Diagram.DrawBackground(System.Drawing.Graphics,System.Drawing.Rectangle)">
            <summary>
            Draws the diagram background.
            </summary>
            <param name="graphics"></param>
            <param name="clipRectangle"></param>
        </member>
        <member name="M:Dataweb.NShape.Diagram.DrawShapes(System.Drawing.Graphics,Dataweb.NShape.LayerIds,System.Drawing.Rectangle)">
            <summary>
            Draws the diagram shapes.
            </summary>
            <param name="graphics"></param>
            <param name="layers"></param>
            <param name="clipRectangle"></param>
        </member>
        <member name="P:Dataweb.NShape.Diagram.Name">
            <summary>
            Culture invariant name.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Diagram.Title">
            <summary>
            Culture depending title.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Diagram.Width">
            <summary>
            Width of diagram in pixels.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Diagram.Height">
            <summary>
            Height of diagram in pixels.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Diagram.Size">
            <summary>
            Size of diagram in pixels.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Diagram.BackgroundColor">
            <summary>
            Background color of the diagram.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Diagram.BackgroundGradientColor">
            <summary>
            Second color of background gradient.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Diagram.BackgroundImage">
            <summary>
            Background image of diagram.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Diagram.BackgroundImageLayout">
            <summary>
            Image layout of background image.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Diagram.DisplayService">
            <summary>
            Specifies the display service to use for this diagram.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Diagram.Layers">
            <summary>
            Provides access to the diagram layers.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Diagram.Shapes">
            <summary>
            Provides access to the diagram shapes.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Diagram.HighQualityRendering">
            <summary>
            Specifies whether the diagram is to render in high quality.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.IStyleSet">
            <summary>
            Defines a set of styles.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Design">
            <summary>
            Defines a set of styles for shapes.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Design.#ctor">
            <summary>
            Creates an empty design for subsequent loading from the cache.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Design.#ctor(System.String)">
            <summary>
            Creates a value design ready for use. It already includes the standard styles.
            </summary>
            <param name="projectName"></param>
        </member>
        <member name="M:Dataweb.NShape.Design.Clear">
            <summary>
            Clears all style collections of the design
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Design.FindMatchingStyle(Dataweb.NShape.IStyle)">
            <summary>
            Returns the style of the same type with the same projectName if there is one in the design's style collection.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Design.AssignStyle(Dataweb.NShape.IStyle)">
            <summary>
            Assigns the given style to the existing style with the same projectName. 
            If there is not style with such a projectName, a new style is created.
            This method also takes care about preview styles.
            </summary>
            <param name="style">The style that should be assigned to an existing style.</param>
            <returns>Returns true if an existring style was assigned and false if there was no matching style.</returns>
        </member>
        <member name="P:Dataweb.NShape.Design.Styles">
            <summary>
            Returns all Styles of the design regardless of the style categoryTitle.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ILinearShape">
            <summary>
            One-dimensional shape defined by a sequence of vertices.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ILinearShape.AddVertex(System.Int32,System.Int32)">
            <summary>
            Adds a new ControlPoint to the interior of the shape.
            </summary>
            <param name="x">X coordinate of the new Controlpoint.</param>
            <param name="y">Y coordinate of the new ControlPoint.</param>
            <returns>ControlPointId of the new ControlPoint</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ILinearShape.InsertVertex(Dataweb.NShape.Advanced.ControlPointId,System.Int32,System.Int32)">
            <summary>
            Inserts a new ControlPoint to the shape before the ControlPoint with the 
            given Id. The new Point may be outside the shape, thus changing the outline of the shape.
            </summary>
            <param name="beforePointId">PointId of the ControlPoint the new point should be inserted before.</param>
            <param name="x">X coordinate of the new ControlPoint.</param>
            <param name="y">Y coordinate of the new ControlPoint.</param>
            <returns>ControlPointId of the new ControlPoint</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ILinearShape.RemoveVertex(Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Removes the point with the given PointId from the line.
            </summary>
            <param name="pointId">PointId of the point to remove.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ILinearShape.GetNextVertexId(Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            All Vertices of the line, ordered by their appearance on the line from start point to end point.
            A Vertex is defined as a ControlPoint which defines the shape of the linear shape.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.LineShapeBase">
            <summary>
            A one-dimensional shape
            </summary>
            <remarks>RequiredPermissions set</remarks>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ShapeBase">
            <summary>
            Base class for all graphical objects
            </summary>
            <remarks>RequiredPermissions set</remarks>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Connect(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Establishes a connction between this shape and the other shape.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Disconnect(Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Called upon the active shape of the connection. E.g. by the tool.
            If ownPointId is 0, the global connection is meant.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.GetConnectionInfos(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Returns all connections between this shape and the other shape. 
            If otherShape is null, the connections to all other selectedShapes are returned.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.GetConnectionInfo(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Returns all connections between this shape and the other shape. 
            If otherShape is null, the connections to all other selectedShapes are returned.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.FollowConnectionPointWithGluePoint(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Informs the shape that posesses the GluePoint that the connection point of an active connection has been moved. 
            If the connection is a point-to-point connection, the shape moves the glue point to the given position. 
            If the connection is a point-to-shape connection, the shape calculates the new endpoint (i.e. position of the sticky point) with the help of the connected shape. 
            If this shape is a ILineShape, it calls CalcGluePoint to determine the new sticky point position.
            In all cases, if the sticky point cannot be moved to the new required position because of constraints, the connection is dissolved.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.ContainsPoint(System.Int32,System.Int32)">
            <summary>
            Determines whether the shape was hit by a mouse click at the given coordinates.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.HitTest(System.Int32,System.Int32,Dataweb.NShape.Advanced.ControlPointCapabilities,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.IntersectsWith(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Determines whether the shape intersects with the given rectangle.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.CalculateCells(System.Int32)">
            <overriden></overriden>
            <remarks>This is a very approximative implementation and should be overriden for 
            better performance. Do not call the base class when overriding.</remarks>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.MoveControlPointBy(Dataweb.NShape.Advanced.ControlPointId,System.Int32,System.Int32,Dataweb.NShape.Advanced.ResizeModifiers)">
            <summary>
            Moves the given ControlPoint by the given offsets. 
            Invalidates the shape and calls FollowConnectionPointWithGluePoint for all ControlPoints affected by the movement.
            </summary>
            <returns>True if the mevement was performed as desired. False if the movement was performed as good as possible.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.MoveBy(System.Int32,System.Int32)">
            <summary>
            Moves the shape by the given offsets. 
            Invalidates the shape and calls FollowConnectionPointWithGluePoint for all ControlPoints affected by the movement.
            </summary>
            <returns>True if the mevement was performed as desired. False if the movement was performed as good as possible.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Rotate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Rotates the shape around the given coordinates.
            </summary>
            <param name="tenthsOfDegree">The rotation shapeAngle in tenths of degrees</param>
            <param name="x">X coordinate of the roation center</param>
            <param name="y">Y coordinate of the roation center</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Draw(System.Drawing.Graphics)">
            <summary>
            Paints the shape
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.DrawThumbnail(System.Drawing.Image,System.Int32,System.Drawing.Color)">
            <summary>
            Creates an Icon (for e.g. the ToolBox) of the shape by painting it on the given image. 
            The shape will be modified so it is recommended to call this method on temporary clones of the shape only.
            TransparentColor specifies the background color of the calling control. The shape is rendered using antialiasing so if the transparentcolor does not match the background, the painted shape has ugly borders.
            </summary>
            <param name="image">The image the shape is drawn to.</param>
            <param name="margin">The margin around the shape.</param>
            <param name="transparentColor">The color which should become the TransparentColor of the Image.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Invalidate">
            <summary>
            Invalidates the area of the shape in the display
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.AttachGluePointToConnectionPoint(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Intended for use by the framework. Do not call this method directly.
            </summary>
            <remarks>Called upon the passive shape of the connection. This method is 
            always called by the active shape in its Connect method. If ownPointId 
            is ControlPointId.Reference, the global connection is meant. In this case 
            the callee calls MoveControlPointTo upon the shape with the sticky point 
            to position the glue point.</remarks>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.DetachGluePointFromConnectionPoint(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Called upon the passive shape of the connection by the active shape. 
            If ownPointId is 0, the global connection is meant.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.MoveByCore(System.Int32,System.Int32)">
            <summary>
            Moves the shape
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.MovePointByCore(Dataweb.NShape.Advanced.ControlPointId,System.Int32,System.Int32,Dataweb.NShape.Advanced.ResizeModifiers)">
            <summary>
            Transformes the desired movement according to the shape's shapeAngle and then performs the movement by calling MoveControlPointBy()
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.RotateCore(System.Int32,System.Int32,System.Int32)">
            <summary>
            Rotates the shape around the given coordinates.
            </summary>
            <param name="tenthsOfDegree">The rotation shapeAngle in tenths of degrees</param>
            <param name="x">X coordinate of the roation center</param>
            <param name="y">Y coordinate of the roation center</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.CalcGluePoint(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Calculates the endpoint of a line that starts at startX, startY and is connected to this shape globally.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.CalcGluePointFromPosition(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape,System.Int32,System.Int32)">
            <summary>
            Calculates the nwe position of a GlueConnectionPoint connected to a shape
            </summary>
            <param name="ownPointId">Id of the connected GluePoint</param>
            <param name="shape">The shape the GluePoint is connected to</param>
            <param name="fromX">The X position of the other end of the line.</param>
            <param name="fromY">The Y position of the other end of the line.</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.RecalcDrawCache">
            <summary>
            Recalculate all objects that define the shape's outline and appearance, such 
            as ControlPoints and GraphicsPath. The objects have to be calculated at the 
            current position and with the current size but unrotated.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.TransformDrawCache(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Transforms all objects that need to be transformed, such as Point-Arrays, 
            GraphicsPaths or Brushes.
            </summary>
            <param name="deltaX">Translation on X axis</param>
            <param name="deltaY">Translation on Y axis</param>
            <param name="deltaAngle">Rotation shapeAngle in tenths of degrees</param>
            <param name="shapePosition">X coordinate of the rotation center</param>
            <param name="shapeRotationCenter">Y coordinate of the rotation center</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IReadOnlyShapeCollection#FindShape(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IReadOnlyShapeCollection#FindShape(System.Int32,System.Int32,Dataweb.NShape.Advanced.ControlPointCapabilities,System.Int32,Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IReadOnlyShapeCollection#FindShapes(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IReadOnlyShapeCollection#FindShapes(System.Int32,System.Int32,Dataweb.NShape.Advanced.ControlPointCapabilities,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IShapeCollection#Add(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IShapeCollection#Add(Dataweb.NShape.Advanced.Shape,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IShapeCollection#Clear">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IShapeCollection#Contains(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IShapeCollection#ContainsAll(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IShapeCollection#ContainsAny(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IShapeCollection#CopyTo(Dataweb.NShape.Advanced.Shape[],System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IShapeCollection#Remove(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IShapeCollection#AddRange(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IShapeCollection#Replace(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IShapeCollection#ReplaceRange(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IShapeCollection#RemoveRange(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IShapeCollection#SetZOrder(Dataweb.NShape.Advanced.Shape,System.Int32)">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeBase.LineStyle">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeBase.System#Collections#ICollection#Count">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeBase.System#Collections#ICollection#SyncRoot">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeBase.System#Collections#ICollection#IsSynchronized">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IReadOnlyShapeCollection#MaxZOrder">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IReadOnlyShapeCollection#MinZOrder">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IReadOnlyShapeCollection#TopMost">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IReadOnlyShapeCollection#Bottom">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IReadOnlyShapeCollection#TopDown">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeBase.Dataweb#NShape#Advanced#IReadOnlyShapeCollection#BottomUp">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.CopyFrom(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.MakePreview(Dataweb.NShape.IStyleSet)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.CalculateConnectionFoot(System.Int32,System.Int32,System.Int32,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.GetControlPointIds(Dataweb.NShape.Advanced.ControlPointCapabilities)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.NotifyStyleChanged(Dataweb.NShape.IStyle)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.Invalidate">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.GetControlPointPosition(Dataweb.NShape.Advanced.ControlPointId)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.HasControlPointCapability(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.ControlPointCapabilities)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.GetMenuItemDefs(System.Int32,System.Int32,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.GetPropertyDefinitions(System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.SaveFieldsCore(Dataweb.NShape.Advanced.IRepositoryWriter,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.LoadFieldsCore(Dataweb.NShape.Advanced.IRepositoryReader,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.SaveInnerObjectsCore(System.String,Dataweb.NShape.Advanced.IRepositoryWriter,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.LoadInnerObjectsCore(System.String,Dataweb.NShape.Advanced.IRepositoryReader,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.InsertVertex(Dataweb.NShape.Advanced.ControlPointId,System.Int32,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.AddVertex(System.Int32,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.RemoveVertex(Dataweb.NShape.Advanced.ControlPointId)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.CalcNormalVector(System.Drawing.Point)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.GetNextVertexId(Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Retrieve the id of the next neighbor point of pointId in physical order "start to end"
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.GetPreviousVertexId(Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Retrieve the id of the previous neighbor point of pointId in physical order "start to end"
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.#ctor(Dataweb.NShape.Advanced.ShapeType,Dataweb.NShape.Advanced.Template)">
            <summary>
            Protetced internal constructur. Should only be called by the Type's CreateShapeDelegate
            </summary>
            <param name="shapeType"></param>
            <param name="template"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.#ctor(Dataweb.NShape.Advanced.ShapeType,Dataweb.NShape.IStyleSet)">
            <summary>
            Protetced internal constructur. Should only be called by the Type's CreateShapeDelegate
            </summary>
            <param name="shapeType"></param>
            <param name="styleSetProvider"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.InitializeToDefault(Dataweb.NShape.IStyleSet)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.ProcessExecModelPropertyChange(Dataweb.NShape.Advanced.IModelMapping)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.RotateCore(System.Int32,System.Int32,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.CalculateBoundingRectangle(System.Boolean)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.MoveByCore(System.Int32,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.ContainsPointCore(System.Int32,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.GetControlPointIndex(Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Retrieve ControlPoint's index in the physical point array
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.GetControlPointId(System.Int32)">
            <summary>
            Retrieve physical point's ControlPointId
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.IsConnectionPointEnabled(Dataweb.NShape.Advanced.ControlPointId)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.StartCapIntersectsWith(System.Drawing.Rectangle)">
            <summary>
            Performs an intersection test on the LineCap
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.EndCapIntersectsWith(System.Drawing.Rectangle)">
            <summary>
            Performs an intersection test on the LineCap
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.StartCapContainsPoint(System.Int32,System.Int32)">
            <summary>
            Performs a hit test on the LineCap
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.EndCapContainsPoint(System.Int32,System.Int32)">
            <summary>
            Performs a hit test on the LineCap
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.CalcCapAngle(Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Calculates the line cap angle for the given control point ControlPointId.LineStart or ControlPointId.LineEnd
            </summary>
            <returns>Line cap angle in degrees</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.InvalidateDrawCache">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.UpdateDrawCache">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.RecalcDrawCache">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.TransformDrawCache(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Transforms all objects that need to be transformed, such as Point-Arrays, GraphicsPaths or Brushes
            </summary>
            <param name="deltaX">Translation on X axis</param>
            <param name="deltaY">Translation on Y axis</param>
            <param name="deltaAngleDeg">Rotation shapeAngle in tenths of degrees</param>
            <param name="shapePosition">X coordinate of the rotation center</param>
            <param name="shapeRotationCenter">Y coordinate of the rotation center</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.DrawStartCapBackground(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Draws the line's StartCap
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.DrawEndCapBackground(System.Drawing.Graphics,System.Int32,System.Int32)">
            <summary>
            Draws the line's EndCap
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.CalcCapPoints(System.Int32,System.Single,Dataweb.NShape.ICapStyle,Dataweb.NShape.ILineStyle,System.Drawing.Rectangle@,System.Drawing.PointF[]@)">
            <summary>
            Calculate LineCap
            </summary>
            <param name="pointIndex"></param>
            <param name="capAngle"></param>
            <param name="capStyle"></param>
            <param name="lineStyle"></param>
            <param name="capBounds"></param>
            <param name="pointBuffer"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineShapeBase.TransformCapToOrigin(System.Int32,System.Int32,System.Single,System.Drawing.PointF[]@)">
            <summary>
            Transform CapPoints to the line end it belongs to, rotate it in the right direction and scale it according 
            to the LineStyle's line width (see note below)
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.LineShapeBase.MinVertexCount">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.LineShapeBase.MaxVertexCount">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.LineShapeBase.VertexCount">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.LineShapeBase.IsDirected">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.LineShapeBase.ControlPointCount">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.LineShapeBase.ContainsPointDelta">
            <summary>
            Specifies the tolerance when performing hit tests and intersection calculations
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.LineShapeBase.StartCapStyleInternal">
            <summary>
            Internal start CapStyle of the line. May be published by a decendant through a property
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.LineShapeBase.EndCapStyleInternal">
            <summary>
            Internal end CapStyle of the line. May be published by a decendant through a property
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.PolylineBase">
            <summary>
            Abstract base class for polylines.
            </summary>
            <remarks>RequiredPermissions set</remarks>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PolylineBase.GetNewControlPointId">
            <summary>
            Retrieve a new PointId for a new point
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dataweb.NShape.Advanced.PolylineBase.X">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.PolylineBase.Y">
            <override></override>
        </member>
        <member name="T:Dataweb.NShape.Advanced.CircularArcBase">
            <summary>
            Abstract base class for circular arcs.
            </summary>
            <remarks>RequiredPermissions set</remarks>
        </member>
        <member name="P:Dataweb.NShape.Advanced.CircularArcBase.StartPoint">
            <summary>
            returns the coordinates of the arc's start point. 
            The start point is defined as the first point of the arc (clockwise) and the underlying point id changes depending on the position of the other points.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.CircularArcBase.EndPoint">
            <summary>
            returns the coordinates of the arc's end point. 
            The end point is defined as the first point of the arc (clockwise) and the underlying point id changes depending on the position of the other points.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.CircularArcBase.RadiusPoint">
            <summary>
            This point defines the radius of the arc and the start point and end points. 
            The radius point is located between start point and end point of the arc per definition. 
            Which of the points are regarded as start point or end point depends on the position of the radius point.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Layouters.ILayouter.ExecuteStep">
            <summary>
            
            </summary>
            <returns>False, if layouting is finished.</returns>
        </member>
        <member name="P:Dataweb.NShape.Layouters.ILayouter.AllShapes">
            <summary>
            Specifies all shapes in the diagram, including those that must not be moved.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Layouters.ILayouter.Shapes">
            <summary>
            Specifies the shapes that are to be layouted.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Layouters.LayouterBase">
            <summary>
            Abstract base class for layouters. Implementations of the ILayouter interface
            can but need not derive from this class.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Layouters.LayouterBase.Fit(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Passt die verschobenen Shapes in das angegebene Rechteck ein.
            </summary>
            <param name="size"></param>
        </member>
        <member name="T:Dataweb.NShape.Layouters.GridLayouter">
            <summary>
            Positions all shapes on the nodes of a rectangular grid.
            </summary>
            <remarks>Grid layouter looks for the most natural grid distances for the given
            shapes. These distances must be small enough to provide a different node for
            each shape and large enough to look tidy.</remarks>
        </member>
        <member name="T:Dataweb.Utilities.Buffers">
            <summary>
            Summary description for Buffers.
            </summary>
        </member>
        <member name="M:Dataweb.Utilities.Buffers.Initialize(System.Byte[],System.Byte,System.Int32,System.Int32)">
            <summary>
            Fills buffer with givven value.
            </summary>
            <param name="buffer">Buffer to fill</param>
            <param name="value">Value to fill with</param>
            <param name="index">Index of first buffer entry to fill</param>
            <param name="count">Numeric of buffer entries to fill</param>
        </member>
        <member name="T:Dataweb.Utilities.IStringIterator">
            <summary>
            Zugriff auf die einzelnen Zeichen eines Strings unabhängig von der Art der
            physichen Speicherung.
            </summary>
        </member>
        <member name="P:Dataweb.Utilities.BufferStringIterator.String">
            <summary>
            Nur für internen Gebrauch, z.B. Debuggen
            </summary>
        </member>
        <member name="T:Dataweb.Utilities.Blob">
            <summary>
            Klasse für Binary Large Objects. Verwaltet einen Byte-Puffer, der auch größer
            sein kann als der gerade belegte Bereich.
            </summary>
        </member>
        <member name="M:Dataweb.Utilities.Blob.Clear">
            <summary>
            Leert das Blob, setzt die Anzahl der gültigen Bytes auf 0.
            </summary>
        </member>
        <member name="M:Dataweb.Utilities.Blob.CompareTo(System.Object)">
            <summary>
            Implementation der IComparable-Schnittstelle.
            </summary>
            <param name="obj"></param>
            <returns>-1 wenn this kleiner, +1 wenn this größer, 0 wenn beide Blobs exakt gleich.</returns>
        </member>
        <member name="M:Dataweb.Utilities.Blob.SetCapacity(System.Int32)">
            <summary>
            Setzt das Fassungsvermögen des Blobs.
            Dieses muss größer oder gleich der Anzahl der gültigen Bytes sein (Datenintegrität). 
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:Dataweb.Utilities.Blob.Append(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Hängt einen Block von Bytes an das Blob an.
            </summary>
            <param name="buffer"></param>
            <param name="bufferOffset"></param>
            <param name="size"></param>
        </member>
        <member name="M:Dataweb.Utilities.Blob.CopyTo(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            Kopiert einen Block von Bytes aus dem Blob in einen Puffer.
            </summary>
        </member>
        <member name="P:Dataweb.Utilities.Blob.Capacity">
            <summary>
            Liefert/setzt das Fassungsvermögen des Blobs in Anzahl Bytes.
            </summary>
        </member>
        <member name="P:Dataweb.Utilities.Blob.Data">
            <summary>
            Liefert eine Referenz auf den Datenpuffer
            </summary>
        </member>
        <member name="P:Dataweb.Utilities.Blob.Length">
            <summary>
            Liefert die Anzahl der gültigen Bytes im Blob.
            </summary>
        </member>
        <member name="P:Dataweb.Utilities.Blob.MaxCapacity">
            <summary>
            Liefert das maximal mögliche Fassungsvermögen eines Blobs.
            </summary>
        </member>
        <member name="M:Dataweb.Utilities.StringExtensions.IsTdbIdentifierEqual(System.String,System.String)">
            <summary>
            Vergleicht die beiden Strings nach den klassischen TurboDB String-Regeln.
            </summary>
            <param name="ident1"></param>
            <param name="ident2"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.Utilities.StringExtensions.GetRegExForPattern(System.String,System.Char,System.Char,System.Char)">
            <summary>
            Liefert einen regulären Ausdruck für das Datei-Muster.
            </summary>
            <param name="pattern">Muster mit Jokern wie für Windows Dateinamen und SQL LIKE üblich</param>
            <param name="singleJoker">Das Zeichen für den Platzhalter für ein einzelnes Zeichen</param>
            <param name="multiJoker">Das Zeichen für den Platzhalter für beliebig viele Zeichen</param>
            <param name="escapeChar">Das Zeichen, das als Escape-Zeichen verwendet wird</param>
            <returns>Regulärer Ausdruck, den man zum Vergleichen benutzen kann</returns>
        </member>
        <member name="M:Dataweb.Utilities.StringExtensions.IsThoroughRegExMatch(System.Text.RegularExpressions.Regex,System.String)">
            <summary>
            Liefert True, wenn str exakt auf regEx passt.
            </summary>
        </member>
        <member name="M:Dataweb.Utilities.StringExtensions.SplitSeparatedList(System.String,System.Char,System.Int32@,System.String@)">
            <summary>
            Holt das nächste abgetrennte Wort aus der Liste.
            </summary>
            <param name="list">Eine Zeichenkette aus durch <separator> getrennten Wörtern</separator></param>
            <param name="position">Position des ersten Zeichens des nächsten Wortes in der Liste</param>
            <param name="separator">Trennzeichen</param>
            <param name="word">Das gefunden Wort</param>
            <returns>True, wenn noch ein Wort gefunden wurde</returns>
            <remarks>Wörter der Länge 0 dürfen in der Zeichenkette nicht vorkommen.""</remarks>
        </member>
        <member name="M:Dataweb.Utilities.StringExtensions.SplitSeparatedList(System.String,System.Char,System.Char,System.Int32@,System.String@)">
            <summary>
            Holt das nächste abgetrennte Wort aus der Liste. Beachtet dabei, dass Title 
            in Anführungszeichen nicht getrennt wird.
            </summary>
            <param name="list">Eine Zeichenkette aus durch <separator> getrennten Wörtern</separator></param>
            <param name="position">Position des ersten Zeichens des nächsten Wortes in der Liste</param>
            <param name="separator">Trennzeichen</param>
            <param name="quote">Anführungszeichen</param>
            <param name="word">Das gefunden Wort</param>
            <returns>True, wenn noch ein Wort gefunden wurde</returns>
            <remarks>Wörter der Länge 0 dürfen in der Zeichenkette nicht vorkommen.""</remarks>
        </member>
        <member name="M:Dataweb.Utilities.StringExtensions.Matches(System.String,System.Int32,System.String,System.Int32,System.Char,System.Char,System.Char,System.Boolean)">
            <summary>
            Prüft, ob s auf das Muster passt.
            </summary>
            <param name="pattern">String-Muster mit % und _ wie in SQL üblich</param>
            <param name="patternPos">Position im Muster, ab dem geprüft wird</param>
            <param name="str">Zu prüfender String</param>
            <param name="strPos">Position im String ab der geprüft wird</param>
            <param name="multiJoker">Ersatzzeichen für eine beliebige Anzahl Zeichen.</param>
            <param name="singleJoker">Ersatzzeichen für ein einzelnes Zeichen.</param>
            <param name="escape">Das zu verwendendende Escape-Zeichen</param>
            <param name="ignoreCase">Falls true, kein Unterschied zwischen Groß- und Kleinschreibung.</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.Utilities.DateExtensions.WeekOfYear(System.DateTime)">
            <summary>
            Funktion ist fehlerhaft, wird aber derzeit nicht benutzt.
            3.1.2005 -> 53!!!
            </summary>
            <param name="dt"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.Utilities.DateExtensions.ParseTime(System.String)">
            <summary>
            Konvertiert s in ein Datum/Uhrzeit, wenn es einem der Standard TurboDB Datum/Uhrzeit-Formate
            entspricht.
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.Utilities.DateExtensions.ParseDateTimePrecision(System.String)">
            <summary>
            Setzt voraus, dass s ein gültiges DateTime ist
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="T:Dataweb.Utilities.NamedImage">
            <summary>
            This structure combines GDI+ images (bitmaps or metafiles) with a projectName (typically the filename withoout path and extension).
            </summary>
        </member>
        <member name="M:Dataweb.Utilities.NamedImage.FromFile(System.String)">
            <summary>
            Loads an image from a file.
            </summary>
        </member>
        <member name="M:Dataweb.Utilities.NamedImage.ToString">
            <override></override>
        </member>
        <member name="M:Dataweb.Utilities.NamedImage.#ctor(System.String)">
            <summary>
            Creates a NamedImage from the given file.
            </summary>
            <param name="pathName"></param>
        </member>
        <member name="M:Dataweb.Utilities.NamedImage.#ctor(System.Drawing.Image,System.String)">
            <summary>
            Creates a NamedImage
            </summary>
        </member>
        <member name="M:Dataweb.Utilities.NamedImage.Save(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Saves this NamedImage to an image file.
            </summary>
            <param name="directoryName"></param>
            <param name="format"></param>
        </member>
        <member name="M:Dataweb.Utilities.NamedImage.Load(System.String)">
            <summary>
            Loads the imagefile into this NamedImage.
            </summary>
            <param name="pathName"></param>
        </member>
        <member name="M:Dataweb.Utilities.NamedImage.GetImageFormatExtension(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Gets the appropriate file extension for the given ImageFormat.
            </summary>
        </member>
        <member name="P:Dataweb.Utilities.NamedImage.Image">
            <summary>
            The image.
            </summary>
        </member>
        <member name="P:Dataweb.Utilities.NamedImage.Name">
            <summary>
            Name of the image (typically the filename without path and extension)
            </summary>
        </member>
        <member name="P:Dataweb.Utilities.NamedImage.Width">
            <summary>
            Width of the image. 0 if no image is set.
            </summary>
        </member>
        <member name="P:Dataweb.Utilities.NamedImage.Height">
            <summary>
            Height of the image. 0 if no image is set.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.EntityPropertyDefinition">
            <summary>
            Describes a property of an entity.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="P:Dataweb.NShape.Advanced.EntityPropertyDefinition.Name">
            <summary>
            Indicates the name of the property.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.EntityPropertyDefinition.ElementName">
            <summary>
            Specfies name of the property as used in the repository.
            </summary>
            <remarks>This is a convenience property for the cache. Applications 
            should never access it.</remarks>
        </member>
        <member name="T:Dataweb.NShape.Advanced.EntityFieldDefinition">
            <summary>
            Describes a single valued property.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="T:Dataweb.NShape.Advanced.EntityInnerObjectsDefinition">
            <summary>
            Describes a property which holds a collection of inner objects.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="P:Dataweb.NShape.Advanced.EntityInnerObjectsDefinition.EntityTypeName">
            <summary>
            Retrieves the entity type name of the inner objects.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.EntityInnerObjectsDefinition.PropertyDefinitions">
            <summary>
            Retrieves the property definitions of the inner objects.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.EntityCategory">
            <summary>
            Describes the kind of entity.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="F:Dataweb.NShape.Advanced.EntityCategory.ProjectSettings">
            <summary>Project settings</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.EntityCategory.Diagram">
            <summary>Diagram</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.EntityCategory.Shape">
            <summary>Shape</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.EntityCategory.Template">
            <summary>Template</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.EntityCategory.Model">
            <summary>Model</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.EntityCategory.ModelObject">
            <summary>Model object</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.EntityCategory.ModelMapping">
            <summary>Model object</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.EntityCategory.Design">
            <summary>Design</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.EntityCategory.Style">
            <summary>Style</summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IEntityType">
            <summary>
            Describes an entity in the conceptual data model.
            </summary>
            <remarks>An entity type is used to map the object model to the conceptual 
            data model. Since the XML document represents that conceptual model, the 
            entity types define the schema of the XML document.</remarks>
            <status>reviewed</status>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IEntityType.CreateInstanceForLoading">
            <summary>
            Creates an empty instance of this entity for loading.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IEntityType.FullName">
            <summary>
            Full name of the entity type including the namespace.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IEntityType.ElementName">
            <summary>
            Name of the entity type used in XML.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IEntityType.Category">
            <summary>
            Indicates the category of the entity.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IEntityType.RepositoryVersion">
            <summary>
            Indicates the repository version to be used with the entity type.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IEntityType.PropertyDefinitions">
            <summary>
            Lists all property infos of this entity type.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IEntityType.HasInnerObjects">
            <summary>
            Indicates whether this entity type contains inner objects.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.CreateInstanceDelegate">
            <summary>
            Represents a method that creates an entity.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Dataweb.NShape.Advanced.GetPropertyDefinitionsDelegate">
            <summary>
            Represents a method that retrieves the property definitions of an entity.
            </summary>
            <param name="version">Repository version to which to refer</param>
            <status>reviewed</status>
        </member>
        <member name="T:Dataweb.NShape.Advanced.EntityType">
            <summary>
            Describes the entities of one sort.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.EntityType.#ctor(System.String,Dataweb.NShape.Advanced.EntityCategory,System.Int32,Dataweb.NShape.Advanced.CreateInstanceDelegate,System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.EntityPropertyDefinition})">
            <summary>
            Constructs an entity type.
            </summary>
            <param name="entityTypeName">Name of the entity type</param>
            <param name="category">Category of the entity type</param>
            <param name="version">Storage format version to use with this entity type</param>
            <param name="createInstanceDelegate">Method to call to create an instance of the type</param>
            <param name="propertyInfos">Properties of the entities</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.EntityType.CreateInstanceForLoading">
            <override></override>
        </member>
        <!-- Badly formed XML comment ignored for member "P:Dataweb.NShape.Advanced.EntityType.FullName" -->
        <member name="P:Dataweb.NShape.Advanced.EntityType.ElementName">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.EntityType.Category">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.EntityType.RepositoryVersion">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.EntityType.PropertyDefinitions">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.EntityType.HasInnerObjects">
            <override></override>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IRepositoryWriter">
            <summary>
            Writes entities into a cache.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IRepositoryWriter.BeginWriteInnerObjects">
            <summary>
            Starts writing the next set of inner objects through an additional cache 
            repositoryWriter.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IRepositoryWriter.EndWriteInnerObjects">
            <summary>
            Terminates writing the current type of inner objects.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IRepositoryWriter.BeginWriteInnerObject">
            <summary>
            Starts writing an inner object to the cache.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IRepositoryWriter.EndWriteInnerObject">
            <summary>
            Commits the current inner object to the data store and prepares the inner
            repositoryWriter for the next inner object.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IRepositoryReader">
            <summary>
            Reads objects from a cache.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IRepositoryReader.BeginReadInnerObjects">
            <summary>
            Fetches the next set of inner objects and prepares them for reading.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IRepositoryReader.EndReadInnerObjects">
            <summary>
            Finishes reading the current set of inner objects.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IRepositoryReader.BeginReadInnerObject">
            <summary>
            Fetches the next inner object in a set of inner object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IRepositoryReader.EndReadInnerObject">
            <summary>
            Finishes reading an inner object.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.CaptionedShapeBase">
            <summary>
            Shape having one caption.
            </summary>
            <remarks>RequiredPermissions set</remarks>
            <status>reviewed</status>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PathBasedPlanarShape.CalculateBoundingRectangle(System.Boolean)">
            <summary>
            Retuirns the BoundingRectangle of the shape. 
            This default implementation uses the GetBounds() method provided by the GraphicsPath class.
            It is recommended to override this method with more shape specific versions that do not call base.
            </summary>
            <param name="tight">
            If true, a thight fitting x axis aligned bounding rectangle will be returned.
            If false, a x axis aligned bounding rectangle also containing all control points will be returned.
            </param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PathBasedPlanarShape.RecalcDrawCache">
            <summary>
            Recalculate all objects that define the shape's outline and appearance, 
            such as ControlPoints and GraphicsPath. The objects have to be calculated 
            at the correct position and with the correct size but unrotated.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PathBasedPlanarShape.TransformDrawCache(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Transforms all objects that need to be transformed, such as Point-Arrays, GraphicsPaths or Brushes
            </summary>
            <param name="deltaX">Translation on X axis</param>
            <param name="deltaY">Translation on Y axis</param>
            <param name="deltaAngle">Rotation shapeAngle in tenths of degrees</param>
            <param name="shapePosition">X coordinate of the rotation center</param>
            <param name="shapeRotationCenter">Y coordinate of the rotation center</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PathBasedPlanarShape.CalcControlPoints">
            <summary>
            Calculates the coordinates of the control points.
            </summary>
            <remarks>
            The control point positions have to be calculated assuming X|Y at the coordinate origin 0|0 because it will be translated to the current position X|Y after calculating.
            (unrotated) shape's control points.		/// 
            </remarks>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PathBasedPlanarShape.CalculatePath">
            <summary>
            Calculate the shape's (unrotated) GraphicsPath. 
            The GraphicsPath has to be calculated assuming X|Y at the coordinate origin 0|0 because it will be translated to the current position X|Y after calculating.
            </summary>
            <returns>Returns true if the path was successfully calculated. Otherwise, the return value will be false.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PathBasedPlanarShape.DrawPath(System.Drawing.Graphics,Dataweb.NShape.ILineStyle,Dataweb.NShape.IFillStyle)">
            <summary>
            Draws the calculated GraphicsPath. If the GaphicsPath is not calculated yet, UpdateDrawCache will be called.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.PathBasedPlanarShape.DivFactorX">
            <summary>
            When resizing shapes, this factor is used to ensure that the movement is 
            dividable by this factor without remainder so the center of the shape does 
            not have to be rounded. E.g. a rectangle shape has a DivFactor of 2 (because 
            the center is located at 1/2 of the Height/Width).
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.PathBasedPlanarShape.DivFactorY">
            <summary>
            When resizing shapes, this factor is used to ensure that the movement is 
            dividable by this factor without remainder so the center of the shape does 
            not have to be rounded. E.g. a rectangle shape has a DivFactor of 2 (because 
            the center is located at 1/2 of the Height/Width).
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ICaptionedShape">
            <summary>
            Represents a shape with one or more captions in it.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ICaptionedShape.GetCaptionText(System.Int32)">
            <summary>
            Retrieves the text of the indicated caption.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ICaptionedShape.SetCaptionText(System.Int32,System.String)">
            <summary>
            Sets the text of the indicated caption.
            </summary>
            <param name="index"></param>
            <param name="text"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ICaptionedShape.GetCaptionCharacterStyle(System.Int32)">
            <summary>
            Retrieves the character style of the indicated caption.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ICaptionedShape.SetCaptionCharacterStyle(System.Int32,Dataweb.NShape.ICharacterStyle)">
            <summary>
            Sets the character style of the indicated caption.
            </summary>
            <param name="index"></param>
            <param name="characterStyle"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ICaptionedShape.GetCaptionParagraphStyle(System.Int32)">
            <summary>
            Retrieves the paragraph style of the indicated caption.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ICaptionedShape.SetCaptionParagraphStyle(System.Int32,Dataweb.NShape.IParagraphStyle)">
            <summary>
            Sets the paragraph style of the indicated caption.
            </summary>
            <param name="index"></param>
            <param name="paragraphStyle"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ICaptionedShape.GetCaptionBounds(System.Int32,System.Drawing.Point@,System.Drawing.Point@,System.Drawing.Point@,System.Drawing.Point@)">
            <summary>
            Retrieves the transformed bounds of the caption in diagram coordinates. These 
            bounds define the maximum area the caption text can occupy.
            </summary>
            <param name="index">Index of the caption</param>
            <param name="topLeft">The top left corner of the transformed rectangle defining 
            the bounds of the caption</param>
            <param name="topRight">The top right corner of the transformed rectangle 
            defining the bounds of the caption</param>
            <param name="bottomRight">The bottom right corner of the transformed rectangle 
            defining the bounds of the caption</param>
            <param name="bottomLeft">The top bottom left of the transformed rectangle 
            defining the bounds of the caption</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ICaptionedShape.GetCaptionTextBounds(System.Int32,System.Drawing.Point@,System.Drawing.Point@,System.Drawing.Point@,System.Drawing.Point@)">
            <summary>
            Retrieves the transformed bounds of the caption's text in diagram coordinates. 
            These bounds define the current area of the text in the caption.
            </summary>
            <param name="index">Index of the caption</param>
            <param name="topLeft">The top left corner of the transformed rectangle defining 
            the bounds of the caption</param>
            <param name="topRight">The top right corner of the transformed rectangle 
            defining the bounds of the caption</param>
            <param name="bottomRight">The bottom right corner of the transformed rectangle 
            defining the bounds of the caption</param>
            <param name="bottomLeft">The top bottom left of the transformed rectangle 
            defining the bounds of the caption</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ICaptionedShape.FindCaptionFromPoint(System.Int32,System.Int32)">
            <summary>
            Finds a caption which contains the given point.
            </summary>
            <returns>Caption index of -1 if none found.</returns>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ICaptionedShape.CaptionCount">
            <summary>
            The number of captions the shape currently contains.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CaptionedShapeBase.CalcCaptionBounds(System.Int32,System.Drawing.Rectangle@)">
            <summary>
            Calculates the untransformed area in which the caption's text is layouted.
            </summary>
            <remarks> The caller has to rotate and offset the rectangle around/by X|Y before using it.</remarks>
        </member>
        <member name="T:Dataweb.Utilities.Resources">
            <summary>
            Loads strings from the resource of the library.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.RectangleBase">
            <remarks>RequiredPermissions set</remarks>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IsoscelesTriangleBase.CalculateShapePoints">
            <summary>
            Calculated the untransformed shape points of the triangle
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.DiameterShapeBase">
            <remarks>RequiredPermissions set</remarks>
        </member>
        <member name="T:Dataweb.NShape.Advanced.SquareBase">
            <remarks>RequiredPermissions set</remarks>
        </member>
        <member name="T:Dataweb.NShape.Advanced.CircleBase">
            <remarks>RequiredPermissions set</remarks>
        </member>
        <member name="T:Dataweb.NShape.Controllers.IDiagramPresenter">
            <summary>
            Defines the interface between the tool and the diagram presenter.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.UnselectAll">
            <summary>
            Clears the current selection.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.UnselectShape(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Removes the given Shape from the current selection.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.SelectShape(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Selects the given shape. Current selection will be cleared.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.SelectShape(Dataweb.NShape.Advanced.Shape,System.Boolean)">
            <summary>
            Selects the given shape.
            </summary>
            <param name="shape">Shape to be selected.</param>
            <param name="addToCurrentSelection">If true, the given shape will be added to the current selection, otherwise the current selection will be cleared before selecting this shape.</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.SelectShapes(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},System.Boolean)">
            <summary>
            Selects the given shape.
            </summary>
            <param name="shape">Shape to be selected.</param>
            <param name="addToCurrentSelection">If true, the given shape will be added to the current selection, otherwise the current selection will be cleared before selecting this shape.</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.SelectShapes(System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Selects all shapes within the given area.
            </summary>
            <param name="area">All shapes in the given rectangle will be selected.</param>
            <param name="addToCurrentSelection">If true, the given shape will be added to the current selection, otherwise the current selection will be cleared before selecting this shape.</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.SelectAll">
            <summary>
            Selectes all shapes of the diagram
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.DiagramToControl(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Calculate contol coordinates from diagram coordinates
            </summary>
            <param name="dX">X value in diagram coordinates</param>
            <param name="dY">Y value in diagram coordinates</param>
            <param name="cX">X value in control coordinates</param>
            <param name="cY">Y value in control coordinates</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.DiagramToControl(System.Drawing.Point,System.Drawing.Point@)">
            <summary>
            Calculate contol coordinates from diagram coordinates
            </summary>
            <param name="dPt">Point in diagram coordinates</param>
            <param name="cPt">Point in control Coordinates</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.DiagramToControl(System.Drawing.Rectangle,System.Drawing.Rectangle@)">
            <summary>
            Calculate contol coordinates from diagram coordinates
            </summary>
            <param name="dRect">Rectangle in diagram coordinates</param>
            <param name="cRect">Rectangle in control coordinates</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.DiagramToControl(System.Int32,System.Int32@)">
            <summary>
            Calculate contol coordinates from diagram coordinates
            </summary>
            <param name="dDistance">Distance in diagram coordinates</param>
            <param name="cDistance">Distance in control coordinates</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.DiagramToControl(System.Drawing.Size,System.Drawing.Size@)">
            <summary>
            Calculate contol coordinates from diagram coordinates
            </summary>
            <param name="dSize">Size in diagram coordinates</param>
            <param name="cSize">Size in control coordinates</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.ControlToDiagram(System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Calculate diagram coordinates from control coordinates
            </summary>
            <param name="cX">X value in control coordinates</param>
            <param name="cY">Y value in control coordinates</param>
            <param name="dX">X value in diagram coordinates</param>
            <param name="dY">Y value in diagram coordinates</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.ControlToDiagram(System.Drawing.Point,System.Drawing.Point@)">
            <summary>
            Calculate diagram coordinates from control coordinates
            </summary>
            <param name="cPt">Point in control coordinates</param>
            <param name="dPt">Point in diagram coordinates</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.ControlToDiagram(System.Drawing.Rectangle,System.Drawing.Rectangle@)">
            <summary>
            Calculate diagram coordinates from control coordinates
            </summary>
            <param name="cRect">Rectangle in control coordinates</param>
            <param name="dRect">Rectangle in diagram coordinates</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.ControlToDiagram(System.Drawing.Size,System.Drawing.Size@)">
            <summary>
            Calculate diagram coordinates from control coordinates
            </summary>
            <param name="cSize">Size in control coordinates</param>
            <param name="dSize">Size in diagram coordinates</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.ControlToDiagram(System.Int32,System.Int32@)">
            <summary>
            Calculate diagram coordinates from control coordinates
            </summary>
            <param name="cDistance">Distance in control coordinates</param>
            <param name="dDistance">Distance in diagram coordinates</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.ScreenToDiagram(System.Drawing.Point,System.Drawing.Point@)">
            <summary>
            Calculate diagram coorinates from screen coordinates
            </summary>
            <param name="sPt">Point in Screen coordinates</param>
            <param name="iPt">Point in diagram coordinates</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.ScreenToDiagram(System.Drawing.Rectangle,System.Drawing.Rectangle@)">
            <summary>
            Calculate diagram coorinates from screen coordinates
            </summary>
            <param name="sRect">Rectangle in screen coordinates</param>
            <param name="dRect">Rectangle in diagram coordinates</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.EnsureVisible(System.Int32,System.Int32)">
            <summary>
            Ensures that the given point is visible. 
            If the given point is outside the displayed area, the diagram will be scrolled.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.EnsureVisible(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Ensures that the given shape is completely visible. 
            If the given shape is outside the displayed area, the diagram will be scrolled and/or zoomed.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.EnsureVisible(System.Drawing.Rectangle)">
            <summary>
            Ensures that the given area is visible. 
            If the given area is outside the displayed area, the diagram will be scrolled and/or zoomed.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.IDiagramPresenter.SetCursor(System.Int32)">
            <summary>
            Sets a previously registered cursor.
            </summary>
            <param name="cursor"></param>
        </member>
        <member name="P:Dataweb.NShape.Controllers.IDiagramPresenter.Font">
            <summary>
            Font used for hints in the diagram presentation (e.g. current angle during rotation)
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.IDiagramPresenter.HighQualityRendering">
            <summary>
            True, if high quality rendering is switched on.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.IDiagramPresenter.GripSize">
            <summary>
            The size of a ControlPoint handle from the center to the outer handle bound.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.IDiagramPresenter.ZoomLevel">
            <summary>
            Zoom in percentage.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ShapeAggregation">
            <summary>
            Defines a set of shapes aggregated into another shape.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeAggregation.NotifyParentRotated(System.Int32,System.Int32,System.Int32)">
            <summary>
            Notifies the child shapes that their parent has been rotated. Rotates all children according to the parent's rotation.
            </summary>
            <returns>
            True if all child shapes have rotated in the desired way. 
            False if the child shapes cannot move as desired due to restrictions (such as connections).
            </returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeAggregation.NotifyParentMoved(System.Int32,System.Int32)">
            <summary>
            Notifies the child shapes that their parent has been moved. Moves all children according to the parent's movement.
            </summary>
            <returns>
            True if all child shapes have moved in the desired way. 
            False if the child shapes cannot move as desired due to restrictions (such as connections).
            </returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeAggregation.NotifyParentSized(System.Int32,System.Int32)">
            <summary>
            Notifies the child shapes that their parent has been resized. The action performed depends on the implementing class.
            </summary>
            <returns>
            True if all child shapes have resized in the desired way. 
            False if the child shapes cannot move as desired due to restrictions (such as connections).
            </returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeAggregation.NotifyChildMoved(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeAggregation.NotifyChildResized(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeAggregation.NotifyChildRotated(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.CopyFrom(Dataweb.NShape.Advanced.IShapeCollection)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.NotifyParentMoved(System.Int32,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.NotifyParentSized(System.Int32,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.NotifyChildMoving(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.NotifyChildMoved(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.NotifyChildResizing(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.NotifyChildResized(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.NotifyChildRotating(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.NotifyChildRotated(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.InsertCore(System.Int32,Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.AddRangeCore(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.RemoveCore(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.RemoveRangeCore(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.ReplaceCore(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.ReplaceRangeCore(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GroupShapeAggregation.ClearCore">
            <override></override>
        </member>
        <member name="T:Dataweb.NShape.Project">
            <summary>
            Collection of elements making up a NShape project.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IRegistrar">
            <summary>
            Represents a place, where shapes and model object typea are registered.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IRegistrar.RegisterLibrary(System.String,System.Int32)">
            <summary>
            Registers a library for shape or model objects.
            </summary>
            <param name="version">Version of the library</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IRegistrar.RegisterShapeType(Dataweb.NShape.Advanced.ShapeType)">
            <summary>
            Registers a shape type implemented in the library.
            </summary>
            <param name="shapeType"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IRegistrar.RegisterModelObjectType(Dataweb.NShape.Advanced.ModelObjectType)">
            <summary>
            Registers a model object type implemented in the library.
            </summary>
            <param name="modelObjectType"></param>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IStyleSetProvider">
            <summary>
            Provides a set of styles.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IStyleSetProvider.StyleSet">
            <summary>
            Retrives a style set.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Project.IsValidName(System.String)">
            <summary>
            Checks whether a name is a valid identifier for NShape.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Dataweb.NShape.Project.#ctor">
            <summary>
            Constructs a new project instance.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Project.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Constructs a new project instance.
            </summary>
            <param name="container"></param>
        </member>
        <member name="M:Dataweb.NShape.Project.ApplyDesign(Dataweb.NShape.Design)">
            <summary>
            Uses the given design for the project.
            </summary>
            <param name="newDesign"></param>
        </member>
        <member name="M:Dataweb.NShape.Project.ApplyDesign(System.String)">
            <summary>
            Uses the given design for the project.
            </summary>
            <param name="newDesign"></param>
        </member>
        <member name="M:Dataweb.NShape.Project.AddLibrary(System.Reflection.Assembly)">
            <summary>
            Adds a static library to the project.
            </summary>
            <param name="library"></param>
        </member>
        <member name="M:Dataweb.NShape.Project.AddLibraryByName(System.String)">
            <summary>
            Adds a dynamic library to the project.
            </summary>
            <param name="assemblyName">Full assembly projectName of library.</param>
        </member>
        <member name="M:Dataweb.NShape.Project.AddLibraryByFilePath(System.String)">
            <summary>
            Adds a dynamic library to the project.
            </summary>
            <param name="assemblyPath">Complete file path to the library assembly.</param>
        </member>
        <member name="M:Dataweb.NShape.Project.RemoveAllLibraries">
            <summary>
            Unloads and removes all libraries.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Project.ExecuteCommand(Dataweb.NShape.ICommand)">
            <summary>
            Executes a command and adds it to the project's history.
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:Dataweb.NShape.Project.Create">
            <summary>
            Opens a new project.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Project.Open">
            <summary>
            Opens an existing project.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Project.Close">
            <summary>
            Closes the project.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Project.RegisterEntityTypes">
            <summary>
            Registers all entities with the repository.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Project.TemplatesChanged">
            <summary>
            Occurs when templates were changed.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Project.Dataweb#NShape#Advanced#IRegistrar#RegisterLibrary(System.String,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Project.Dataweb#NShape#Advanced#IRegistrar#RegisterShapeType(Dataweb.NShape.Advanced.ShapeType)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Project.Dataweb#NShape#Advanced#IRegistrar#RegisterModelObjectType(Dataweb.NShape.Advanced.ModelObjectType)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Project.CreateDefaultTemplate(Dataweb.NShape.Advanced.ShapeType)">
            <summary>
            For each loaded Type, a new Template is created.
            These automatically created templates are not stored by the cache.
            </summary>
            <param name="shapeType"></param>
        </member>
        <member name="P:Dataweb.NShape.Project.Name">
            <summary>
            Specifies the name of the project.
            </summary>
            <remarks>The name is used as the repository name as well.</remarks>
        </member>
        <member name="P:Dataweb.NShape.Project.AutoGenerateTemplates">
            <summary>
            Specifies whether the project creates templates for each item in registered 
            shape and model libraries.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Project.LibrarySearchPaths">
            <summary>
            Specifies the directories, where NShape libraries are looked for.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Project.Repository">
            <summary>
            Specifies the repository used to store the project.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Project.ModelObjectTypes">
            <summary>
            Provides access to the registered model object types.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Project.ShapeTypes">
            <summary>
            Provides access to the registered shape types.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Project.History">
            <summary>
            Provides undo/redo capability for the project.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Project.SecurityManager">
            <summary>
            Specifies the security manager used with this project.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Project.Settings">
            <summary>
            Accesses the project settings.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Project.Design">
            <summary>
            Accesses the styles used for the project.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Project.Libraries">
            <summary>
            Retrieves the registered libraries.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Project.IsOpen">
            <summary>
            Indicates whether the project is open.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Project.Opened">
            <summary>
            Occurs when the the project was opened.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Project.Closing">
            <summary>
            Occurs when the the project is going to be closed.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Project.Closed">
            <summary>
            Occurs when the project was closed.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Project.LibraryLoaded">
            <summary>
            Occurs when a NShape library was loaded.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Project.StylesChanged">
            <summary>
            Occurs when styles were changed.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Project.Dataweb#NShape#Advanced#IStyleSetProvider#StyleSet">
            <override></override>
        </member>
        <member name="T:Dataweb.NShape.Project.Library">
            <summary>
            Describes a shape or model object library.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.LibraryLoadedEventArgs">
            <summary>
            Provides information for the LibraryLoaded event.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="P:Dataweb.NShape.Controllers.PropertyControllerEventArgs.ObjectsType">
            <summary>
            Returns the common Type of all objects in the objects collection.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.PropertyController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ResourceString">
            <summary>
            Simulates a string coming from a resource.
            </summary>
            <remarks>Later versions will hold a reference to a ResourceManager and read
            the string from there.</remarks>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IDisplayService">
            <summary>
            Provides services to shapes
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IDisplayService.Invalidate(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Invalidate the given rectangle.
            </summary>
            <param name="x">Left side of the rectangle</param>
            <param name="y">Top side of the rectangle</param>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IDisplayService.Invalidate(System.Drawing.Rectangle)">
            <summary>
            Invalidate the given rectangle.
            </summary>
            <param name="rectangle">Rectangle to invalidate.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IDisplayService.NotifyBoundsChanged">
            <summary>
            Update layout according to the changed bounds.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IDisplayService.InfoGraphics">
            <summary>
            Info graphics for mearusing text, etc. Do not dispose!
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ProjectSettings">
            <summary>
            Encapsulates the configuration on project level.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ProjectSettings.#ctor">
            <summary>
            Constructs a projects projectData instance.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ProjectSettings.Clear">
            <summary>
            Empties the projectData.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ProjectSettings.CopyFrom(Dataweb.NShape.Advanced.ProjectSettings)">
            <summary>
            Copies all properties from the given projectData.
            </summary>
            <param name="source"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ProjectSettings.GetRepositoryVersion(System.String)">
            <summary>
            Retrieves the cache version of the given library.
            </summary>
            <param name="libraryName"></param>
            <returns></returns>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ProjectSettings.LastSaved">
            <summary>
            Defines the date of the last saving of the project.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ProjectSettings.AssemblyNames">
            <summary>
            Indicates the library assemblies required for the project.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.ICommand">
            <summary>
            Encapsulates a command.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.ICommand.Execute">
            <summary>
            Executes the command.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.ICommand.Revert">
            <summary>
            Reverts the command.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.ICommand.IsAllowed(Dataweb.NShape.ISecurityManager)">
            <summary>
            Tests whether the required permissions for the command are granted.
            </summary>
            <param name="security"></param>
            <returns></returns>
        </member>
        <member name="P:Dataweb.NShape.ICommand.Repository">
            <summary>
            Specifies the cache on which the command will be executed.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.ICommand.Description">
            <summary>
            Describes the purpose of the command.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Command">
            <summary>
            Base class for all commands.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Command.#ctor">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Command.Execute">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Command.Revert">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Command.IsAllowed(Dataweb.NShape.ISecurityManager)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Command.UndeleteEntity(Dataweb.NShape.Advanced.IEntity)">
            <summary>
            Checks if the given entity has to be undeleted instead of being inserted
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Command.UndeleteEntities``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Checks if the given entity has to be undeleted instead of being inserted
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Command.RequiredPermission">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Command.Repository">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Command.Description">
            <override></override>
        </member>
        <member name="T:Dataweb.NShape.AutoDisconnectShapesCommand">
            <summary>
            Base class for commands that need to disconnect connected shapes before the action may executed,
            e.g. a DeleteCommand has to disconnect the deleted shape before deleting it.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.InsertOrRemoveShapeCommand">
            <summary>
            Base class for inserting and removing shapes along with their model objects to a diagram and a cache
            </summary>
        </member>
        <member name="T:Dataweb.NShape.ShapeAggregationCommand">
            <summary>
            Base class for (un)aggregating shapes in ShapeAggregations
            </summary>
        </member>
        <member name="T:Dataweb.NShape.ConnectionCommand">
            <summary>
            Base class for Connecting and disconnecting two shapes
            </summary>
        </member>
        <member name="T:Dataweb.NShape.AggregatedCommand">
            <summary>
            Executes a list of commands
            The Label of this command is created by concatenating the labels of each command.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.ConnectCommand">
            <summary>
            Command for connecting a shape's GluePoint to an other shape's GluePoint
            </summary>
        </member>
        <member name="T:Dataweb.NShape.MoveShapesCommand">
            <summary>
            Moves multiple shapes by individual distances.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.MoveGluePointCommand.#ctor(Dataweb.NShape.Advanced.Shape,System.Int32,Dataweb.NShape.Advanced.Shape,System.Int32,System.Int32,Dataweb.NShape.Advanced.ResizeModifiers)">
            <summary>
            Constructs a glue point moving command.
            </summary>
            <param name="shape"></param>
            <param name="ownPointId"></param>
            <param name="otherShape"></param>
            <param name="dX"></param>
            <param name="dY"></param>
            <param name="modifiers"></param>
        </member>
        <member name="T:Dataweb.NShape.RotateShapesCommand">
            <summary>
            Rotates all members of a set of shapes by the same angle.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.InsertShapeCommand">
            <summary>
            Inserts the given shape(s) into diagram and cache.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.InsertShapeCommand.PrepareShape(Dataweb.NShape.Advanced.Shape,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Reset shape's ZOrder to 'Unassigned' and offset shape's position if neccessary
            </summary>
        </member>
        <member name="T:Dataweb.NShape.DeleteShapeCommand">
            <summary>
            RemoveRange the given shapes and their model objects from diagram and cache.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.GroupShapesCommand">
            <summary>
            Create clones of the given shapes and insert them into diagram and cache
            </summary>
        </member>
        <member name="T:Dataweb.NShape.UngroupShapesCommand">
            <summary>
            Create clones of the given shapes and insert them into diagram and cache
            </summary>
        </member>
        <member name="T:Dataweb.NShape.SqlStore">
            <summary>
            Cache implementation for MS SQL Server
            </summary>
        </member>
        <member name="T:Dataweb.NShape.AdoNetStore">
            <summary>
            Stores NShape projects in any ADO.NET enabled database management system.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.Store">
            <summary>
            Stores cache data persistently in a data source.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Store.Exists">
            <summary>
            Tests whether the project already exists in the data source.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Store.Create(Dataweb.NShape.Advanced.IStoreCache)">
            <summary>
            Creates a project store in the data source.
            </summary>
            <param name="storeCache"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Store.Open(Dataweb.NShape.Advanced.IStoreCache)">
            <summary>
            Opens a project store in the data source.
            </summary>
            <param name="storeCache"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Store.Close(Dataweb.NShape.Advanced.IStoreCache)">
            <summary>
            Closes the project store.
            </summary>
            <param name="storeCache"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Store.Erase">
            <summary>
            Deletes the project store in the data source.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Store.LoadProjects(Dataweb.NShape.Advanced.IStoreCache,Dataweb.NShape.Advanced.IEntityType,System.Object[])">
            <summary>
            
            </summary>
            <param name="cache"></param>
            <param name="entityType"></param>
            <param name="parameters"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Store.LoadDesigns(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <summary>
            Loads general designs or a project design.
            </summary>
            <param name="cache">Store cache to load to.</param>
            <param name="projectId">Project id for project design, null for general designs.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Store.SaveChanges(Dataweb.NShape.Advanced.IStoreCache)">
            <summary>
            Commits all modifications in the cache to the data store.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Store.Version">
            <summary>
            Specifies the main version of the storage format.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Store.ProjectName">
            <summary>
            Specifies the name of the project.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.Exists">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.Create(Dataweb.NShape.Advanced.IStoreCache)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.Open(Dataweb.NShape.Advanced.IStoreCache)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.Close(Dataweb.NShape.Advanced.IStoreCache)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.Erase">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.LoadEntities``1(Dataweb.NShape.Advanced.IStoreCache,Dataweb.NShape.Advanced.IEntityType,Dataweb.NShape.Advanced.IdFilter,Dataweb.NShape.Advanced.Resolver,Dataweb.NShape.RepositoryCommandType,System.Object[])">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.LoadTemplates(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.LoadProjects(Dataweb.NShape.Advanced.IStoreCache,Dataweb.NShape.Advanced.IEntityType,System.Object[])">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.LoadModel(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.LoadDesigns(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.LoadDiagramShapes(Dataweb.NShape.Advanced.IStoreCache,Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.LoadTemplateShapes(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.LoadDiagrams(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.LoadChildShapes(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.LoadTemplateModelObjects(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.LoadModelModelObjects(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.LoadChildModelObjects(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.LoadShapeConnections(Dataweb.NShape.Advanced.IStoreCache,Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.GetSelectStylesByDesignIdCommand(System.String)">
            <summary>
            Retrieves a command that selects all styles for the given design for the current
            project.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.GetSelectShapeConnectionByShapeIdCommand">
            <summary>
            Retrieves a SQL command for selecting the connections of a given shape.
            </summary>
            <returns></returns>
            <remarks>The command selects the connections for which the given shape 
            is on the active side.</remarks>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.SetSelectShapeConnectionByShapeIdCommand(System.Data.IDbCommand)">
            <summary>
            Defines a SQL command for selecting the connections of a given shape.
            </summary>
            <returns></returns>
            <remarks>The command selects the connections for which the given shape 
            is on the active side.</remarks>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.UpdateEntities``1(Dataweb.NShape.Advanced.IStoreCache,Dataweb.NShape.Advanced.IEntityType,System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.EntityBucket{``0}},Dataweb.NShape.Advanced.FilterDelegate{``0})">
            <summary>
            Updates the modified entities against the ADO.NET data provider.
            </summary>
            <typeparam projectName="TEntity"></typeparam>
            <param name="entityType"></param>
            <param name="loadedEntities"></param>
            <param name="filterDelegate"></param>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.DeleteEntities``1(Dataweb.NShape.Advanced.IStoreCache,Dataweb.NShape.Advanced.IEntityType,System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.EntityBucket{``0}})">
            <summary>
            Erases deleted entities of type TEntity from the data store.
            </summary>
            <typeparam projectName="TEntity"></typeparam>
            <param name="entityType"></param>
            <param name="loadedEntities"></param>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.DeleteShapeConnections(Dataweb.NShape.Advanced.IStoreCache)">
            <summary>
            Deletes the deleted connections from the database.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.CreateDbCommands(Dataweb.NShape.Advanced.IStoreCache)">
            <summary>
            Override this method to create the actual SQL commands for your database.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.CreateDbSchema">
            <summary>
            Creates a schema for the database based on the current DB commands.
            </summary>
            <remarks>This function has to be regarded more as a testing feature. Real life 
            application will usually provide their specialized database schemas and generation
            scripts.</remarks>
        </member>
        <member name="P:Dataweb.NShape.AdoNetStore.Version">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.AdoNetStore.ProjectName">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.AdoNetStore.ProviderName">
            <summary>
            Specifies the projectName of the ADO.NET provider used as listed in the System 
            Configuration.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.AdoNetStore.ConnectionString">
            <summary>
            Specifies the connection string for the database store.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.RepositoryReader">
            <summary>
            Cache reader for the cached cache.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.RepositoryReader.DoBeginObject">
            <summary>
            Advances to the next object and prepares reading it.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.RepositoryReader.DoEndObject">
            <summary>
            Finishes reading an object.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.RepositoryReader.ValidatePropertyIndex">
            <summary>
            Checks whether the current property index refers to a valid entity field.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.RepositoryReader.PropertyIndex">
            <summary>
            Indicates the current index in the list of property infos of the entity type.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.RepositoryWriter">
            <summary>
            Offline RepositoryWriter
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.RepositoryWriter.Reset(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.EntityPropertyDefinition})">
            <summary>
            Reinitializes the writer to work with given property infos.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.RepositoryWriter.Prepare(Dataweb.NShape.Advanced.IEntity)">
            <summary>
            Specifies the entity to write next. Is null when going to write an inner object.
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.DbParameterWriter.Prepare(Dataweb.NShape.Advanced.IEntity)">
            <summary>
            This method has to be called before passing the repositoryWriter to the IPeristable object for saving.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.DbParameterWriter.Flush">
            <summary>
            Commits the changes to the database.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.AdoNetStore.DbParameterWriter.PrepareFields">
            <summary>
            Prepares the cache repositoryWriter for writing the fields of another entity.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CursorProvider.RegisterCursor(System.String)">
            <summary>
            Registers a custom cursor that can be used with SetCursor.
            </summary>
            <param name="fileName">The file name of the cursor resource.</param>
            <returns>Id of the cursor.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CursorProvider.RegisterCursor(System.Reflection.Assembly,System.String)">
            <summary>
            Registers a custom cursor that can be used with SetCursor.
            </summary>
            <param name="resourceAssembly">Assembly containing the cursor resource.</param>
            <param name="resourceName">The name of the cursor resource.</param>
            <returns>Id of the cursor.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CursorProvider.RegisterCursor(System.Byte[])">
            <summary>
            Registers a custom cursor that can be used with SetCursor.
            </summary>
            <param name="fileName">The cursor resource.</param>
            <returns>Id of the cursor.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CursorProvider.GetResource(System.Int32)">
            <summary>
            Returns the resource associated with the given cursorID. 
            CursorId 0 means the system's default cursor which is not stored as resource.
            </summary>
            <param name="cursorID">ID of the cursor returned by the RegisterCursor method.</param>
            <returns></returns>
        </member>
        <member name="P:Dataweb.NShape.Advanced.CursorProvider.CursorIDs">
            <summary>
            Returns all registered cursors.
            CursorId 0 means the system's default cursor which is not stored as resource.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ToolResult">
            <summary>
            Specifies the outcome of a tool execution.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ToolResult.Executed">
            <summary>Tool was successfully executed</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.ToolResult.Canceled">
            <summary>Tool was canceled</summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ToolExecutedEventArgs">
            <summary>
            Describes how a tool was executed.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="T:Dataweb.NShape.Advanced.Tool">
            <summary>
            Controls a user operation on a diagram.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Tool.ProcessMouseEvent(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Controllers.MouseEventArgsDg)">
            <summary>
            Processes a display mouse event.
            The base Method has to be called at the end when overriding this implementation.
            </summary>
            <param name="display">Display where the event occurred.</param>
            <param name="e">Description of the mouse event.</param>
            <returns>True if the event was handled, false if the event was not handled.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Tool.ProcessKeyEvent(Dataweb.NShape.Controllers.KeyEventArgsDg)">
            <summary>
            Processes a keyboard event.
            </summary>
            <param name="e">Description of the keyboard event.</param>
            <returns>True if the event was handled, false if the event was not handled.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Tool.Cancel">
            <summary>
            Sets protected readonly-properties to invalid values and raises the ToolExecuted event.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Tool.FindNearestSnapPoint(Dataweb.NShape.Controllers.IDiagramPresenter,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Finds the nearest snap point for a point.
            </summary>
            <param name="ptX">X coordinate</param>
            <param name="ptY">Y coordinate</param>
            <param name="snapDeltaX">Horizontal distance between x and the nearest snap point.</param>
            <param name="snapDeltaY">Vertical distance between y and the nearest snap point.</param>
            <returns>Distance to nearest snap point.</returns>
            <remarks>If snapping is disabled for the current ownerDisplay, this function does virtually nothing.</remarks>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Tool.FindNearestSnapPoint(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Finds the nearest SnapPoint in range of the given shape's control point.
            </summary>
            <param name="shape">The shape for which the nearest snap point is searched.</param>
            <param name="connectionPointId">The control point of the shape.</param>
            <param name="moveByX">Declares the distance, the shape is moved on X axis before finding snap point.</param>
            <param name="moveByY">Declares the distance, the shape is moved on X axis before finding snap point.</param>
            <param name="snapDeltaX">Horizontal distance between ptX and the nearest snap point.</param>
            <param name="snapDeltaY">Vertical distance between ptY and the nearest snap point.</param>
            <returns>Distance to nearest snap point.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Tool.FindNearestSnapPoint(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Advanced.Shape,System.Int32,System.Int32,System.Int32@,System.Int32@)">
            <summary>
            Finds the nearest SnapPoint in range of the given shape.
            </summary>
            <param name="shape">The shape for which the nearest snap point is searched.</param>
            <param name="shapeOffsetX">Declares the distance, the shape is moved on X axis 
            before finding snap point.</param>
            <param name="shapeOffsetY">Declares the distance, the shape is moved on X axis 
            before finding snap point.</param>
            <param name="snapDeltaX">Horizontal distance between ptX and the nearest snap point.</param>
            <param name="snapDeltaY">Vertical distance between ptY and the nearest snap point.</param>
            <returns>Distance to the calculated snap point.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Tool.FindNearestSnapPoint(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Advanced.Shape,System.Int32,System.Int32,System.Int32@,System.Int32@,Dataweb.NShape.Advanced.ControlPointCapabilities)">
            <summary>
            Finds the nearest SnapPoint in range of the given shape.
            </summary>
            <param name="shape">The shape for which the nearest snap point is searched.</param>
            <param name="moveByX">Declares the distance, the shape is moved on X axis 
            before finding snap point.</param>
            <param name="moveByY">Declares the distance, the shape is moved on X axis 
            before finding snap point.</param>
            <param name="snapDeltaX">Horizontal distance between ptX and the nearest snap point.</param>
            <param name="snapDeltaY">Vertical distance between ptY and the nearest snap point.</param>
            <param name="controlPointCapabilities">Filter for control points taken into 
            account while calculating the snap distance.</param>
            <returns>Control point of the shape, the calculated distance refers to.</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Tool.FindNearestControlPoint(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.ControlPointCapabilities,System.Int32,System.Int32,System.Int32@,System.Int32@,Dataweb.NShape.Advanced.ControlPointId@)">
            <summary>
            Finds the nearest ControlPoint in range of the given shape's ControlPoint. 
            If there is no ControlPoint in range, the snap distance to the nearest grid 
            line will be calculated.
            </summary>
            <param name="shape">The given shape.</param>
            <param name="connectionPointId">the given shape's ControlPoint</param>
            <param name="moveByX">Declares the distance, the shape is moved on X axis before finding snap point.</param>
            <param name="moveByY">Declares the distance, the shape is moved on X axis before finding snap point.</param>
            <param name="snapDeltaX">Horizontal distance between ptX and the nearest snap point.</param>
            <param name="snapDeltaY">Vertical distance between ptY and the nearest snap point.</param>
            <param name="ownPointId">The Id of the returned shape's nearest ControlPoint.</param>
            <returns>The shape owning the nearest ControlPoint</returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Tool.FindConnectionTarget(Dataweb.NShape.Controllers.IDiagramPresenter,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Find the topmost shape that is not selected and has a valid ConnectionPoint (or ReferencePoint) 
            in range of the given point.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Tool.FindShapeAtCursor(Dataweb.NShape.Controllers.IDiagramPresenter,System.Int32,System.Int32,Dataweb.NShape.Advanced.ControlPointCapabilities,System.Int32,System.Boolean)">
            <summary>
            Find the topmost shape that is at the given point or has a control point with the given
            capabilities in range of the given point. If parameter onlyUnselected is true, only 
            shapes that are not selected will be returned.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Tool.StartToolAction(Dataweb.NShape.Controllers.IDiagramPresenter,System.Drawing.Point,System.Boolean)">
            <summary>
            Sets the start coordinates for an action as well as the display to use for the action.
            </summary>
            <param name="display">The display to use for the action.</param>
            <param name="startPos">The start position of the action.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Tool.EndToolAction">
            <summary>
            Ends a tool's action. Crears the start position for the action and the display used for the action.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Advanced.Tool.ToolExecuted">
            <summary>
            Occurs when the tool was executed or canceled.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Tool.CurrentMouseState">
            <summary>
            Current state of the mouse (state after the last ProcessMouseEvent call).
            Position is in Diagram coordinates.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Tool.ActionDiagramPresenter">
            <summary>
            The display used by the current (pending) action.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Tool.ActionStartPos">
            <summary>
            Transformed start coordinates of the current (pending) action (diagram coordinates).
            Use SetActionStartPosition method to set this value and ClearActionStartPosition to clear it.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.PointerTool">
            <summary>
            Lets the user size, move, rotate and select shapes.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.RefreshIcons">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.ProcessMouseEvent(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Controllers.MouseEventArgsDg)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.ProcessKeyEvent(Dataweb.NShape.Controllers.KeyEventArgsDg)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.EnterDisplay(Dataweb.NShape.Controllers.IDiagramPresenter)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.LeaveDisplay(Dataweb.NShape.Controllers.IDiagramPresenter)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.Draw(Dataweb.NShape.Controllers.IDiagramPresenter)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.Invalidate(Dataweb.NShape.Controllers.IDiagramPresenter)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.StartToolAction(Dataweb.NShape.Controllers.IDiagramPresenter,System.Drawing.Point,System.Boolean)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.EndToolAction">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.CancelCore">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.DetermineMouseDownAction(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Advanced.Tool.MouseState)">
            <summary>
            Decide which tool action is suitable for the current mouse state.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.DetermineMouseMoveAction(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Advanced.Tool.MouseState,Dataweb.NShape.Advanced.Tool.ShapeAtCursorInfo)">
            <summary>
            Decide which tool action is suitable for the current mouse state.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.ConnectPreviewOfShape(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Create previews of shapes connected to the given shape (and it's children) and connect them to the
            shape's preview (or the preview of it's child)
            </summary>
            <param name="shape">The original shape which contains all ConnectionInfo</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.CreateConnectedTargetPreviewShape(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ShapeConnectionInfo)">
            <summary>
            Creates (or finds) a preview of the connection's PassiveShape and connects it to the current preview shape
            </summary>
            <param name="previewShape">The preview shape</param>
            <param name="connectionInfo">ConnectionInfo of the original (non-preview) shape</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PointerTool.CreatePreviewShapes(Dataweb.NShape.Controllers.IDiagramPresenter)">
            <summary>
            Create Previews of all shapes selected in the CurrentDisplay.
            These previews are connected to all the shapes the original shapes are connected to.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.PointerTool.EnableQuickRotate">
            <summary>
            Specifies if a double click on the rotation handle will rotate the shape by 90°
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.PointerTool.Previews">
            <summary>
            The dictionary of preview shapes: The key is the original shape, the value is the preview shape.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.TemplateTool">
            <summary>
            Lets the user create a templated shape.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.TemplateTool.RefreshIcons">
            <override></override>
        </member>
        <member name="T:Dataweb.NShape.Advanced.LinearShapeCreationTool">
            <summary>
            Lets the user create a shape based on a point sequence.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LinearShapeCreationTool.ProcessMouseEvent(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Controllers.MouseEventArgsDg)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LinearShapeCreationTool.ProcessKeyEvent(Dataweb.NShape.Controllers.KeyEventArgsDg)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LinearShapeCreationTool.EnterDisplay(Dataweb.NShape.Controllers.IDiagramPresenter)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LinearShapeCreationTool.LeaveDisplay(Dataweb.NShape.Controllers.IDiagramPresenter)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LinearShapeCreationTool.Invalidate(Dataweb.NShape.Controllers.IDiagramPresenter)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LinearShapeCreationTool.Draw(Dataweb.NShape.Controllers.IDiagramPresenter)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LinearShapeCreationTool.StartToolAction(Dataweb.NShape.Controllers.IDiagramPresenter,System.Drawing.Point,System.Boolean)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LinearShapeCreationTool.EndToolAction">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LinearShapeCreationTool.CancelCore">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LinearShapeCreationTool.StartLine(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Advanced.Tool.MouseState)">
            <summary>
            Creates a new preview line shape
            </summary>
            <param name="shape">The shape under/near the line's StartPoint</param>
            <param name="pointIdToConnect">The ControlPointId under/near the line's StartPoint</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LinearShapeCreationTool.InsertNewPoint(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Advanced.Tool.MouseState)">
            <summary>
            Inserts a new point into the current preview line before the end point (that is sticking to the mouse cursor).
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LinearShapeCreationTool.FinishLine(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Advanced.Tool.MouseState,System.Boolean)">
            <summary>
            Creates a new LinearShape and inserts it into the diagram of the CurrentDisplay by executing a Command.
            </summary>
            <param name="createWithAllPoints">If true, the line will be created as a 
            clone of the preview shape. If false, the line will be created until the 
            last point inserted. The point at the mouse cursor will be skipped.</param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LinearShapeCreationTool.DetermineCursor(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Set the cursor for the current action
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.PlanarShapeCreationTool">
            <summary>
            Lets the user place a new shape on the diagram.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PlanarShapeCreationTool.ProcessMouseEvent(Dataweb.NShape.Controllers.IDiagramPresenter,Dataweb.NShape.Controllers.MouseEventArgsDg)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PlanarShapeCreationTool.ProcessKeyEvent(Dataweb.NShape.Controllers.KeyEventArgsDg)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PlanarShapeCreationTool.EnterDisplay(Dataweb.NShape.Controllers.IDiagramPresenter)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PlanarShapeCreationTool.LeaveDisplay(Dataweb.NShape.Controllers.IDiagramPresenter)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PlanarShapeCreationTool.Draw(Dataweb.NShape.Controllers.IDiagramPresenter)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PlanarShapeCreationTool.Invalidate(Dataweb.NShape.Controllers.IDiagramPresenter)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PlanarShapeCreationTool.CancelCore">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PlanarShapeCreationTool.StartToolAction(Dataweb.NShape.Controllers.IDiagramPresenter,System.Drawing.Point,System.Boolean)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.PlanarShapeCreationTool.EndToolAction">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Controllers.LayerController.Project">
            <summary>
            Returns the Owner's Project
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.DesignController.DesignCreated">
            <summary>
            Raised when a new design was created.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.DesignController.DesignChanged">
            <summary>
            Raised when a design has changed
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.DesignController.DesignDeleted">
            <summary>
            Raised when a design has been deleted.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.DesignController.StyleCreated">
            <summary>
            Raised when a new style has been created
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.DesignController.StyleChanged">
            <summary>
            Raised when a style has been modified
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.DesignController.StyleDeleted">
            <summary>
            Raisd when a style has been deleted.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.Stroke">
            <summary>
            Beschreibt einen Zug beim Zeichnen als Folge von Pixel-Koordinaten
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Stroke.Add(System.Int32,System.Int32)">
            <summary>
            Fügt einen Punkt zum Zug hinzu. Auch alle Punkte auf der Verbindungslinie 
            zwischen dem letzten Punkt und dem neuen werden hinzugefügt.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.StrokeSequence">
            <summary>
            Beschreibt eine Zeichnung als eine Abfolge von Zügen. 
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.FigureShape">
            <summary>
            Geometrische Grundform wie z.B. Kreis, Rechteck usw. oder ganz allgemein
            ein Pfad.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.PathFigureShape">
            <summary>
            Beschreibt eine Reihe von Ecken mit geraden oder gebogenen Linien dazwischen.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.TriangleFigureShape">
            <summary>
            Beschreibt ein Dreieck
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.TriangleFigureShape.IsEquilateral">
            <summary>
            Stellt, fest ob das Dreieck gleichseitig ist.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.TriangleFigureShape.IsIsosceles">
            <summary>
            Stellt fest, ob das Dreieck gleichschenklig ist.
            Wert 100 = sicher, Wert 0 = keinesfalls
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.TriangleFigureShape.IsRight">
            <summary>
            Stellt fest, of das Dreieck rechtwinklig ist
            Wert 100 = sicher, Wert 0 = keinesfalls
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.QuadrangleFigureShape">
            <summary>
            Beschreibt ein Viereck
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.EllipseFigureShape">
            <summary>
            Beschreibt eine Ellipse
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.LineFigureShape">
            <summary>
            Beschreibt eine gerade Linie.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.LineFigureShape.CalcDistance(System.Drawing.Point)">
            <summary>
            Berechnet den Abstand des Punktes von der Linie
            </summary>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:Dataweb.NShape.Advanced.MultiLineFigureShape">
            <summary>
            Beschreibt eine Linie mit mehreren Segmenten.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.FigureShapeRelation">
            <summary>
            Beschreibt die Beziehung zweier Grundformen (selectedShapes) untereinander.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.Figure">
            <summary>
            Beschreibt eine Figur als Ansammlung von Grundformen mit Beziehungen
            dazwischen.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Figure.Matches(Dataweb.NShape.Advanced.Figure)">
            <summary>
            Bestimmt, ob die andere Figur dieser hier gleicht. Dabei ist diese
            die Referenzfigur und die andere die Testfigur.
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="T:Dataweb.NShape.Advanced.Shaper">
            <summary>
            Verwaltet eine Liste von registrierten Figuren und bestimmt die ähnlichste
            zu einem gegebenen Pfad.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shaper.FindFigure(Dataweb.NShape.Advanced.Figure)">
            <summary>
            Liefert die Figur aus der Liste der registrierten Figure, die figure entspricht.
            </summary>
            <param name="figure"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Shaper.CreateLine(Dataweb.NShape.Advanced.Stroke,System.Int32@)">
            <summary>
            Extrahiert die nächste Linie aus dem Pixeln
            </summary>
            <param name="stroke"></param>
            <param name="index">Index der Startecke für die Linie</param>
            <returns></returns>
        </member>
        <member name="T:Dataweb.NShape.Advanced.Shaper.NamedFigure">
            <summary>
            Übersetzt das Bitmap in ein Pixel-Array
            </summary>
            <param name="bitmap"></param>
            <returns></returns>
        </member>
        <member name="T:Dataweb.NShape.Advanced.Caption">
            <summary>
            Displays a text within a shape.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Caption.CalculateTextBounds(System.Drawing.Rectangle,Dataweb.NShape.ICharacterStyle,Dataweb.NShape.IParagraphStyle,Dataweb.NShape.Advanced.IDisplayService)">
            <summary>
            Calculates the current text's area within the given caption bounds.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Caption.InvalidatePath">
            <summary>
            Resets the caption path.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.Caption.CalculatePath(System.Int32,System.Int32,System.Int32,System.Int32,Dataweb.NShape.ICharacterStyle,Dataweb.NShape.IParagraphStyle)">
            <summary>
            Calculates the caption path in the untransformed state.
            </summary>
            <param name="x">X coordinate of the layout rectangle</param>
            <param name="y">Y coordinate of the layout rectangle</param>
            <param name="width">Width of the layout rectangle</param>
            <param name="height">Height of the layout rectangle</param>
            <param name="characterStyle">Character style of the caption</param>
            <param name="paragraphStyle">Paragraph style of the caption</param>
            <returns></returns>
        </member>
        <member name="P:Dataweb.NShape.Advanced.Caption.Text">
            <summary>
            Specifies the text of the caption.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.CreateShapeDelegate">
            <summary>
            Represents a method that creates a shape with or without template.
            </summary>
            <param name="shapeType">Shape type of the new shape.</param>
            <param name="template">Template of the new shape. If null a self-contained shape is created.</param>
            <status>reviewed</status>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ShapeType">
            <summary>
            Describes a shape type.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeType.#ctor(System.String,System.String,Dataweb.NShape.Advanced.ResourceString,Dataweb.NShape.Advanced.CreateShapeDelegate,Dataweb.NShape.Advanced.GetPropertyDefinitionsDelegate)">
            <summary>
            Constructs a shape type.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeType.#ctor(System.String,System.String,Dataweb.NShape.Advanced.ResourceString,Dataweb.NShape.Advanced.CreateShapeDelegate,Dataweb.NShape.Advanced.GetPropertyDefinitionsDelegate,System.Drawing.Bitmap)">
            <summary>
            Constructs a shape type.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeType.#ctor(System.String,System.String,Dataweb.NShape.Advanced.ResourceString,Dataweb.NShape.Advanced.CreateShapeDelegate,Dataweb.NShape.Advanced.GetPropertyDefinitionsDelegate,System.Boolean)">
            <summary>
            Constructs a shape type.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeType.#ctor(System.String,System.String,Dataweb.NShape.Advanced.ResourceString,Dataweb.NShape.Advanced.CreateShapeDelegate,Dataweb.NShape.Advanced.GetPropertyDefinitionsDelegate,System.Drawing.Bitmap,System.Boolean)">
            <summary>
            Constructs a shape type.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeType.CreateInstance">
            <summary>
            Create a completely new shape instance which will be initialized with the standard styles.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeType.CreateInstance(Dataweb.NShape.Advanced.Template)">
            <summary>
            Create a new shape based on a template. The shape will use the template's styles.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeType.CreatePreviewInstance(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Creates an exact clone of the given shape that uses preview styles.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeType.GetPropertyDefinitions(System.Int32)">
            <summary>
            Retrieves the property definitions of the shape type.
            </summary>
            <param name="version">Repository version for which the property definitions 
            are to be fetched.</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeType.ToString">
            <summary>
            Converts the value of this instance to a string.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeType.CreateInstanceForLoading">
            <summary>
            Creates an empty instance for subsequent loading from a repository.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeType.Name">
            <summary>
            Name of shape type, used to identify a shape type for creating shapes.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeType.LibraryName">
            <summary>
            Indicates the name of the library this shape type is implemented in.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeType.FullName">
            <summary>
            Indicates the complete unique name of the shape type.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeType.DefaultCategoryTitle">
            <summary>
            Indicates the default for the culture depending category name.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeType.Description">
            <summary>
            Specifies the culture depending description of the model type.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeType.SupportsAutoTemplates">
            <summary>
            Indicates whether it makes sense to create an automatic template for this 
            shape type.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeType.FreehandReferenceImage">
            <summary>
            Indicates the pattern bitmap for freehand drawing.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ShapeType.StyleSetProvider">
            <summary>
            Used by the project to supplement a design.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IReadOnlyShapeTypeCollection">
            <summary>
            Provides reading access to a collection of shape types.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ShapeTypeCollection">
            <summary>
            Manages a list of shape types.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeTypeCollection.Add(Dataweb.NShape.Advanced.ShapeType)">
            <summary>
            Adds a shape type to the collection.
            </summary>
            <param name="shapeType"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ShapeTypeCollection.GetShapeType(System.String)">
            <summary>
            Retrieves the shape type with the given projectName.
            </summary>
            <param name="typeName">Either a full (i.e. including the namespace) 
            or partial shape type projectName</param>
            <returns>Shape type with given projectName.</returns>
        </member>
        <member name="T:Dataweb.NShape.Advanced.EntityBucket`1">
            <summary>
            Stores a reference to a loaded object together with its state.
            </summary>
            <typeparam projectName="Type">Type of the object to store</typeparam>
        </member>
        <member name="T:Dataweb.NShape.Advanced.FilterDelegate`1">
            <summary>
            Defines a filter function for the loading methods.
            </summary>
            <typeparam projectName="TEntity"></typeparam>
            <param name="entity"></param>
            <param name="owner"></param>
            <returns></returns>
        </member>
        <member name="T:Dataweb.NShape.Advanced.Resolver">
            <summary>
            Retrieves the entity with the given id.
            </summary>
            <param name="pid"></param>
            <returns></returns>
        </member>
        <member name="T:Dataweb.NShape.Advanced.CachedRepository">
            <summary>
            Caches modifications to the cache and commits them to the data store
            during SaveChanges.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.IRepository">
            <summary>
            Defines the contract for storing NShape projects.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.AddEntityType(Dataweb.NShape.Advanced.IEntityType)">
            <summary>
            Registers an entity with the cache.
            </summary>
            <param name="entityType">Entity type names must be unique ignoring their casing.</param>
        </member>
        <member name="M:Dataweb.NShape.IRepository.RemoveEntityType(System.String)">
            <summary>
            Unregisters an entity with the cache.
            </summary>
            <param name="entityType">Name of entity type to remove with correct casing</param>
        </member>
        <member name="M:Dataweb.NShape.IRepository.RemoveAllEntityTypes">
            <summary>
            Removes all registered entity types.
            </summary>
            <remarks>This method must be called before different libraries are loaded
            and their entities re-registered.</remarks>
        </member>
        <member name="M:Dataweb.NShape.IRepository.Exists">
            <summary>
            Indicates whether the project exists in the persistent store of the cache.
            </summary>
            <returns>True, wenn the cache is connected to an existing persistent store.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Dataweb.NShape.IRepository.Create" -->
        <member name="M:Dataweb.NShape.IRepository.Open">
            <summary>
            Opens an existing project in the cache.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.Close">
            <summary>
            Closes the cache.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.Erase">
            <summary>
            Deletes the persistent store of the project from the cache.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.ObtainNewBottomZOrder(Dataweb.NShape.Diagram)">
            <summary>
            Gets a bottom z-order value for the given diagram.
            </summary>
            <param name="diagram"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.IRepository.ObtainNewTopZOrder(Dataweb.NShape.Diagram)">
            <summary>
            Gets a top z-order value for the given diagram.
            </summary>
            <param name="diagram"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.IRepository.SaveChanges">
            <summary>
            Submits all modifications in the cache to the data store.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.GetProject">
            <summary>
            Retrieves the current project.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.IRepository.UpdateProject">
            <summary>
            Updates the current project.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.DeleteProject">
            <summary>
            Deletes the current project.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.GetModel">
            <summary>
            Retrieves the current model.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.IRepository.InsertModel(Dataweb.NShape.Advanced.Model)">
            <summary>
            Inserts a new model.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.UpdateModel(Dataweb.NShape.Advanced.Model)">
            <summary>
            Updates the current model.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.DeleteModel(Dataweb.NShape.Advanced.Model)">
            <summary>
            Deletes the current model.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.UndeleteModel(Dataweb.NShape.Advanced.Model)">
            <summary>
            Undeletes the current model.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.GetDesigns">
            <summary>
            Retrieves all known designs.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.IRepository.GetDesign(System.Object)">
            <summary>
            Fetches a single design object from the cache.
            </summary>
            <param name="id">Id of design to fetch. Null to indicate the project design.</param>
            <returns>Reference to object</returns>
        </member>
        <member name="M:Dataweb.NShape.IRepository.InsertDesign(Dataweb.NShape.Design)">
            <summary>
            Inserts a new design into the cache.
            </summary>
            <param name="design"></param>
        </member>
        <member name="M:Dataweb.NShape.IRepository.GetDiagram(System.Object)">
            <summary>
            Fetches a single diagram object from the cache.
            </summary>
            <param name="id">Id of object to fetch</param>
            <returns>Reference to object or null, if object was not found.</returns>
        </member>
        <member name="M:Dataweb.NShape.IRepository.GetDiagram(System.String)">
            <summary>
            Fetches a single diagram identified by its projectName.
            </summary>
            <param name="projectName"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.IRepository.GetDiagrams">
            <summary>
            Liefert die Liste aller Diagramme in diesem Projekt
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.IRepository.InsertDiagram(Dataweb.NShape.Diagram)">
            <summary>
            Fügt dem Projekt ein neues Diagramm hinzu.
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:Dataweb.NShape.IRepository.GetTemplate(System.Object)">
            <summary>
            Fetches a single object from the cache.
            </summary>
            <param name="id">Id of object to fetch</param>
            <returns>Reference to object or null, if object was not found.</returns>
        </member>
        <member name="M:Dataweb.NShape.IRepository.GetTemplate(System.String)">
            <summary>
            Fetches a single template given its projectName.
            </summary>
            <param name="projectName"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.IRepository.GetTemplates">
            <summary>
            Fetches all Templates in the project from the cache.
            </summary>
            <returns>Iterator to step through the Templates list.</returns>
        </member>
        <member name="M:Dataweb.NShape.IRepository.ReplaceTemplateShape(Dataweb.NShape.Advanced.Template,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Replaces the shape of the template.
            </summary>
            <param name="template"></param>
            <param name="oldShape"></param>
            <param name="newShape"></param>
        </member>
        <member name="M:Dataweb.NShape.IRepository.GetDiagramShapes(Dataweb.NShape.Diagram,System.Drawing.Rectangle[])">
            <summary>
            Makes sure that the shapes for the given diagram that intersect with one 
            of the given rectangles are loaded.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.UpdateShapeOwner(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Diagram)">
            <summary>
            SaveChanges the shape's parent, which is now a diagram.
            </summary>
            <param name="shape">Shape whose parent has changed</param>
            <param name="diagram">New parent of the shape</param>
        </member>
        <member name="M:Dataweb.NShape.IRepository.UpdateShapeOwner(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.Shape)">
            <summary>
            SaveChanges the shape's parent, which is now a shape.
            </summary>
            <param name="shape">Shape whose parent has changed</param>
            <param name="parent">New parent of the shape</param>
        </member>
        <member name="M:Dataweb.NShape.IRepository.UnloadDiagramShapes(Dataweb.NShape.Diagram)">
            <summary>
            Removes all shapes of the diagram from the cache cache.
            </summary>
            <param name="diagram"></param>
        </member>
        <member name="M:Dataweb.NShape.IRepository.InsertShapeConnection(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Inserts a new shape connection into the cache.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.DeleteShapeConnection(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId)">
            <summary>
            Deletes a shape connection from the cache.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.IRepository.GetModelObject(System.Object)">
            <summary>
            Fetches a single object from the cache.
            </summary>
            <param name="id">Id of object to fetch</param>
            <returns>Reference to object or null, if object was not found.</returns>
        </member>
        <member name="M:Dataweb.NShape.IRepository.UnloadModelObjects(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.IModelObject})">
            <summary>
            Removes the given model objects from the repository cache.
            </summary>
            <param name="modelObjects"></param>
        </member>
        <member name="P:Dataweb.NShape.IRepository.Version">
            <summary>
            Specifies the base storage format version.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.IRepository.ProjectName">
            <summary>
            Specifies the project for this cache. Null if not set.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.IRepository.IsOpen">
            <summary>
            Indicates, whether the reposistory is open.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.IRepository.IsModified">
            <summary>
            Indicates, whether modifications have been performed since the last call
            to Open or SaveChanges.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IStoreCache">
            <summary>
            Provides access to NShape entities for stores.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IStoreCache.SetRepositoryBaseVersion(System.Int32)">
            <summary>
            Sets the repository version of the core libraries from a loading project.
            </summary>
            <param name="version"></param>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IStoreCache.RepositoryBaseVersion">
            <summary>
            Indicates the repository version of the core libraries.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetXml">
            <summary>
            Returns the XML representation of the data stored in the cache.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.ReadXml(System.IO.Stream)">
            <summary>
            Reads XML data into the cache using the specified System.IO.Stream.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.WriteXml(System.IO.Stream)">
            <summary>
            Writes the current cache content as XML data.
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.AddEntityType(Dataweb.NShape.Advanced.IEntityType)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.RemoveEntityType(System.String)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.RemoveAllEntityTypes">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.Exists">
            <overrice></overrice>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.Create">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.Open">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.Close">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.Erase">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.SaveChanges">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.ObtainNewBottomZOrder(Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.ObtainNewTopZOrder(Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetProject">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UpdateProject">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.DeleteProject">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetModel">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.InsertModel(Dataweb.NShape.Advanced.Model)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UpdateModel(Dataweb.NShape.Advanced.Model)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.DeleteModel(Dataweb.NShape.Advanced.Model)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetTemplates">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.InsertTemplate(Dataweb.NShape.Advanced.Template)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetTemplate(System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetTemplate(System.String)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UpdateTemplate(Dataweb.NShape.Advanced.Template)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.ReplaceTemplateShape(Dataweb.NShape.Advanced.Template,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.DeleteTemplate(Dataweb.NShape.Advanced.Template)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetDiagrams">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetDiagram(System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetDiagram(System.String)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.InsertDiagram(Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UpdateDiagram(Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.DeleteDiagram(Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetDiagramShapes(Dataweb.NShape.Diagram,System.Drawing.Rectangle[])">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.InsertShape(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.InsertShape(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.InsertShape(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.Template)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.InsertShapes(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.InsertShapes(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UpdateShape(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UpdateShapes(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UpdateShapeOwner(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UpdateShapeOwner(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.DeleteShape(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.DeleteShapes(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UndeleteShape(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UndeleteShape(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UndeleteShapes(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UndeleteShapes(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UnloadDiagramShapes(Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.InsertShapeConnection(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.DeleteShapeConnection(Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ControlPointId)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetModelObject(System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetDesigns">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetDesign(System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.InsertDesign(Dataweb.NShape.Design)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UpdateDesign(Dataweb.NShape.Design)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.DeleteDesign(Dataweb.NShape.Design)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UndeleteDesign(Dataweb.NShape.Design)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.InsertStyle(Dataweb.NShape.Design,Dataweb.NShape.IStyle)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UpdateStyle(Dataweb.NShape.IStyle)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.DeleteStyle(Dataweb.NShape.IStyle)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UndeleteStyle(Dataweb.NShape.Design,Dataweb.NShape.IStyle)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.CalcElementName(System.String)">
            <summary>
            Calculates an XML tag projectName for the given entity projectName.
            </summary>
            <param name="elementTag"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.GetProjectStyle(System.Object)">
            <summary>
            Retrieves the indicated project style, which is always loaded when the project 
            is open.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.InsertEntity``1(System.Collections.Generic.Dictionary{``0,Dataweb.NShape.Advanced.IEntity},``0,Dataweb.NShape.Advanced.IEntity)">
            <summary>
            Inserts an entity into the internal cache and marks it as new.
            </summary>
            <typeparam projectName="TEntity"></typeparam>
            
            <param name="newEntities"></param>
            <param name="entity"></param>
            <param name="owner"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.UpdateEntity``1(System.Collections.Generic.Dictionary{System.Object,Dataweb.NShape.Advanced.EntityBucket{``0}},System.Collections.Generic.Dictionary{``0,Dataweb.NShape.Advanced.IEntity},``0)">
            <summary>
            Updates an entity in the internal cache and marks it as modified.
            </summary>
            <typeparam projectName="TEntity"></typeparam>
            <param name="loadedEntities"></param>
            <param name="newEntities"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.DeleteEntity``1(System.Collections.Generic.Dictionary{System.Object,Dataweb.NShape.Advanced.EntityBucket{``0}},System.Collections.Generic.Dictionary{``0,Dataweb.NShape.Advanced.IEntity},``0)">
            <summary>
            Marks the entity for deletion from the data store. 
            Must be called after all children have been removed.
            </summary>
            <typeparam projectName="TEntity"></typeparam>
            <param name="loadedEntities"></param>
            <param name="newEntities"></param>
            <param name="entity"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.CachedRepository.AssertValid">
            <summary>
            Tests the invariants of the offline cache object.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.CachedRepository.isModified">
            <summary>
            True, when modfications have been done to any part of the projects since
            Open or SaveChanges. 
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.CachedRepository.settings">
            <summary>
            Reference to the open project for easier access.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.CachedRepository.projectDesign">
            <summary>
            Indicates the pseudo design used to manage the styles of the project.
            This design is not entered in the designs or newDesigns dictionaries.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.CachedRepository.ProjectName">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.CachedRepository.IsModified">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.CachedRepository.IsOpen">
            <override></override>
        </member>
        <member name="E:Dataweb.NShape.Advanced.CachedRepository.TemplateInserted">
            <override></override>
        </member>
        <member name="E:Dataweb.NShape.Advanced.CachedRepository.TemplateUpdated">
            <override></override>
        </member>
        <member name="E:Dataweb.NShape.Advanced.CachedRepository.TemplateShapeReplaced">
            <override></override>
        </member>
        <member name="E:Dataweb.NShape.Advanced.CachedRepository.TemplateDeleted">
            <override></override>
        </member>
        <member name="E:Dataweb.NShape.Advanced.CachedRepository.DiagramInserted">
            <override></override>
        </member>
        <member name="E:Dataweb.NShape.Advanced.CachedRepository.DiagramUpdated">
            <override></override>
        </member>
        <member name="E:Dataweb.NShape.Advanced.CachedRepository.DiagramDeleted">
            <override></override>
        </member>
        <member name="E:Dataweb.NShape.Advanced.CachedRepository.ShapesInserted">
            <override></override>
        </member>
        <member name="E:Dataweb.NShape.Advanced.CachedRepository.ShapesUpdated">
            <override></override>
        </member>
        <member name="E:Dataweb.NShape.Advanced.CachedRepository.ShapesDeleted">
            <override></override>
        </member>
        <member name="T:Dataweb.NShape.Advanced.CachedRepository.LoadedEntities`1">
            <summary>
            Defines a dictionary for loaded entity types.
            </summary>
            <typeparam projectName="TEntity"></typeparam>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ICacheCollection`1">
            <summary>
            Provides access to NShape entities of one type for stores.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="T:Dataweb.NShape.Advanced.CachedRepository.ProjectOwner">
            <summary>
            Serves as a parent entity for the project info.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.History">
            <summary>
            Stores a sequence of commands for undo and redo operations.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.#ctor">
            <summary>
            Constructs a new history.
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.BeginAggregatingCommands">
            <summary>
            Starts collecting all added commands in an aggregated command.
            Aggregated commands can be undone with a single call of Undo()/Redo().
            While aggregating commands, the CommandAdded event will not be raised.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.EndAggregatingCommands">
            <summary>
            End aggregation of commands and adds the AggregatedCommand to the History. 
            Raises a CommandAdded event.
            Does not execute the collected commands.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.CancelAggregatingCommands">
            <summary>
            Cancels the aggregation of commands. All collected commands will be undone and not added to the history.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.GetRedoCommandDescriptions(System.Int32)">
            <summary>
            Returns descriptions of all available redo commands
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.GetUndoCommandDescriptions(System.Int32)">
            <summary>
            Returns descriptions of all available undo commands
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.GetRedoCommandDescriptions">
            <summary>
            Returns descriptions of all available redo commands
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.GetUndoCommandDescriptions">
            <summary>
            Returns descriptions of all available undo commands
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.GetRedoCommandDescription">
            <summary>
            Returns description of the next available redo command
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.GetUndoCommandDescription">
            <summary>
            Returns description of the next available undo command
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.IsNextUndoCommand(Dataweb.NShape.ICommand)">
            <summary>
            Indicates, whether the given command is the next one to undo.
            </summary>
            <param name="command"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.Undo">
            <summary>
            Undo the current action
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.Undo(System.Int32)">
            <summary>
            Undo the given number of commands at once.
            </summary>
            <param name="commandCount"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.Redo">
            <summary>
            Redo the last undone action
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.Redo(System.Int32)">
            <summary>
            Redo the given number of commands at once.
            </summary>
            <param name="commandCount"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.ExecuteAndAddCommand(Dataweb.NShape.ICommand)">
            <summary>
            Executes the given command and adds it to the Undo/Redo list
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.AddCommand(Dataweb.NShape.ICommand)">
            <summary>
            Adds a command to the History. The command will not be executed by this method.
            </summary>
            <param name="command"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.History.Clear">
            <summary>
            Clears all commands in the history.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.History.RedoCommandCount">
            <summary>
            Returns the number of commands that can be redone.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.History.UndoCommandCount">
            <summary>
            Returns the number of commands that can be undone.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.XmlStore">
            <summary>
            Uses an XML file as the data store.
            </summary>
            <remarks>XML capability should go to CachedRepository or even higher. So we 
            can create the XML document from any cache. Only responsibilities left 
            here, is how ids are generated.</remarks>
        </member>
        <member name="M:Dataweb.NShape.XmlStore.LoadDesigns(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.XmlStore.LoadModel(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.XmlStore.LoadTemplates(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.XmlStore.LoadDiagrams(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.XmlStore.LoadDiagramShapes(Dataweb.NShape.Advanced.IStoreCache,Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.XmlStore.LoadTemplateShapes(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.XmlStore.LoadChildShapes(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.XmlStore.LoadTemplateModelObjects(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.XmlStore.LoadModelModelObjects(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.XmlStore.LoadChildModelObjects(Dataweb.NShape.Advanced.IStoreCache,System.Object)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.XmlStore.SaveChanges(Dataweb.NShape.Advanced.IStoreCache)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.XmlStore.LoadShapeConnections(Dataweb.NShape.Advanced.IStoreCache,Dataweb.NShape.Diagram)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.XmlStore.CalcImageDirectoryName">
            <summary>
            Calculates the directory for the images given the complete file path.
            </summary>
            <param name="pathName"></param>
            <returns></returns>
        </member>
        <member name="F:Dataweb.NShape.XmlStore.isOpenComplete">
            <summary>Indicates that the whole file is in memory.</summary>
        </member>
        <member name="P:Dataweb.NShape.XmlStore.DirectoryName">
            <summary>
            Defines the directory, where the NShape project is stored.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.XmlStore.FileExtension">
            <summary>
            Specifies the desired extension for the project file.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.XmlStore.DesignFileName">
            <summary>
            Defines the file projectName without extension, where the NShape designs are stored.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.XmlStore.ProjectFilePath">
            <summary>
            Retrieves the file path of the project xml file.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.XmlStore.DesignFilePath">
            <summary>
            Retrieves the file path of the design xml file.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.XmlStore.XmlStoreWriter">
            <summary>
            Writes fields and inner objects to XML.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.XmlStore.XmlStoreReader">
            <summary>
            Implements a cache repositoryReader for XML.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Permission.ModifyPermissionSet">
            <summary>
            Copy another permission set
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Permission.Layout">
            <summary>
            Modify position, size, rotation or z-order of shapes
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Permission.Present">
            <summary>
            Modify the appearance of the shape (color, line thickness etc.) and assign another design
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Permission.ModifyData">
            <summary>
            Modify data properties
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Permission.Insert">
            <summary>
            Insert shape into diagram
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Permission.Delete">
            <summary>
            Remove shape from diagram
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Permission.Connect">
            <summary>
            Connect or disconnect shapes
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Permission.Templates">
            <summary>
            Edit, insert and delete templates
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Permission.Designs">
            <summary>
            Edit, insert and delete designs
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Permission.All">
            <summary>Everything</summary>
        </member>
        <member name="T:Dataweb.NShape.ISecurityManager">
            <summary>
            Controls the access to diagram operations.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.ISecurityManager.IsGranted(Dataweb.NShape.Permission)">
            <summary>
            Checks whether the given domain-independent permission is granted by for the current role.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.ISecurityManager.IsGranted(Dataweb.NShape.Permission,System.Char)">
            <summary>
            Checks  whether then given permission is granted for the domain and the current role.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.ISecurityManager.IsGranted(Dataweb.NShape.Permission,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Checks whether a given permission is granted for a given shape by the current
            user permissions.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.ISecurityManager.IsGranted(Dataweb.NShape.Permission,System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <summary>
            Checks whether a given permission is granted for all shapes of a list by 
            the current user permissions.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.DefaultSecurity">
            <summary>
            SecurityManager implementation based on a fixed set of user roles.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.DefaultSecurity.#ctor">
            <summary>
            Creates a default security object with standard roles and domains.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.DefaultSecurity.AddDomain(System.Char,System.String)">
            <summary>
            Adds a domain to the security.
            </summary>
            <param name="projectName"></param>
            <param name="description"></param>
        </member>
        <member name="M:Dataweb.NShape.DefaultSecurity.RemoveDomain(System.Char)">
            <summary>
            Removes a domain from the security.
            </summary>
            <param name="projectName"></param>
        </member>
        <member name="M:Dataweb.NShape.DefaultSecurity.AddRole(System.String,System.String)">
            <summary>
            Adds a role to the security.
            </summary>
            <param name="projectName"></param>
            <param name="description"></param>
        </member>
        <member name="M:Dataweb.NShape.DefaultSecurity.AddRole(System.String,System.String,System.String)">
            <summary>
            Adds a new security role by copying an existing one.
            </summary>
            <param name="projectName">Name of the new role</param>
            <param name="description">Description for the new role</param>
            <param name="sourceRole">Name of the role to copy</param>
        </member>
        <member name="M:Dataweb.NShape.DefaultSecurity.AddPermissions(System.Char,System.String,Dataweb.NShape.Permission)">
            <summary>
            Adds permissions for the given domain and role.
            </summary>
            <param name="domain"></param>
            <param name="role"></param>
            <param name="permissions"></param>
        </member>
        <member name="M:Dataweb.NShape.DefaultSecurity.SetPermissions(System.Char,System.String,Dataweb.NShape.Permission)">
            <summary>
            Redefines the permissions of the given domain and role.
            </summary>
            <param name="domain"></param>
            <param name="role"></param>
            <param name="permissions"></param>
        </member>
        <member name="M:Dataweb.NShape.DefaultSecurity.RemovePermissions(System.Char,System.String,Dataweb.NShape.Permission)">
            <summary>
            Removes permissions from the given domain and role.
            </summary>
            <param name="domain"></param>
            <param name="role"></param>
            <param name="permissions"></param>
        </member>
        <member name="M:Dataweb.NShape.DefaultSecurity.IsGranted(Dataweb.NShape.Permission)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.DefaultSecurity.IsGranted(Dataweb.NShape.Permission,System.Char)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.DefaultSecurity.IsGranted(Dataweb.NShape.Permission,Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.DefaultSecurity.IsGranted(Dataweb.NShape.Permission,System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape})">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.DefaultSecurity.CurrentRoleName">
            <summary>
            Defines the role of the current user.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.DefaultSecurity.CurrentRole">
            <summary>
            Defines the role of the current user.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ImageBasedShape">
            <summary>
            Abstract base class for shapes that draw themselves using a bitmap or
            meta file.
            </summary>
            <remarks>RequiredPermissions set</remarks>
        </member>
        <member name="T:Dataweb.NShape.Advanced.CustomizableMetaFile">
            <summary>
            Provides a metafile whose color and line color can be customized.
            </summary>
            <remarks>RequiredPermissions set</remarks>
        </member>
        <member name="T:Dataweb.NShape.Advanced.TextBase">
            <summary>
            Title shape.
            </summary>
            <remarks>RequiredPermissions set</remarks>
        </member>
        <member name="F:Dataweb.NShape.Advanced.LabelBase.GluePointCalcInfo.Distance">
            <summary>
            Distance between the target shape's outline and the anchor point.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.LabelBase.GluePointCalcInfo.RelativePosition">
            <summary>
            The relative position of the GluePoint inside the target shape. The target shape can calculate the new absolute position of the gluepoint using the RelativePosition.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.LabelBase.GluePointCalcInfo.Alpha">
            <summary>
            Angle between the normal vector of the target shape's outline intersection and the line through GluePoint and X|Y
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.LabelBase.GluePointCalcInfo.Beta">
            <summary>
            Angle between the normal vector of the GlueLabel's outline intersection and the line through GluePoint and X|Y
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.LabelBase.GluePointCalcInfo.LabelAngle">
            <summary>
            The own rotation of the label
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Controllers.TemplateControllerInitializingEventArgs">
            <summary>
            Encapsulates parameters for a TemplateController event raised when the TemplateController is initializing itself.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Controllers.TemplateControllerStringChangedEventArgs">
            <summary>
            Encapsulates parameters for a TemplateController event raised when the template's projectName is modified.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Controllers.TemplateControllerTemplateEventArgs">
            <summary>
            Encapsulates parameters for a template-related TemplateController event.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Controllers.TemplateControllerTemplateShapeReplacedEventArgs">
            <summary>
            Encapsulates parameters for a TemplateController event raised when template's shape is replaced ba a shape of another Type.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Controllers.TemplateControllerModelObjectReplacedEventArgs">
            <summary>
            Encapsulates parameters for a TemplateController event raised when template's model object is replaced by a model object of another ModelObejctType.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Controllers.TemplateControllerPropertyMappingChangedEventArgs">
            <summary>
            Encapsulates parameters for a TemplateController event raised when the mapping of ControlPointId to TerminalId is modified.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Controllers.TemplateControllerPointMappingChangedEventArgs">
            <summary>
            Encapsulates parameters for a TemplateController event raised when the mapping of shape's properties to modeloject's properties is modified.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Controllers.TemplateController">
            <summary>
            A non-visual component for editing templates. 
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.#ctor">
            <summary>
            Creates a new TemplateController instance
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.#ctor(Dataweb.NShape.Project,Dataweb.NShape.Advanced.Template)">
            <summary>
            Creates and initializes a new TemplateController instance
            </summary>
            <param name="projectInfo"></param>
            <param name="template"></param>
            <param name="newModelObject"></param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.Dataweb#NShape#Advanced#IDisplayService#Invalidate(System.Int32,System.Int32,System.Int32,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.Dataweb#NShape#Advanced#IDisplayService#Invalidate(System.Drawing.Rectangle)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.Dataweb#NShape#Advanced#IDisplayService#NotifyBoundsChanged">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.Initialize(Dataweb.NShape.Advanced.Template)">
            <summary>
            Calling this method initializes the TemplateController.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.Initialize(Dataweb.NShape.Project,Dataweb.NShape.Advanced.Template)">
            <summary>
            Calling this method initializes the TemplateController.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.SetTemplateName(System.String)">
            <summary>
            Rename the current template.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.SetTemplateTitle(System.String)">
            <summary>
            Change the current template's title.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.SetTemplateDescription(System.String)">
            <summary>
            Change the current template's description.
            </summary>
            <param name="projectName"></param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.SetTemplateShape(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Set the given shape as the template's shape.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.SetTemplateModel(Dataweb.NShape.Advanced.IModelObject)">
            <summary>
            Set the given Modelobject as the template's ModelObject
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.SetModelMapping(Dataweb.NShape.Advanced.IModelMapping)">
            <summary>
            Not yet implemented
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.DeleteModelMapping(Dataweb.NShape.Advanced.IModelMapping)">
            <summary>
            Deletes a ModelMapping
            </summary>
            <param name="modelMapping"></param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.SetTerminalConnectionPointMapping(Dataweb.NShape.Advanced.ControlPointId,Dataweb.NShape.Advanced.TerminalId)">
            <summary>
            If the template has no Modelobject, this method enables/disables ConnectionPoints of the shape.
            If the template has a ModelObject, this method assigns a ModelObject terminal to a ConnectionPoint of the shape
            </summary>
            <param name="connectionPointId">Id of the shape's ControlPoint</param>
            <param name="terminalId">Id of the Modelobject's Terminal. Pass -1 in order to clear the mapping.</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.ApplyChanges">
            <summary>
            Applies all changes made on the working template to the original template.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.DiscardChanges">
            <summary>
            Discards all changes made to the working copy of the original template.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.Clear">
            <summary>
            Clears all buffers and objects used by the TemplateController
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.TemplateController.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="P:Dataweb.NShape.Controllers.TemplateController.Dataweb#NShape#Advanced#IDisplayService#InfoGraphics">
            <override></override>
        </member>
        <member name="E:Dataweb.NShape.Controllers.TemplateController.Initializing">
            <summary>
            Raised when TemplateController Initializes
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.TemplateController.ApplyingChanges">
            <summary>
            Raised when changes are applied.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.TemplateController.DiscardingChanges">
            <summary>
            Raised when changes are discarded.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.TemplateController.TemplateModified">
            <summary>
            Raised when ever a property of the template (such as name, title or description) was changed.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.TemplateController.TemplateShapeModified">
            <summary>
            Raised when ever a property of the template's shape was changed.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.TemplateController.TemplateModelObjectModified">
            <summary>
            Raised when ever a property of the template's model object was changed.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.TemplateController.TemplateShapeChanged">
            <summary>
            Raised when the template's shape is replaced by another shape.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.TemplateController.TemplateModelObjectChanged">
            <summary>
            Raised when the template's ModelObject is replaced by another ModelObject
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.TemplateController.TemplateShapePropertyMappingSet">
            <summary>
            Raised when the property mapping between shape and ModelObject was created or changed
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.TemplateController.TemplateShapePropertyMappingDeleted">
            <summary>
            Raised when the property mapping between shape and ModelObject was deleted
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.TemplateController.TemplateShapeControlPointMappingChanged">
            <summary>
            Raised when ConnectionPoints were enabled/disabled or mapped to other Terminals of the underlying ModelObject
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.TemplateController.Project">
            <summary>
            The TemplateController's Project.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.TemplateController.EditMode">
            <summary>
            Specified wether the TemplateController edits an existing or creates a new template.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.TemplateController.Shapes">
            <summary>
            A list of all shapes available.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.TemplateController.ModelObjects">
            <summary>
            A list of all model objects available.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.TemplateController.WorkTemplate">
            <summary>
            A clone of the original template. This template will be modified. 
            When applying the changes, it will be copied into the original template property-by-property .
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.TemplateController.OriginalTemplate">
            <summary>
            The original template. Remains unchanged until applying changes.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.TemplateController.IsInitialized">
            <summary>
            Specifies wether the TemplateController is isInitialized completly
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ReadOnlyList`1">
            <summary>
            A list based class implementing the IReadOnlyCollection interface
            </summary>
            <typeparam projectName="T"></typeparam>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ReadOnlyList`1.#ctor">
            <override></override>
        </member>
        <member name="T:Dataweb.NShape.Advanced.TextMeasurer">
            <summary>
            Measures the extent of strings.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.TextMeasurer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,Dataweb.NShape.IParagraphStyle)">
            <summary>
            Measures the given text and returns its size.
            </summary>
            <param name="text">The text to measure</param>
            <param name="font">The text's font</param>
            <param name="proposedSize">The layout area of the text. Size.Empty means no fitting in area.</param>
            <param name="paragraphStyle">The paragraph layout of the text</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.TextMeasurer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,System.Drawing.StringFormat)">
            <summary>
            Measures the given text and returns its size.
            </summary>
            <param name="text">The text to measure</param>
            <param name="font">The text's font</param>
            <param name="proposedSize">The layout area of the text. Size.Empty means no fitting in area.</param>
            <param name="format">StringFormat object defining the layout of the text</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.TextMeasurer.MeasureText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Size,Dataweb.NShape.IParagraphStyle)">
            <summary>
            Measures the given text and returns its size.
            </summary>
            <param name="graphics">Graphics context used for the measuring</param>
            <param name="text">The text to measure</param>
            <param name="font">The text's font</param>
            <param name="proposedSize">The layout area of the text. Size.Empty means no fitting in area.</param>
            <param name="paragraphStyle">The paragraph layout of the text</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.TextMeasurer.MeasureText(System.Drawing.Graphics,System.String,System.Drawing.Font,System.Drawing.Size,System.Drawing.StringFormat)">
            <summary>
            Measures the given text and returns its size.
            </summary>
            <param name="graphics">Graphics context used for the measuring</param>
            <param name="text">The text to measure</param>
            <param name="font">The text's font</param>
            <param name="proposedSize">The layout area of the text. Size.Empty means no fitting in area.</param>
            <param name="format">StringFormat object defining the layout of the text</param>
            <returns></returns>
        </member>
        <member name="T:Dataweb.Utilities.ISimulatedAnnealingProblem">
            <summary>
            Defines the problem for the simulated annealing algorithm.
            </summary>
        </member>
        <member name="T:Dataweb.Utilities.MultiHashList`1">
            <summary>
            Implements a list, whose index is a hash value and which can have multiple items
            per index value.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ToolCache">
            <summary>
            Manages drawing tools for GDI+.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ToolCache.Clear">
            <summary>
            Releases all resources
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ToolCache.RemoveStyleSetTools(Dataweb.NShape.IStyleSet)">
            <summary>
            Releases resources used for styles of the the given StyleSet
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ToolCache.GetTransformedBrush(Dataweb.NShape.IFillStyle,System.Drawing.Rectangle,System.Drawing.Point,System.Int32)">
            <summary>
            Finds and returns the brush for the given FillStyle. The brush will be translated, scaled and rotated.
            </summary>
            <param name="fillStyle">The FillStyle the brush belongs to.</param>
            <param name="unrotatedBounds">BoundingRectangle of the unrotated shape.</param>
            <param name="shapeAngle">Angle in tenths of degrees.</param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ToolCache.GetCapBounds(Dataweb.NShape.ICapStyle,Dataweb.NShape.ILineStyle,System.Single)">
            <summary>
            Returns the untransformed bounding rectangle of the line cap defined by the given style.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ToolCache.NotifyCapStyleChanged(Dataweb.NShape.ICapStyle)">
            <summary>
            Deletes all tools based on the given CapStyle.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ToolCache.NotifyCharacterStyleChanged(Dataweb.NShape.ICharacterStyle)">
            <summary>
            Deletes all tools based on the given CharacterStyle.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ToolCache.NotifyColorStyleChanged(Dataweb.NShape.IColorStyle)">
            <summary>
            Deletes all tools based on the given ColorStyle.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ToolCache.NotifyFillStyleChanged(Dataweb.NShape.IFillStyle)">
            <summary>
            Deletes all tools based on the given FillStyle.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ToolCache.NotifyLineStyleChanged(Dataweb.NShape.ILineStyle)">
            <summary>
            Deletes all tools based on the given LineStyle.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ToolCache.NotifyParagraphStyleChanged(Dataweb.NShape.IParagraphStyle)">
            <summary>
            Deletes all tools based on the given ParagraphStyle.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ToolCache.NotifyShapeStyleChanged(Dataweb.NShape.IShapeStyle)">
            <summary>
            Deletes all tools based on the given ShapeStyle.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ToolCache.CalcCapShape(System.Drawing.Drawing2D.GraphicsPath@,Dataweb.NShape.CapShape,System.Int32)">
            <summary>
            (re)calculates the given GraphicsPath according to the given CapShape.
            </summary>
            <param name="capPath">Reference of the GraphicsPath to (re)calculate</param>
            <param name="capShape">Desired shape of the LineCap</param>
            <param name="capSize">Desired Size of the LineCap</param>
        </member>
        <member name="T:Dataweb.NShape.Controllers.ToolSetController">
            <summary>
            Controller class providing access to the templates of a project.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.Dataweb#NShape#Advanced#IDisplayService#Invalidate(System.Int32,System.Int32,System.Int32,System.Int32)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.Dataweb#NShape#Advanced#IDisplayService#Invalidate(System.Drawing.Rectangle)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.Dataweb#NShape#Advanced#IDisplayService#NotifyBoundsChanged">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.Clear">
            <summary>
            Removes all tools.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.CreateTemplateTool(Dataweb.NShape.Advanced.Template,System.String)">
            <summary>
            Creates a new tool for creating a templated shape.
            </summary>
            <param name="template">The template of the creation tool.</param>
            <param name="categoryTitle">Title of the toolbox category where the tool is inserted</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.CreateStandardTools">
            <summary>
            Creates the library indepandent standard tools of teh framework.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.AddTool(Dataweb.NShape.Advanced.Tool)">
            <summary>
            Adds a new tool.
            </summary>
            <param name="tool"></param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.AddTool(Dataweb.NShape.Advanced.Tool,System.Boolean)">
            <summary>
            Adds a new tool to the toolbox.
            </summary>
            <param name="tool">CurrentTool to add</param>
            <param name="isDefaultTool">If true, this tool becomes the default tool.</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.DeleteTool(Dataweb.NShape.Advanced.Tool)">
            <summary>
            Deletes the given tool.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.SelectTool(Dataweb.NShape.Advanced.Tool)">
            <summary>
             Sets the given tool as the selected tool.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.SelectTool(Dataweb.NShape.Advanced.Tool,System.Boolean)">
            <summary>
            Selects the given tool.
            </summary>
            <param name="tool">Tool to select.</param>
            <param name="multiUse">If false, the default tool will be selected after executing the tool.</param>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.FindTool(Dataweb.NShape.Advanced.Template)">
            <summary>
            Find the tool that contains the given template
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.ShowDesignEditor">
            <summary>
            Fires the DesignEditorSelected event. 
            If it is not handled, or the current role has not the necessary permissions, nothing will happen. 
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.ShowLibraryManager">
            <summary>
            Fires the DesignEditorSelected event. 
            If it is not handled, or the current role has not the necessary permissions, nothing will happen. 
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.ShowTemplateEditor(System.Boolean)">
            <summary>
            Show registered LibraryManagerSelected event for loading library assemblies
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.DeleteSelectedTemplate">
            <summary>
            Deletes the selected tool.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ToolSetController.GetActions(Dataweb.NShape.Advanced.Tool)">
            <summary>
            Get actions provided by the toolset controller.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Controllers.ToolSetController.repositoryInitialized">
            <summary>Indicates that event handlers have been added to the cache.</summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.ToolSetController.Dataweb#NShape#Advanced#IDisplayService#InfoGraphics">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Controllers.ToolSetController.Dataweb#NShape#Advanced#IDisplayService#HintBackgroundStyle">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Controllers.ToolSetController.Dataweb#NShape#Advanced#IDisplayService#HintForegroundStyle">
            <override></override>
        </member>
        <member name="E:Dataweb.NShape.Controllers.ToolSetController.Cleared">
            <summary>
            Occurs when the content of the toolbox has been cleared.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.ToolSetController.ToolSelected">
            <summary>
            Occurs when a tool has been selected.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.ToolSetController.ToolAdded">
            <summary>
            Occurs when a tool has been added to the toolbox.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.ToolSetController.ToolRemoved">
            <summary>
            Occurs when a tool has been removed from the toolbox.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.ToolSetController.ToolChanged">
            <summary>
            Occurs when a CurrentTool has been changed.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.ToolSetController.DesignEditorSelected">
            <summary>
            Occurs when the sesign editor has to be shown.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.ToolSetController.LibraryManagerSelected">
            <summary>
            Occurs when the library management dialog has to be shown.
            </summary>
        </member>
        <member name="E:Dataweb.NShape.Controllers.ToolSetController.TemplateEditorSelected">
            <summary>
            Occurs when the template editor has to be shown.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.ToolSetController.Project">
            <summary>
            Specifies the NShape project to which this toolbox belongs. This is 
            a mandatory property.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.TerminalId">
            <summary>
            Defines a connection port for a model object.
            </summary>
            <status>reviewed</status>
        </member>
        <member name="F:Dataweb.NShape.Advanced.TerminalId.Invalid">
            <summary>Specifies the invalid connection port.</summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.TerminalId.Generic">
            <summary>Specifies a port for the model object as a whole.</summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.TerminalId.op_Implicit(System.Int32)~Dataweb.NShape.Advanced.TerminalId">
            <summary>Converts an integer to a terminal id.</summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IModelObject">
            <summary>
            Defines the interface between the NShape framework and the model objects.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IModelObject.Clone">
            <summary>
            Creates a copy of this model object.
            </summary>
            <remarks>Composite objects are also cloned, references to aggregated objects are just copied.</remarks>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IModelObject.Connect(Dataweb.NShape.Advanced.TerminalId,Dataweb.NShape.Advanced.IModelObject,Dataweb.NShape.Advanced.TerminalId)">
            <summary>
            Connects the model object with another one.
            </summary>
            <param name="ownTerminalIndex"></param>
            <param name="targetConnector"></param>
            <param name="targetTerminalIndex"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IModelObject.Disconnect(Dataweb.NShape.Advanced.TerminalId,Dataweb.NShape.Advanced.IModelObject,Dataweb.NShape.Advanced.TerminalId)">
            <summary>
            Disconnects the model object from another one.
            </summary>
            <param name="ownTerminalIndex"></param>
            <param name="targetConnector"></param>
            <param name="targetTerminalIndex"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IModelObject.AttachShape(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Attaches an observing shape.
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IModelObject.DetachShape(Dataweb.NShape.Advanced.Shape)">
            <summary>
            Detaches an observing shape.
            </summary>
            <param name="shape"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IModelObject.GetInteger(System.Int32)">
            <summary>
            Retrieves the integer value of a field.
            </summary>
            <param name="propertyId"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IModelObject.GetFloat(System.Int32)">
            <summary>
            Retrieves the float value of a field.
            </summary>
            <param name="propertyId"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IModelObject.GetString(System.Int32)">
            <summary>
            Retrieves the string value of a field.
            </summary>
            <param name="propertyId"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.IModelObject.GetMenuItemDefs">
            <summary>
            Gets the possible actions for this model object.
            </summary>
            <returns></returns>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IModelObject.Name">
            <summary>
            Name of the model object. Is unique with siblings.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IModelObject.Type">
            <summary>
            Type of this model object
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IModelObject.Parent">
            <summary>
            Owning model object, can be null if this object is a root object.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.IModelObject.Shapes">
            <summary>
            Retrieves the attached shapes.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.CreateModelObjectDelegate">
            <summary>
            Represents the method that is called to create a model object.
            </summary>
            <param name="modelObjectType"></param>
            <returns></returns>
            <status>reviewed</status>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ModelObjectType">
            <summary>
            Represents a model object type.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ModelObjectType.#ctor(System.String,System.String,System.String,Dataweb.NShape.Advanced.CreateModelObjectDelegate,Dataweb.NShape.Advanced.GetPropertyDefinitionsDelegate)">
            <summary>
            Constructs a model object type.
            </summary>
            <param name="name"></param>
            <param name="namespaceName"></param>
            <param name="createModelObjectDelegate"></param>
            <param name="propertyInfos"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ModelObjectType.CreateInstance">
            <summary>
            Creates a model object instance of this type.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ModelObjectType.GetPropertyDefinitions(System.Int32)">
            <summary>
            Indicates the propertiese of the model object type.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ModelObjectType.GetTerminalName(Dataweb.NShape.Advanced.TerminalId)">
            <summary>
            Retreives the name of a terminal.
            </summary>
            <param name="terminalIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ModelObjectType.FindTerminalId(System.String)">
            <summary>
            Retrieves the id of a terminal.
            </summary>
            <param name="terminalName"></param>
            <returns></returns>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ModelObjectType.Name">
            <summary>
            Specifies the language invariant name of the model object type.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ModelObjectType.LibraryName">
            <summary>
            Indicates the name of the library where the model object type is implemented.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ModelObjectType.FullName">
            <summary>
            Specifies the full language invariant name of the model object type.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ModelObjectType.Description">
            <summary>
            Specifies the culture depending description of the model type.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ModelObjectType.DefaultCategoryTitle">
            <summary>
            Indicates the default for the culture depending category name.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ModelObjectType.MaxTerminalId">
            <summary>
            Indicates largest available terminal id for this type.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.IReadOnlyModelObjectTypeCollection">
            <summary>
            Defines a read-only collection of model object types.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ModelObjectTypeCollection">
            <summary>
            Manages a list of model object types.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ModelObjectTypeCollection.Add(Dataweb.NShape.Advanced.ModelObjectType)">
            <summary>
            Adds a model object type to the collection.
            </summary>
            <param name="modelObjectType"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ModelObjectTypeCollection.GetModelObjectType(System.String)">
            <summary>
            Retrieves the model object type with the given projectName.
            </summary>
            <param name="typeName">Either a full (i.e. including the namespace) or partial model object type projectName</param>
            <returns>ModelObjectTypes object type with given projectName.</returns>
        </member>
        <member name="T:Dataweb.NShape.Advanced.ModelObjectBase">
            <summary>
            Base class for model objects implementing naming, model hierarchy and shape management.
            </summary>
            <remarks>ModelObjectTypes objects can inherit from this class but need not.</remarks>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ModelObjectBase.AttachShape(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="M:Dataweb.NShape.Advanced.ModelObjectBase.DetachShape(Dataweb.NShape.Advanced.Shape)">
            <override></override>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ModelObjectBase.Parent">
            <summary>
            Parent of the model objects. Only the root object has no parent. Sometimes
            temporary objects have no parent and are therefore orphaned. E.g. when cloning
            model objects the clones do not have parents.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.ModelObjectBase.Shapes">
            <override></override>
        </member>
        <member name="T:Dataweb.NShape.Advanced.GenericModelObject">
            <summary>
            ModelObjectTypes object with configurable number and type of properties.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Controllers.MouseButtonsDg">
            <summary>
            This is the NShape representation of System.Windows.Forms.MouseButtons (Framework 2.0)
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Controllers.MouseButtonsDg.None">
            <summary>
            No mouse button was pressed.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Controllers.MouseButtonsDg.Left">
            <summary>
            The left mouse button was pressed.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Controllers.MouseButtonsDg.Right">
            <summary>
            The right mouse button was pressed.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Controllers.MouseButtonsDg.Middle">
            <summary>
            The middle mouse button was pressed.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Controllers.MouseButtonsDg.ExtraButton1">
            <summary>
            The first XButton was pressed.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Controllers.MouseButtonsDg.ExtraButton2">
            <summary>
            The second XButton was pressed.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Controllers.KeysDg">
            <summary>
            This is the NShape representation of System.Windows.Forms.Keys (Framework 2.0)
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.MouseEventArgsDg.EventType">
            <summary>
            Contains the type of MouseEvent that was raised.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.MouseEventArgsDg.Buttons">
            <summary>
            Contains a combination of all MouseButtons that were pressed.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.MouseEventArgsDg.Clicks">
            <summary>
            Contains the number of clicks.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.MouseEventArgsDg.WheelDelta">
            <summary>
            Contains a (signed) count of the number of detents the mouse wheel was rotated.
            A detent is one notch of the mouse wheel.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.MouseEventArgsDg.Position">
            <summary>
            Contains the position (in diagram coordinates) of the mouse cursor at the time the event was raised.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Controllers.MouseEventArgsDg.Modifiers">
            <summary>
            Contains the modifiers in case any modifier keys were pressed
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Controllers.KeyEventArgsDg.modifiers">
            <summary>
            The bitmask to extract modifiers from a key value.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Controllers.KeyEventArgsDg.keyCode">
            <summary>
            The bitmask to extract a key code from a key value.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Controllers.KeyEventArgsDg.shift">
            <summary>
            The SHIFT modifier key.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Controllers.KeyEventArgsDg.control">
            <summary>
            The CTRL modifier key.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Controllers.KeyEventArgsDg.alt">
            <summary>
            The ALT modifier key.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Controllers.DiagramSetController">
            <summary>
            Controls the behavior of a set of diagrams.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.DiagramSetController.GroupShapes(Dataweb.NShape.Diagram,System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},Dataweb.NShape.LayerIds)">
            <summary>
            Aggregates the selected shapes to a group.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.DiagramSetController.AggregateCompositeShape(Dataweb.NShape.Diagram,Dataweb.NShape.Advanced.Shape,System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},Dataweb.NShape.LayerIds)">
            <summary>
            Aggregate selected shapes to a composite shape based on the bottom shape.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.DiagramSetController.UngroupShapes(Dataweb.NShape.Diagram,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Ungroups the selected shapes or the selected shape aggregation.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.DiagramSetController.SplitCompositeShape(Dataweb.NShape.Diagram,Dataweb.NShape.Advanced.Shape)">
            <summary>
            Splits the selected composite shape into independent shapes.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.DiagramSetController.LiftShape(Dataweb.NShape.Diagram,Dataweb.NShape.Advanced.Shape,Dataweb.NShape.Advanced.ZOrderDestination)">
            <summary>
            Lists one shape on top or to bottom
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.DiagramSetController.LiftShapes(Dataweb.NShape.Diagram,System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.Shape},Dataweb.NShape.Advanced.ZOrderDestination)">
            <summary>
            Lifts a collection of shapes on top or to bottom.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.RenderingQuality.MaximumQuality">
            <summary>
            Best rendering Quality, lowest rendering speed.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.RenderingQuality.HighQuality">
            <summary>
            High quality rendering with acceptable performance loss.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.RenderingQuality.DefaultQuality">
            <summary>
            Rendering with system default settings.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.Advanced.RenderingQuality.LowQuality">
            <summary>
            Low Quality, high rendering speed.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GdiHelpers.ApplyGraphicsSettings(System.Drawing.Graphics,Dataweb.NShape.Advanced.RenderingQuality)">
            <summary>
            Sets all parameters that affect rendering quality / rendering speed
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GdiHelpers.ApplyGraphicsSettings(System.Drawing.Graphics,System.Drawing.Graphics)">
            <summary>
             Copy all parameters that affect rendering quality / rendering speed from the given infoGraphics.
            </summary>
            <param name="graphics"></param>
            <param name="renderingQuality"></param>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GdiHelpers.GetWrapMode(Dataweb.NShape.ImageLayoutMode)">
            <summary>
            Get a suitable GDI+ WrapMode out of the given NShapeImageLayout.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GdiHelpers.GetImageAttributes(Dataweb.NShape.IFillStyle)">
            <summary>
            Get ImageAttributes for drawing an images or creating a TextureBrush.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GdiHelpers.GetImageAttributes(Dataweb.NShape.ImageLayoutMode)">
            <summary>
            Get ImageAttributes for drawing an images or creating a TextureBrush.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GdiHelpers.GetImageAttributes(Dataweb.NShape.ImageLayoutMode,System.Drawing.Color)">
            <summary>
            Get ImageAttributes for drawing an images or creating a TextureBrush.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GdiHelpers.GetImageAttributes(Dataweb.NShape.ImageLayoutMode,System.Single,System.Byte,System.Boolean)">
            <summary>
            Get ImageAttributes for drawing an images or creating a TextureBrush.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GdiHelpers.GetImageAttributes(Dataweb.NShape.ImageLayoutMode,System.Single,System.Byte,System.Boolean,System.Boolean)">
            <summary>
            Get ImageAttributes for drawing an images or creating a TextureBrush.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GdiHelpers.GetImageAttributes(Dataweb.NShape.ImageLayoutMode,System.Single,System.Byte,System.Boolean,System.Boolean,System.Drawing.Color)">
            <summary>
            Get ImageAttributes for drawing an images or creating a TextureBrush.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GdiHelpers.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Imaging.ImageAttributes,Dataweb.NShape.ImageLayoutMode,System.Drawing.Rectangle,System.Drawing.Rectangle)">
            <summary>
            Draw an image into the specified bounds
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GdiHelpers.DrawImage(System.Drawing.Graphics,System.Drawing.Image,System.Drawing.Imaging.ImageAttributes,Dataweb.NShape.ImageLayoutMode,System.Drawing.Rectangle,System.Drawing.Rectangle,System.Single)">
            <summary>
            Draw an image into the specified bounds
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.GdiHelpers.CalcImageScaleAndAspect(System.Single@,System.Single@,System.Int32,System.Int32,System.Drawing.Image,Dataweb.NShape.ImageLayoutMode)">
            <summary>
            Calculates scale factors and Aspect ratio depending on the given ImageLayout.
            </summary>
            <param name="scaleFactorX">Scaling factor on X axis.</param>
            <param name="scaleFactorY">Scaling factor on Y axis.</param>
            <param name="dstWidth">The desired width of the image.</param>
            <param name="dstHeight">The desired height of the image.</param>
            <param name="image">the untransformed Image object.</param>
            <param name="imageLayout">ImageLayout enumeration. Deines the scaling behaviour.</param>
            <returns>Aspect ratio of the image.</returns>
        </member>
        <member name="T:Dataweb.NShape.RepositoryCommandType">
            <summary>
            Defines the operation on an entity.
            </summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.Insert">
            <summary>Inserts one entity of the given type.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.InsertDiagramShape">
            <summary>Inserts a shape of a diagram.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.InsertTemplateShape">
            <summary>Inserts the shape of a template.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.InsertChildShape">
            <summary>Inserts a child shape of a parent shape.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.InsertTemplateModelObject">
            <summary>Inserts the model object of a template.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.InsertModelModelObject">
            <summary>Inserts a model object or a child model object of a parent model object.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.InsertChildModelObject">
            <summary>Inserts a model object or a child model object of a parent model object.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.Update">
            <summary>Updates an entity of the given type.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.UpdateOwnerDiagram">
            <summary>Sets the owner of a shape to the given diagram.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.UpdateOwnerShape">
            <summary>Sets the owner of a shape to the given parent shape.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.UpdateOwnerModel">
            <summary>Sets the owner of a model object to the given model.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.UpdateOwnerModelObject">
            <summary>Sets the owner of a model object to the given model object.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.Delete">
            <summary>Deletes an entitiy of the given type identified by its id.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.SelectAll">
            <summary>Selects all entities of a given type.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.SelectById">
            <summary>Selects the entity of a given type with the indicated id.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.SelectByName">
            <summary>?</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.SelectByOwnerId">
            <summary>Selects all entities of a given type that have the indicated owner.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.SelectDiagramShapes">
            <summary>Selects shapes of a given diagram.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.SelectTemplateShapes">
            <summary>Selects the shape for a given template.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.SelectChildShapes">
            <summary>Selects shapes with a given parent shape.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.SelectTemplateModelObjects">
            <summary>Selects the model objects for a given template.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.SelectModelModelObjects">
            <summary>Selects model objects that have no parent model object.</summary>
        </member>
        <member name="F:Dataweb.NShape.RepositoryCommandType.SelectChildModelObjects">
            <summary>Selects model objects with a given parent model obejct.</summary>
        </member>
        <member name="M:Dataweb.NShape.Advanced.MenuItemDef.IsGranted(Dataweb.NShape.ISecurityManager)">
            <summary>
            Specifies if the action may or may not be executed due to security restrictions.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.MenuItemDef.Title">
            <summary>
            Culture invariant name that can be used as key for the presenting widget.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.MenuItemDef.Name">
            <summary>
            Culture-depending title to display as caption of the presenting widget.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.MenuItemDef.Description">
            <summary>
            This text is displayed as tool tip by the presenting widget.
            Describes the performed action if active, the reason why it is disabled if the requirement for the action 
            is not met (e.g. Unselecting shapes requires selected shapes) or the reason why the action is not allowed.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.MenuItemDef.SubItems">
            <summary>
            Subitems of the action.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.MenuItemDef.IsFeasible">
            <summary>
            True if all requirements for performing the action are met. If false, the presenting widget should appear disabled.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.MenuItemDef.Checked">
            <summary>
            True if the presenting item should appear as checked item.
            </summary>
        </member>
        <member name="P:Dataweb.NShape.Advanced.MenuItemDef.Image">
            <summary>
            An image for the presenting widget's icon.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.SeparatorMenuItemDef">
            <summary>
            Dummy action for creating MenuSeperators
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.NotImplementedMenuItemDef">
            <summary>
            Throws a NotImplementedException. 
            This class is meant as a placeholder and should never be used in a productive environment.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.DelegateMenuItemDef">
            <summary>
            Executes a given delegate.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.Advanced.CommandMenuItemDef">
            <summary>
            Adds a Command to the History and executes it.
            </summary>
        </member>
        <member name="M:Dataweb.NShape.Controllers.ModelController.DeleteModelObjects(System.Collections.Generic.IEnumerable{Dataweb.NShape.Advanced.IModelObject})">
            <summary>
            Deletes the given model obejcts and their attached shapes
            </summary>
            <param name="modelObjects"></param>
        </member>
        <member name="E:Dataweb.NShape.Controllers.ModelController.Changed">
            <summary>
            The Changed event will be raised whenever an object somehow related to a model object has changed.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.RepositoryProjectEventArgs">
            <summary>
            Encapsulates parameters for a project-related cache event.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.RepositoryModelEventArgs">
            <summary>
            Encapsulates parameters for a project-related cache event.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.RepositoryDesignEventArgs">
            <summary>
            Encapsulates parameters for a design-related cache event.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.RepositoryStyleEventArgs">
            <summary>
            Encapsulates parameters for a project-related cache event.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.RepositoryDiagramEventArgs">
            <summary>
            Encapsulates parameters for a diagram-related cache event.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.RepositoryTemplateEventArgs">
            <summary>
            Encapsulates parameters for a template-related cache event.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.RepositoryTemplateShapeReplacedEventArgs">
            <summary>
            Encapsulates parameters for a cache events raised when template shapes are exchanged.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.RepositoryShapeEventArgs">
            <summary>
            Encapsulates parameters for a shape-related cache event.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.RepositoryShapesEventArgs">
            <summary>
            Encapsulates parameters for a shape-related cache event.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.RepositoryModelObjectEventArgs">
            <summary>
            Encapsulates parameters for a modelobject-related cache event.
            </summary>
        </member>
        <member name="T:Dataweb.NShape.RepositoryModelObjectsEventArgs">
            <summary>
            Encapsulates parameters for a modelobject-related cache event.
            </summary>
        </member>
    </members>
</doc>
